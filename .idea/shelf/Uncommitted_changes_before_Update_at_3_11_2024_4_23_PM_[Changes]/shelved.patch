Index: backend/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const express = require(\"express\")\r\nconst cors = require(\"cors\")\r\n// retrieve the MySQL DB Configuration Module\r\nconst dbConnection = require(\"./config\")\r\n// use this library for parsing HTTP body requests\r\nvar bodyParser = require('body-parser');\r\nconst https = require('https');\r\nconst mainRoute = require('./routes/mainRoute');\r\nconst accountRoute = require('./routes/accountRoute');\r\n\r\nvar app = express(express.json); \r\n\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\n\r\napp.use('/', mainRoute);\r\napp.use('/', accountRoute);\r\n\r\n\r\n// (1) Retrieves stock info based on inputted stock symbol. used in Service.js\r\napp.get('/stock-info/:symbol', (req, res) => {\r\n    const { symbol } = req.params;\r\n    const ALPHA_VANTAGE_API_KEY = 'cn6i6k1r01qt2at49vtgcn6i6k1r01qt2at49vu0';\r\n    const url = `https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${symbol}&apikey=${ALPHA_VANTAGE_API_KEY}`;\r\n\r\n    https.get(url, (apiRes) => {\r\n        let data = '';\r\n\r\n        apiRes.on('data', (chunk) => {\r\n            data += chunk;\r\n        });\r\n\r\n        apiRes.on('end', () => {\r\n            try {\r\n                const parsedData = JSON.parse(data);\r\n                res.json(parsedData);\r\n            } catch (e) {\r\n                res.status(500).json({ message: 'Error parsing JSON response from Alpha Vantage' });\r\n            }\r\n        });\r\n\r\n    }).on('error', (e) => {\r\n        console.error(`Got error: ${e.message}`);\r\n        res.status(500).json({ message: 'Error fetching stock information from Alpha Vantage' });\r\n    });\r\n});\r\n\r\n\r\n// (2) Retrieves all stock information to display the stock price fluctuation graph. Used in Stock.js\r\napp.get('/stock-graph/:symbol', (req, res) => {\r\n    const { symbol } = req.params;\r\n    const ALPHA_VANTAGE_API_KEY = '8XSVL3X8346AJ8Q7';\r\n    const url = `https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=${symbol}&outputsize=compact&apikey=${ALPHA_VANTAGE_API_KEY}`;\r\n\r\n    https.get(url, (apiRes) => {\r\n        let data = '';\r\n\r\n        apiRes.on('data', (chunk) => {\r\n            data += chunk;\r\n        });\r\n\r\n        apiRes.on('end', () => {\r\n            try {\r\n                const parsedData = JSON.parse(data);\r\n                res.json(parsedData);\r\n            } catch (e) {\r\n                res.status(500).json({ message: 'Error parsing JSON response from Alpha Vantage' });\r\n            }\r\n        });\r\n\r\n    }).on('error', (e) => {\r\n        console.error(`Got error: ${e.message}`);\r\n        res.status(500).json({ message: 'Error fetching stock information from Alpha Vantage' });\r\n    });\r\n});\r\n\r\n\r\n// (3) Retrieves all records in Stock table (all the current user's stocks)\r\napp.get('/owned-stocks', (request, response) => {\r\n    const sqlQuery = \"SELECT * FROM Stocks;\";\r\n    dbConnection.query(sqlQuery, (err, result) => {\r\n    if (err) {\r\n    return response.status(400).json({Error: \"Error in the SQL statement. Please check.\"});\r\n    }\r\n    response.setHeader('SQLQuery', sqlQuery); // send a custom header attribute\r\n    return response.status(200).json(result);\r\n    });\r\n});\r\n\r\n\r\n// (4) Adds all owned stock prices - portfolio value\r\napp.get('/portfolio-value', (request, response) => {\r\n    const sqlQuery = \"SELECT SUM(CurrentPrice) AS TotalCurrentPrice FROM Stocks;\";\r\n    dbConnection.query(sqlQuery, (err, result) => {\r\n    if (err) {\r\n    return response.status(400).json({Error: \"Error in the SQL statement. Please check.\"});\r\n    }\r\n    response.setHeader('SQLQuery', sqlQuery); // send a custom header attribute\r\n    return response.status(200).json(result);\r\n    });\r\n});\r\n\r\n\r\n// (5) Returns the number all owned stock prices \r\napp.get('/stock-count', (request, response) => {\r\n    const sqlQuery = \"SELECT COUNT(*) AS TotalRows FROM Stocks;\";\r\n    dbConnection.query(sqlQuery, (err, result) => {\r\n    if (err) {\r\n    return response.status(400).json({Error: \"Error in the SQL statement. Please check.\"});\r\n    }\r\n    response.setHeader('SQLQuery', sqlQuery); \r\n    return response.status(200).json(result);\r\n    });\r\n});\r\n\r\n\r\n// (6) Retrieves Account Login info. response is Username and Password in JSON format\r\napp.get('/username-password', (request, response) => {\r\n    const sqlQuery = \"SELECT Username, Password FROM users;\";\r\n    dbConnection.query(sqlQuery, (err, result) => {\r\n    if (err) {\r\n    return response.status(400).json({Error: \"Error in the SQL statement. Please check.\"});\r\n    }\r\n    response.setHeader('SQLQuery', sqlQuery); \r\n    return response.status(200).json(result);\r\n    });\r\n});\r\n\r\n\r\n// (7) insert a new stock by stock symbol\r\napp.post('/buy-stock', (request, response) => {\r\n    const sqlQuery = 'INSERT INTO Stock VALUES (?);';\r\n    const values = [request.body.Symbol, request.body.PriceBought, request.body.CurrentPrice];\r\n    dbConnection.query(sqlQuery, [values], (err, result) => {\r\n    if (err) {\r\n    return response.status(400).json({Error: \"Failed: Record was not added.\"});\r\n    }\r\n    return response.status(200).json({Success: \"Successful: Record was added!.\"});\r\n    });\r\n});\r\n\r\n\r\n// (8) Delete a stock, called when user sells a stock\r\napp.delete('/sell-stock', (request, response) => {\r\n    const Symbol = request.params.Symbol;\r\n    const sqlQuery = \"DELETE FROM Stocks WHERE Symbol = ? ; \";\r\n    dbConnection.query(sqlQuery, Symbol, (err, result) => {\r\n    if (err) {\r\n    return response.status(400).json({ Error: \"Failed: Record was not deleted\" });\r\n    }\r\n    return response.status(200).json({ Success: \"Succcessful: Record was deleted!\" });\r\n    });\r\n});\r\n\r\n\r\n// (9) update the current price of an owned stock \r\napp.put('/update-current-price/:Symbol', (request, response) => {\r\n    const Symbol = request.params.Symbol; \r\n    const sqlQuery = `UPDATE Stocks SET CurrentPrice = ? WHERE Name = ?;`;\r\n    const values = [request.body.CurrentPrice, Symbol];\r\n\r\n    dbConnection.query(sqlQuery, values, (err, result) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return response.status(400).json({Error: \"Failed: Record was not updated.\"});\r\n        }\r\n        if (result.affectedRows === 0) {\r\n            return response.status(404).json({Error: \"Not Found: Stock was not found.\"});\r\n        }\r\n        return response.status(200).json({Success: \"Successful: Record was updated!\"});\r\n    });\r\n});\r\n\r\n\r\n// (10) update the password to something new \r\napp.put('/update-password', (request, response) => {\r\n    const newPassword = request.body.Password;\r\n    const sqlQuery = `UPDATE users SET Password = ?;`;\r\n    dbConnection.query(sqlQuery, [newPassword], (err, result) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return response.status(400).json({Error: \"Failed: Password was not updated.\"});\r\n        }\r\n        return response.status(200).json({Success: \"Successful: Password was updated!\"});\r\n    });\r\n});\r\n\r\n\r\n// (11) update the buying power, called when a stock is bought or sold \r\napp.put('/update-buying-power', (request, response) => {\r\n    const newBuyingPower = request.body.BuyingPower; \r\n    const sqlQuery = `UPDATE users SET BuyingPower = ?;`;\r\n    dbConnection.query(sqlQuery, [newBuyingPower], (err, result) => {\r\n        if (err) {\r\n            console.error(err);\r\n            return response.status(400).json({Error: \"Failed: BuyingPower was not updated.\"});\r\n        }\r\n        return response.status(200).json({Success: \"Successful: BuyingPower was updated!\"});\r\n    });\r\n});\r\n\r\n\r\n// (12) Retrieves Account Login info. response is Username and Password in JSON format\r\napp.get('/check-buying-power', (request, response) => {\r\n    const sqlQuery = \"SELECT BuyingPower FROM users;\";\r\n    dbConnection.query(sqlQuery, (err, result) => {\r\n    if (err) {\r\n    return response.status(400).json({Error: \"Error in the SQL statement. Please check.\"});\r\n    }\r\n    response.setHeader('SQLQuery', sqlQuery); \r\n    return response.status(200).json(result);\r\n    });\r\n});\r\n\r\n\r\n//  app.listen(2000, () => {\r\n//      console.log(\"Express server is running and listening\");\r\n//  }); \r\n\r\n\r\n// const express = require('express');\r\n// const cors = require('cors');\r\n// const bodyParser = require('body-parser');\r\nconst swaggerJsdoc = require('swagger-jsdoc');\r\nconst swaggerUi = require('swagger-ui-express');\r\n\r\n// const mainRoute = require('./routes/mainRoute');\r\n// const accountRoute = require('./routes/accountRoute');\r\n\r\n// const app = express();\r\n\r\n// app.use(cors());\r\n// app.use(bodyParser.json());\r\n\r\n// Swagger configuration\r\nconst options = {\r\n    definition: {\r\n        openapi: '3.0.0',\r\n        info: {\r\n            title: 'Stonks Street API Documentation',\r\n            version: '1.0.0',\r\n            description: 'An API for our Stock Market Stimulator.',\r\n            servers: ['http://localhost:' + 2000]\r\n\r\n        },\r\n    },\r\n    apis: ['./routes/*.js'], // Path to the API routes\r\n};\r\n\r\nconst specs = swaggerJsdoc(options);\r\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));\r\n\r\n// Mounting routes\r\napp.use('/', mainRoute);\r\napp.use('/', accountRoute);\r\n\r\nconst PORT = process.env.PORT || 2000;\r\napp.listen(PORT, () => {\r\n    console.log(`Server is running on port ${PORT}`);\r\n});\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/index.js b/backend/index.js
--- a/backend/index.js	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/index.js	(date 1710199279249)
@@ -8,6 +8,7 @@
 const mainRoute = require('./routes/mainRoute');
 const accountRoute = require('./routes/accountRoute');
 
+
 var app = express(express.json); 
 
 app.use(cors());
Index: frontend/src/components/Main.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport Service from './Service';\r\n\r\nfunction Main() {\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xs-6\" style={{ 'maxWidth': '100%' }}>\r\n                        <Service />\r\n                    </div>\r\n          \r\n                </div>\r\n                <div className=\"row\">\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/Main.js b/frontend/src/components/Main.js
--- a/frontend/src/components/Main.js	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/frontend/src/components/Main.js	(date 1710197589830)
@@ -1,5 +1,6 @@
 import React from 'react';
 import Service from './Service';
+import MyStocks from "./MyStocks";
 
 function Main() {
     return (
@@ -8,6 +9,7 @@
                 <div className="row">
                     <div className="col-xs-6" style={{ 'maxWidth': '100%' }}>
                         <Service />
+                        <MyStocks />
                     </div>
           
                 </div>
Index: frontend/src/components/MyAccount.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\n\r\nfunction MyAccount() {\r\n\r\n  return (\r\n      <div className=\"container\">\r\n          <h1>My Account</h1>\r\n          <form action=\"\">\r\n              <div className='mb-3'>\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <p></p>\r\n                  <input type=\"username\" placeholder='Enter Username'/>\r\n              </div>\r\n              <div className='mb-3'>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <p></p>\r\n                  <input type=\"password\" placeholder='Enter Password'/>\r\n              </div>\r\n              <button className='btn btn-success'>Log in</button>\r\n              <p></p>\r\n              <button className='btn btn-success'>Create Account</button>\r\n          </form>\r\n          <p>Welcome to your account page. You can view your current buying power as well as all the stocks you\r\n              currently own.</p>\r\n          {/* Add more account-related content here */}\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default MyAccount;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/MyAccount.js b/frontend/src/components/MyAccount.js
--- a/frontend/src/components/MyAccount.js	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/frontend/src/components/MyAccount.js	(date 1710193878840)
@@ -1,22 +1,41 @@
-import React from 'react';
+// import React from 'react';
+import navigate from "./Navigate";
+import React, { useState, useEffect } from "react";
+import axios from "axios";
 
 function MyAccount() {
+    const handleSubmit = async (e) => {
+        e.preventDefault();
+        try {
+            const response = await axios.get(decodeURI("http://localhost:3000/"+ acc.userName))
+            // console.log(response.data);
+
+            navigate("/");
+        } catch (err) {
+            console.log("Error: " + err);
+        }
+    };
+
+    const [ acc, setAcc] = useState({
+        userName: "",
+        pass: ""
+    });
 
   return (
       <div className="container">
           <h1>My Account</h1>
-          <form action="">
+          <form onSubmit={handleSubmit}>
               <div className='mb-3'>
                   <label htmlFor="username">Username</label>
                   <p></p>
-                  <input type="username" placeholder='Enter Username'/>
+                  <input type="username" placeholder='Enter Username' name="userName"/>
               </div>
               <div className='mb-3'>
                   <label htmlFor="password">Password</label>
                   <p></p>
-                  <input type="password" placeholder='Enter Password'/>
+                  <input type="password" placeholder='Enter Password' name="password"/>
               </div>
-              <button className='btn btn-success'>Log in</button>
+              <button type="submit" className='btn btn-success'>Log in</button>
               <p></p>
               <button className='btn btn-success'>Create Account</button>
           </form>
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ /dev/null	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
@@ -1,5 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Editor-based HTTP Client requests
-/httpRequests/
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
deleted file mode 100644
--- a/.idea/modules.xml	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ /dev/null	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/460Stonks.iml" filepath="$PROJECT_DIR$/.idea/460Stonks.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/460Stonks.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/460Stonks.iml b/.idea/460Stonks.iml
deleted file mode 100644
--- a/.idea/460Stonks.iml	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ /dev/null	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
@@ -1,12 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="WEB_MODULE" version="4">
-  <component name="NewModuleRootManager">
-    <content url="file://$MODULE_DIR$">
-      <excludeFolder url="file://$MODULE_DIR$/.tmp" />
-      <excludeFolder url="file://$MODULE_DIR$/temp" />
-      <excludeFolder url="file://$MODULE_DIR$/tmp" />
-    </content>
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
deleted file mode 100644
--- a/.idea/vcs.xml	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ /dev/null	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: backend/node_modules/side-channel/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar GetIntrinsic = require('get-intrinsic');\r\nvar callBound = require('call-bind/callBound');\r\nvar inspect = require('object-inspect');\r\n\r\nvar $TypeError = require('es-errors/type');\r\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\r\nvar $Map = GetIntrinsic('%Map%', true);\r\n\r\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\r\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\r\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\r\nvar $mapGet = callBound('Map.prototype.get', true);\r\nvar $mapSet = callBound('Map.prototype.set', true);\r\nvar $mapHas = callBound('Map.prototype.has', true);\r\n\r\n/*\r\n* This function traverses the list returning the node corresponding to the given key.\r\n*\r\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list. By doing so, all the recently used nodes can be accessed relatively quickly.\r\n*/\r\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\r\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\r\n\t\tif (curr.key === key) {\r\n\t\t\tprev.next = curr.next;\r\n\t\t\tcurr.next = list.next;\r\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\r\n\t\t\treturn curr;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nvar listGet = function (objects, key) {\r\n\tvar node = listGetNode(objects, key);\r\n\treturn node && node.value;\r\n};\r\nvar listSet = function (objects, key, value) {\r\n\tvar node = listGetNode(objects, key);\r\n\tif (node) {\r\n\t\tnode.value = value;\r\n\t} else {\r\n\t\t// Prepend the new node to the beginning of the list\r\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\r\n\t\t\tkey: key,\r\n\t\t\tnext: objects.next,\r\n\t\t\tvalue: value\r\n\t\t};\r\n\t}\r\n};\r\nvar listHas = function (objects, key) {\r\n\treturn !!listGetNode(objects, key);\r\n};\r\n\r\nmodule.exports = function getSideChannel() {\r\n\tvar $wm;\r\n\tvar $m;\r\n\tvar $o;\r\n\tvar channel = {\r\n\t\tassert: function (key) {\r\n\t\t\tif (!channel.has(key)) {\r\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\r\n\t\t\t}\r\n\t\t},\r\n\t\tget: function (key) { // eslint-disable-line consistent-return\r\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\r\n\t\t\t\tif ($wm) {\r\n\t\t\t\t\treturn $weakMapGet($wm, key);\r\n\t\t\t\t}\r\n\t\t\t} else if ($Map) {\r\n\t\t\t\tif ($m) {\r\n\t\t\t\t\treturn $mapGet($m, key);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\r\n\t\t\t\t\treturn listGet($o, key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\thas: function (key) {\r\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\r\n\t\t\t\tif ($wm) {\r\n\t\t\t\t\treturn $weakMapHas($wm, key);\r\n\t\t\t\t}\r\n\t\t\t} else if ($Map) {\r\n\t\t\t\tif ($m) {\r\n\t\t\t\t\treturn $mapHas($m, key);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\r\n\t\t\t\t\treturn listHas($o, key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tset: function (key, value) {\r\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\r\n\t\t\t\tif (!$wm) {\r\n\t\t\t\t\t$wm = new $WeakMap();\r\n\t\t\t\t}\r\n\t\t\t\t$weakMapSet($wm, key, value);\r\n\t\t\t} else if ($Map) {\r\n\t\t\t\tif (!$m) {\r\n\t\t\t\t\t$m = new $Map();\r\n\t\t\t\t}\r\n\t\t\t\t$mapSet($m, key, value);\r\n\t\t\t} else {\r\n\t\t\t\tif (!$o) {\r\n\t\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\r\n\t\t\t\t\t$o = { key: {}, next: null };\r\n\t\t\t\t}\r\n\t\t\t\tlistSet($o, key, value);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn channel;\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/side-channel/index.js b/backend/node_modules/side-channel/index.js
--- a/backend/node_modules/side-channel/index.js	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/side-channel/index.js	(date 1710190086721)
@@ -20,42 +20,54 @@
 *
 * That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list. By doing so, all the recently used nodes can be accessed relatively quickly.
 */
+/** @type {import('.').listGetNode} */
 var listGetNode = function (list, key) { // eslint-disable-line consistent-return
-	for (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {
+	/** @type {typeof list | NonNullable<(typeof list)['next']>} */
+	var prev = list;
+	/** @type {(typeof list)['next']} */
+	var curr;
+	for (; (curr = prev.next) !== null; prev = curr) {
 		if (curr.key === key) {
 			prev.next = curr.next;
-			curr.next = list.next;
+			// eslint-disable-next-line no-extra-parens
+			curr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);
 			list.next = curr; // eslint-disable-line no-param-reassign
 			return curr;
 		}
 	}
 };
 
+/** @type {import('.').listGet} */
 var listGet = function (objects, key) {
 	var node = listGetNode(objects, key);
 	return node && node.value;
 };
+/** @type {import('.').listSet} */
 var listSet = function (objects, key, value) {
 	var node = listGetNode(objects, key);
 	if (node) {
 		node.value = value;
 	} else {
 		// Prepend the new node to the beginning of the list
-		objects.next = { // eslint-disable-line no-param-reassign
+		objects.next = /** @type {import('.').ListNode<typeof value>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens
 			key: key,
 			next: objects.next,
 			value: value
-		};
+		});
 	}
 };
+/** @type {import('.').listHas} */
 var listHas = function (objects, key) {
 	return !!listGetNode(objects, key);
 };
 
+/** @type {import('.')} */
 module.exports = function getSideChannel() {
-	var $wm;
-	var $m;
-	var $o;
+	/** @type {WeakMap<object, unknown>} */ var $wm;
+	/** @type {Map<object, unknown>} */ var $m;
+	/** @type {import('.').RootNode<unknown>} */ var $o;
+
+	/** @type {import('.').Channel} */
 	var channel = {
 		assert: function (key) {
 			if (!channel.has(key)) {
Index: backend/node_modules/side-channel/CHANGELOG.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [v1.0.5](https://github.com/ljharb/side-channel/compare/v1.0.4...v1.0.5) - 2024-02-06\r\n\r\n### Commits\r\n\r\n- [actions] reuse common workflows [`3d2e1ff`](https://github.com/ljharb/side-channel/commit/3d2e1ffd16dd6eaaf3e40ff57951f840d2d63c04)\r\n- [meta] use `npmignore` to autogenerate an npmignore file [`04296ea`](https://github.com/ljharb/side-channel/commit/04296ea17d1544b0a5d20fd5bfb31aa4f6513eb9)\r\n- [meta] add `.editorconfig`; add `eclint` [`130f0a6`](https://github.com/ljharb/side-channel/commit/130f0a6adbc04d385c7456a601d38344dce3d6a9)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `safe-publish-latest`, `tape` [`d480c2f`](https://github.com/ljharb/side-channel/commit/d480c2fbe757489ae9b4275491ffbcc3ac4725e9)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `tape` [`ecbe70e`](https://github.com/ljharb/side-channel/commit/ecbe70e53a418234081a77971fec1fdfae20c841)\r\n- [actions] update rebase action [`75240b9`](https://github.com/ljharb/side-channel/commit/75240b9963b816e8846400d2287cb68f88c7fba7)\r\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `npmignore`, `tape` [`ae8d281`](https://github.com/ljharb/side-channel/commit/ae8d281572430099109870fd9430d2ca3f320b8d)\r\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `tape` [`7125b88`](https://github.com/ljharb/side-channel/commit/7125b885fd0eacad4fee9b073b72d14065ece278)\r\n- [Deps] update `call-bind`, `get-intrinsic`, `object-inspect` [`82577c9`](https://github.com/ljharb/side-channel/commit/82577c9796304519139a570f82a317211b5f3b86)\r\n- [Deps] update `call-bind`, `get-intrinsic`, `object-inspect` [`550aadf`](https://github.com/ljharb/side-channel/commit/550aadf20475a6081fd70304cc54f77259a5c8a8)\r\n- [Tests] increase coverage [`5130877`](https://github.com/ljharb/side-channel/commit/5130877a7b27c862e64e6d1c12a178b28808859d)\r\n- [Deps] update `get-intrinsic`, `object-inspect` [`ba0194c`](https://github.com/ljharb/side-channel/commit/ba0194c505b1a8a0427be14cadd5b8a46d4d01b8)\r\n- [meta] add missing `engines.node` [`985fd24`](https://github.com/ljharb/side-channel/commit/985fd249663cb06617a693a94fe08cad12f5cb70)\r\n- [Refactor] use `es-errors`, so things that only need those do not need `get-intrinsic` [`40227a8`](https://github.com/ljharb/side-channel/commit/40227a87b01709ad2c0eebf87eb4223a800099b9)\r\n- [Deps] update `get-intrinsic` [`a989b40`](https://github.com/ljharb/side-channel/commit/a989b4024958737ae7be9fbffdeff2078f33a0fd)\r\n- [Deps] update `object-inspect` [`aec42d2`](https://github.com/ljharb/side-channel/commit/aec42d2ec541a31aaa02475692c87d489237d9a3)\r\n\r\n## [v1.0.4](https://github.com/ljharb/side-channel/compare/v1.0.3...v1.0.4) - 2020-12-29\r\n\r\n### Commits\r\n\r\n- [Tests] migrate tests to Github Actions [`10909cb`](https://github.com/ljharb/side-channel/commit/10909cbf8ce9c0bf96f604cf13d7ffd5a22c2d40)\r\n- [Refactor] Use a linked list rather than an array, and move accessed nodes to the beginning [`195613f`](https://github.com/ljharb/side-channel/commit/195613f28b5c1e6072ef0b61b5beebaf2b6a304e)\r\n- [meta] do not publish github action workflow files [`290ec29`](https://github.com/ljharb/side-channel/commit/290ec29cd21a60585145b4a7237ec55228c52c27)\r\n- [Tests] run `nyc` on all tests; use `tape` runner [`ea6d030`](https://github.com/ljharb/side-channel/commit/ea6d030ff3fe6be2eca39e859d644c51ecd88869)\r\n- [actions] add \"Allow Edits\" workflow [`d464d8f`](https://github.com/ljharb/side-channel/commit/d464d8fe52b5eddf1504a0ed97f0941a90f32c15)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog` [`02daca8`](https://github.com/ljharb/side-channel/commit/02daca87c6809821c97be468d1afa2f5ef447383)\r\n- [Refactor] use `call-bind` and `get-intrinsic` instead of `es-abstract` [`e09d481`](https://github.com/ljharb/side-channel/commit/e09d481528452ebafa5cdeae1af665c35aa2deee)\r\n- [Deps] update `object.assign` [`ee83aa8`](https://github.com/ljharb/side-channel/commit/ee83aa81df313b5e46319a63adb05cf0c179079a)\r\n- [actions] update rebase action to use checkout v2 [`7726b0b`](https://github.com/ljharb/side-channel/commit/7726b0b058b632fccea709f58960871defaaa9d7)\r\n\r\n## [v1.0.3](https://github.com/ljharb/side-channel/compare/v1.0.2...v1.0.3) - 2020-08-23\r\n\r\n### Commits\r\n\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `tape` [`1f10561`](https://github.com/ljharb/side-channel/commit/1f105611ef3acf32dec8032ae5c0baa5e56bb868)\r\n- [Deps] update `es-abstract`, `object-inspect` [`bc20159`](https://github.com/ljharb/side-channel/commit/bc201597949a505e37cef9eaf24c7010831e6f03)\r\n- [Dev Deps] update `@ljharb/eslint-config`, `tape` [`b9b2b22`](https://github.com/ljharb/side-channel/commit/b9b2b225f9e0ea72a6ec2b89348f0bd690bc9ed1)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape` [`7055ab4`](https://github.com/ljharb/side-channel/commit/7055ab4de0860606efd2003674a74f1fe6ebc07e)\r\n- [Dev Deps] update `auto-changelog`; add `aud` [`d278c37`](https://github.com/ljharb/side-channel/commit/d278c37d08227be4f84aa769fcd919e73feeba40)\r\n- [actions] switch Automatic Rebase workflow to `pull_request_target` event [`3bcf982`](https://github.com/ljharb/side-channel/commit/3bcf982faa122745b39c33ce83d32fdf003741c6)\r\n- [Tests] only audit prod deps [`18d01c4`](https://github.com/ljharb/side-channel/commit/18d01c4015b82a3d75044c4d5ba7917b2eac01ec)\r\n- [Deps] update `es-abstract` [`6ab096d`](https://github.com/ljharb/side-channel/commit/6ab096d9de2b482cf5e0717e34e212f5b2b9bc9a)\r\n- [Dev Deps] update `tape` [`9dc174c`](https://github.com/ljharb/side-channel/commit/9dc174cc651dfd300b4b72da936a0a7eda5f9452)\r\n- [Deps] update `es-abstract` [`431d0f0`](https://github.com/ljharb/side-channel/commit/431d0f0ff11fbd2ae6f3115582a356d3a1cfce82)\r\n- [Deps] update `es-abstract` [`49869fd`](https://github.com/ljharb/side-channel/commit/49869fd323bf4453f0ba515c0fb265cf5ab7b932)\r\n- [meta] Add package.json to package's exports [`77d9cdc`](https://github.com/ljharb/side-channel/commit/77d9cdceb2a9e47700074f2ae0c0a202e7dac0d4)\r\n\r\n## [v1.0.2](https://github.com/ljharb/side-channel/compare/v1.0.1...v1.0.2) - 2019-12-20\r\n\r\n### Commits\r\n\r\n- [Dev Deps] update `@ljharb/eslint-config`, `tape` [`4a526df`](https://github.com/ljharb/side-channel/commit/4a526df44e4701566ed001ec78546193f818b082)\r\n- [Deps] update `es-abstract` [`d4f6e62`](https://github.com/ljharb/side-channel/commit/d4f6e629b6fb93a07415db7f30d3c90fd7f264fe)\r\n\r\n## [v1.0.1](https://github.com/ljharb/side-channel/compare/v1.0.0...v1.0.1) - 2019-12-01\r\n\r\n### Commits\r\n\r\n- [Fix] add missing \"exports\" [`d212907`](https://github.com/ljharb/side-channel/commit/d2129073abf0701a5343bf28aa2145617604dc2e)\r\n\r\n## v1.0.0 - 2019-12-01\r\n\r\n### Commits\r\n\r\n- Initial implementation [`dbebd3a`](https://github.com/ljharb/side-channel/commit/dbebd3a4b5ed64242f9a6810efe7c4214cd8cde4)\r\n- Initial tests [`73bdefe`](https://github.com/ljharb/side-channel/commit/73bdefe568c9076cf8c0b8719bc2141aec0e19b8)\r\n- Initial commit [`43c03e1`](https://github.com/ljharb/side-channel/commit/43c03e1c2849ec50a87b7a5cd76238a62b0b8770)\r\n- npm init [`5c090a7`](https://github.com/ljharb/side-channel/commit/5c090a765d66a5527d9889b89aeff78dee91348c)\r\n- [meta] add `auto-changelog` [`a5c4e56`](https://github.com/ljharb/side-channel/commit/a5c4e5675ec02d5eb4d84b4243aeea2a1d38fbec)\r\n- [actions] add automatic rebasing / merge commit blocking [`bab1683`](https://github.com/ljharb/side-channel/commit/bab1683d8f9754b086e94397699fdc645e0d7077)\r\n- [meta] add `funding` field; create FUNDING.yml [`63d7aea`](https://github.com/ljharb/side-channel/commit/63d7aeaf34f5650650ae97ca4b9fae685bd0937c)\r\n- [Tests] add `npm run lint` [`46a5a81`](https://github.com/ljharb/side-channel/commit/46a5a81705cd2664f83df232c01dbbf2ee952885)\r\n- Only apps should have lockfiles [`8b16b03`](https://github.com/ljharb/side-channel/commit/8b16b0305f00895d90c4e2e5773c854cfea0e448)\r\n- [meta] add `safe-publish-latest` [`2f098ef`](https://github.com/ljharb/side-channel/commit/2f098ef092a39399cfe548b19a1fc03c2fd2f490)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/side-channel/CHANGELOG.md b/backend/node_modules/side-channel/CHANGELOG.md
--- a/backend/node_modules/side-channel/CHANGELOG.md	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/side-channel/CHANGELOG.md	(date 1710190086752)
@@ -5,6 +5,15 @@
 The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
 and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
 
+## [v1.0.6](https://github.com/ljharb/side-channel/compare/v1.0.5...v1.0.6) - 2024-02-29
+
+### Commits
+
+- add types [`9beef66`](https://github.com/ljharb/side-channel/commit/9beef6643e6d717ea57bedabf86448123a7dd9e9)
+- [meta] simplify `exports` [`4334cf9`](https://github.com/ljharb/side-channel/commit/4334cf9df654151504c383b62a2f9ebdc8d9d5ac)
+- [Deps] update `call-bind` [`d6043c4`](https://github.com/ljharb/side-channel/commit/d6043c4d8f4d7be9037dd0f0419c7a2e0e39ec6a)
+- [Dev Deps] update `tape` [`6aca376`](https://github.com/ljharb/side-channel/commit/6aca3761868dc8cd5ff7fd9799bf6b95e09a6eb0)
+
 ## [v1.0.5](https://github.com/ljharb/side-channel/compare/v1.0.4...v1.0.5) - 2024-02-06
 
 ### Commits
Index: backend/node_modules/side-channel/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n\t\"name\": \"side-channel\",\r\n\t\"version\": \"1.0.5\",\r\n\t\"description\": \"Store information about any JS value in a side channel. Uses WeakMap if available.\",\r\n\t\"main\": \"index.js\",\r\n\t\"exports\": {\r\n\t\t\"./package.json\": \"./package.json\",\r\n\t\t\".\": [\r\n\t\t\t{\r\n\t\t\t\t\"default\": \"./index.js\"\r\n\t\t\t},\r\n\t\t\t\"./index.js\"\r\n\t\t]\r\n\t},\r\n\t\"scripts\": {\r\n\t\t\"prepack\": \"npmignore --auto --commentLines=autogenerated\",\r\n\t\t\"prepublishOnly\": \"safe-publish-latest\",\r\n\t\t\"prepublish\": \"not-in-publish || npm run prepublishOnly\",\r\n\t\t\"prelint\": \"eclint check $(git ls-files | xargs find 2> /dev/null | grep -vE 'node_modules|\\\\.git')\",\r\n\t\t\"lint\": \"eslint --ext=js,mjs .\",\r\n\t\t\"pretest\": \"npm run lint\",\r\n\t\t\"tests-only\": \"nyc tape 'test/**/*.js'\",\r\n\t\t\"test\": \"npm run tests-only\",\r\n\t\t\"posttest\": \"aud --production\",\r\n\t\t\"version\": \"auto-changelog && git add CHANGELOG.md\",\r\n\t\t\"postversion\": \"auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \\\"v$(node -e \\\"console.log(require('./package.json').version)\\\")\\\"\"\r\n\t},\r\n\t\"repository\": {\r\n\t\t\"type\": \"git\",\r\n\t\t\"url\": \"git+https://github.com/ljharb/side-channel.git\"\r\n\t},\r\n\t\"keywords\": [\r\n\t\t\"weakmap\",\r\n\t\t\"map\",\r\n\t\t\"side\",\r\n\t\t\"channel\",\r\n\t\t\"metadata\"\r\n\t],\r\n\t\"author\": \"Jordan Harband <ljharb@gmail.com>\",\r\n\t\"funding\": {\r\n\t\t\"url\": \"https://github.com/sponsors/ljharb\"\r\n\t},\r\n\t\"license\": \"MIT\",\r\n\t\"bugs\": {\r\n\t\t\"url\": \"https://github.com/ljharb/side-channel/issues\"\r\n\t},\r\n\t\"homepage\": \"https://github.com/ljharb/side-channel#readme\",\r\n\t\"devDependencies\": {\r\n\t\t\"@ljharb/eslint-config\": \"^21.1.0\",\r\n\t\t\"aud\": \"^2.0.4\",\r\n\t\t\"auto-changelog\": \"^2.4.0\",\r\n\t\t\"eclint\": \"^2.8.1\",\r\n\t\t\"eslint\": \"=8.8.0\",\r\n\t\t\"in-publish\": \"^2.0.1\",\r\n\t\t\"npmignore\": \"^0.3.1\",\r\n\t\t\"nyc\": \"^10.3.2\",\r\n\t\t\"safe-publish-latest\": \"^2.0.0\",\r\n\t\t\"tape\": \"^5.7.4\"\r\n\t},\r\n\t\"dependencies\": {\r\n\t\t\"call-bind\": \"^1.0.6\",\r\n\t\t\"es-errors\": \"^1.3.0\",\r\n\t\t\"get-intrinsic\": \"^1.2.4\",\r\n\t\t\"object-inspect\": \"^1.13.1\"\r\n\t},\r\n\t\"auto-changelog\": {\r\n\t\t\"output\": \"CHANGELOG.md\",\r\n\t\t\"template\": \"keepachangelog\",\r\n\t\t\"unreleased\": false,\r\n\t\t\"commitLimit\": false,\r\n\t\t\"backfillLimit\": false,\r\n\t\t\"hideCredit\": true\r\n\t},\r\n\t\"publishConfig\": {\r\n\t\t\"ignore\": [\r\n\t\t\t\".github/workflows\"\r\n\t\t]\r\n\t},\r\n\t\"engines\": {\r\n\t\t\"node\": \">= 0.4\"\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/side-channel/package.json b/backend/node_modules/side-channel/package.json
--- a/backend/node_modules/side-channel/package.json	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/side-channel/package.json	(date 1710190086740)
@@ -1,23 +1,20 @@
 {
 	"name": "side-channel",
-	"version": "1.0.5",
+	"version": "1.0.6",
 	"description": "Store information about any JS value in a side channel. Uses WeakMap if available.",
 	"main": "index.js",
 	"exports": {
 		"./package.json": "./package.json",
-		".": [
-			{
-				"default": "./index.js"
-			},
-			"./index.js"
-		]
+		".": "./index.js"
 	},
+	"types": "./index.d.ts",
 	"scripts": {
 		"prepack": "npmignore --auto --commentLines=autogenerated",
 		"prepublishOnly": "safe-publish-latest",
 		"prepublish": "not-in-publish || npm run prepublishOnly",
 		"prelint": "eclint check $(git ls-files | xargs find 2> /dev/null | grep -vE 'node_modules|\\.git')",
 		"lint": "eslint --ext=js,mjs .",
+		"postlint": "tsc -p .",
 		"pretest": "npm run lint",
 		"tests-only": "nyc tape 'test/**/*.js'",
 		"test": "npm run tests-only",
@@ -47,6 +44,10 @@
 	"homepage": "https://github.com/ljharb/side-channel#readme",
 	"devDependencies": {
 		"@ljharb/eslint-config": "^21.1.0",
+		"@types/call-bind": "^1.0.5",
+		"@types/get-intrinsic": "^1.2.2",
+		"@types/object-inspect": "^1.8.4",
+		"@types/tape": "^5.6.4",
 		"aud": "^2.0.4",
 		"auto-changelog": "^2.4.0",
 		"eclint": "^2.8.1",
@@ -55,10 +56,11 @@
 		"npmignore": "^0.3.1",
 		"nyc": "^10.3.2",
 		"safe-publish-latest": "^2.0.0",
-		"tape": "^5.7.4"
+		"tape": "^5.7.5",
+		"typescript": "next"
 	},
 	"dependencies": {
-		"call-bind": "^1.0.6",
+		"call-bind": "^1.0.7",
 		"es-errors": "^1.3.0",
 		"get-intrinsic": "^1.2.4",
 		"object-inspect": "^1.13.1"
Index: backend/node_modules/raw-body/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * raw-body\r\n * Copyright(c) 2013-2014 Jonathan Ong\r\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar asyncHooks = tryRequireAsyncHooks()\r\nvar bytes = require('bytes')\r\nvar createError = require('http-errors')\r\nvar iconv = require('iconv-lite')\r\nvar unpipe = require('unpipe')\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = getRawBody\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar ICONV_ENCODING_MESSAGE_REGEXP = /^Encoding not recognized: /\r\n\r\n/**\r\n * Get the decoder for a given encoding.\r\n *\r\n * @param {string} encoding\r\n * @private\r\n */\r\n\r\nfunction getDecoder (encoding) {\r\n  if (!encoding) return null\r\n\r\n  try {\r\n    return iconv.getDecoder(encoding)\r\n  } catch (e) {\r\n    // error getting decoder\r\n    if (!ICONV_ENCODING_MESSAGE_REGEXP.test(e.message)) throw e\r\n\r\n    // the encoding was not found\r\n    throw createError(415, 'specified encoding unsupported', {\r\n      encoding: encoding,\r\n      type: 'encoding.unsupported'\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Get the raw body of a stream (typically HTTP).\r\n *\r\n * @param {object} stream\r\n * @param {object|string|function} [options]\r\n * @param {function} [callback]\r\n * @public\r\n */\r\n\r\nfunction getRawBody (stream, options, callback) {\r\n  var done = callback\r\n  var opts = options || {}\r\n\r\n  if (options === true || typeof options === 'string') {\r\n    // short cut for encoding\r\n    opts = {\r\n      encoding: options\r\n    }\r\n  }\r\n\r\n  if (typeof options === 'function') {\r\n    done = options\r\n    opts = {}\r\n  }\r\n\r\n  // validate callback is a function, if provided\r\n  if (done !== undefined && typeof done !== 'function') {\r\n    throw new TypeError('argument callback must be a function')\r\n  }\r\n\r\n  // require the callback without promises\r\n  if (!done && !global.Promise) {\r\n    throw new TypeError('argument callback is required')\r\n  }\r\n\r\n  // get encoding\r\n  var encoding = opts.encoding !== true\r\n    ? opts.encoding\r\n    : 'utf-8'\r\n\r\n  // convert the limit to an integer\r\n  var limit = bytes.parse(opts.limit)\r\n\r\n  // convert the expected length to an integer\r\n  var length = opts.length != null && !isNaN(opts.length)\r\n    ? parseInt(opts.length, 10)\r\n    : null\r\n\r\n  if (done) {\r\n    // classic callback style\r\n    return readStream(stream, encoding, length, limit, wrap(done))\r\n  }\r\n\r\n  return new Promise(function executor (resolve, reject) {\r\n    readStream(stream, encoding, length, limit, function onRead (err, buf) {\r\n      if (err) return reject(err)\r\n      resolve(buf)\r\n    })\r\n  })\r\n}\r\n\r\n/**\r\n * Halt a stream.\r\n *\r\n * @param {Object} stream\r\n * @private\r\n */\r\n\r\nfunction halt (stream) {\r\n  // unpipe everything from the stream\r\n  unpipe(stream)\r\n\r\n  // pause stream\r\n  if (typeof stream.pause === 'function') {\r\n    stream.pause()\r\n  }\r\n}\r\n\r\n/**\r\n * Read the data from the stream.\r\n *\r\n * @param {object} stream\r\n * @param {string} encoding\r\n * @param {number} length\r\n * @param {number} limit\r\n * @param {function} callback\r\n * @public\r\n */\r\n\r\nfunction readStream (stream, encoding, length, limit, callback) {\r\n  var complete = false\r\n  var sync = true\r\n\r\n  // check the length and limit options.\r\n  // note: we intentionally leave the stream paused,\r\n  // so users should handle the stream themselves.\r\n  if (limit !== null && length !== null && length > limit) {\r\n    return done(createError(413, 'request entity too large', {\r\n      expected: length,\r\n      length: length,\r\n      limit: limit,\r\n      type: 'entity.too.large'\r\n    }))\r\n  }\r\n\r\n  // streams1: assert request encoding is buffer.\r\n  // streams2+: assert the stream encoding is buffer.\r\n  //   stream._decoder: streams1\r\n  //   state.encoding: streams2\r\n  //   state.decoder: streams2, specifically < 0.10.6\r\n  var state = stream._readableState\r\n  if (stream._decoder || (state && (state.encoding || state.decoder))) {\r\n    // developer error\r\n    return done(createError(500, 'stream encoding should not be set', {\r\n      type: 'stream.encoding.set'\r\n    }))\r\n  }\r\n\r\n  if (typeof stream.readable !== 'undefined' && !stream.readable) {\r\n    return done(createError(500, 'stream is not readable', {\r\n      type: 'stream.not.readable'\r\n    }))\r\n  }\r\n\r\n  var received = 0\r\n  var decoder\r\n\r\n  try {\r\n    decoder = getDecoder(encoding)\r\n  } catch (err) {\r\n    return done(err)\r\n  }\r\n\r\n  var buffer = decoder\r\n    ? ''\r\n    : []\r\n\r\n  // attach listeners\r\n  stream.on('aborted', onAborted)\r\n  stream.on('close', cleanup)\r\n  stream.on('data', onData)\r\n  stream.on('end', onEnd)\r\n  stream.on('error', onEnd)\r\n\r\n  // mark sync section complete\r\n  sync = false\r\n\r\n  function done () {\r\n    var args = new Array(arguments.length)\r\n\r\n    // copy arguments\r\n    for (var i = 0; i < args.length; i++) {\r\n      args[i] = arguments[i]\r\n    }\r\n\r\n    // mark complete\r\n    complete = true\r\n\r\n    if (sync) {\r\n      process.nextTick(invokeCallback)\r\n    } else {\r\n      invokeCallback()\r\n    }\r\n\r\n    function invokeCallback () {\r\n      cleanup()\r\n\r\n      if (args[0]) {\r\n        // halt the stream on error\r\n        halt(stream)\r\n      }\r\n\r\n      callback.apply(null, args)\r\n    }\r\n  }\r\n\r\n  function onAborted () {\r\n    if (complete) return\r\n\r\n    done(createError(400, 'request aborted', {\r\n      code: 'ECONNABORTED',\r\n      expected: length,\r\n      length: length,\r\n      received: received,\r\n      type: 'request.aborted'\r\n    }))\r\n  }\r\n\r\n  function onData (chunk) {\r\n    if (complete) return\r\n\r\n    received += chunk.length\r\n\r\n    if (limit !== null && received > limit) {\r\n      done(createError(413, 'request entity too large', {\r\n        limit: limit,\r\n        received: received,\r\n        type: 'entity.too.large'\r\n      }))\r\n    } else if (decoder) {\r\n      buffer += decoder.write(chunk)\r\n    } else {\r\n      buffer.push(chunk)\r\n    }\r\n  }\r\n\r\n  function onEnd (err) {\r\n    if (complete) return\r\n    if (err) return done(err)\r\n\r\n    if (length !== null && received !== length) {\r\n      done(createError(400, 'request size did not match content length', {\r\n        expected: length,\r\n        length: length,\r\n        received: received,\r\n        type: 'request.size.invalid'\r\n      }))\r\n    } else {\r\n      var string = decoder\r\n        ? buffer + (decoder.end() || '')\r\n        : Buffer.concat(buffer)\r\n      done(null, string)\r\n    }\r\n  }\r\n\r\n  function cleanup () {\r\n    buffer = null\r\n\r\n    stream.removeListener('aborted', onAborted)\r\n    stream.removeListener('data', onData)\r\n    stream.removeListener('end', onEnd)\r\n    stream.removeListener('error', onEnd)\r\n    stream.removeListener('close', cleanup)\r\n  }\r\n}\r\n\r\n/**\r\n * Try to require async_hooks\r\n * @private\r\n */\r\n\r\nfunction tryRequireAsyncHooks () {\r\n  try {\r\n    return require('async_hooks')\r\n  } catch (e) {\r\n    return {}\r\n  }\r\n}\r\n\r\n/**\r\n * Wrap function with async resource, if possible.\r\n * AsyncResource.bind static method backported.\r\n * @private\r\n */\r\n\r\nfunction wrap (fn) {\r\n  var res\r\n\r\n  // create anonymous resource\r\n  if (asyncHooks.AsyncResource) {\r\n    res = new asyncHooks.AsyncResource(fn.name || 'bound-anonymous-fn')\r\n  }\r\n\r\n  // incompatible node.js\r\n  if (!res || !res.runInAsyncScope) {\r\n    return fn\r\n  }\r\n\r\n  // return bound function\r\n  return res.runInAsyncScope.bind(res, fn, null)\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/raw-body/index.js b/backend/node_modules/raw-body/index.js
--- a/backend/node_modules/raw-body/index.js	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/raw-body/index.js	(date 1710190086728)
@@ -69,6 +69,13 @@
   var done = callback
   var opts = options || {}
 
+  // light validation
+  if (stream === undefined) {
+    throw new TypeError('argument stream is required')
+  } else if (typeof stream !== 'object' || stream === null || typeof stream.on !== 'function') {
+    throw new TypeError('argument stream must be a stream')
+  }
+
   if (options === true || typeof options === 'string') {
     // short cut for encoding
     opts = {
Index: backend/node_modules/raw-body/HISTORY.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>2.5.1 / 2022-02-28\r\n==================\r\n\r\n  * Fix error on early async hooks implementations\r\n\r\n2.5.0 / 2022-02-21\r\n==================\r\n\r\n  * Prevent loss of async hooks context\r\n  * Prevent hanging when stream is not readable\r\n  * deps: http-errors@2.0.0\r\n    - deps: depd@2.0.0\r\n    - deps: statuses@2.0.1\r\n\r\n2.4.3 / 2022-02-14\r\n==================\r\n\r\n  * deps: bytes@3.1.2\r\n\r\n2.4.2 / 2021-11-16\r\n==================\r\n\r\n  * deps: bytes@3.1.1\r\n  * deps: http-errors@1.8.1\r\n    - deps: setprototypeof@1.2.0\r\n    - deps: toidentifier@1.0.1\r\n\r\n2.4.1 / 2019-06-25\r\n==================\r\n\r\n  * deps: http-errors@1.7.3\r\n    - deps: inherits@2.0.4\r\n\r\n2.4.0 / 2019-04-17\r\n==================\r\n\r\n  * deps: bytes@3.1.0\r\n    - Add petabyte (`pb`) support\r\n  * deps: http-errors@1.7.2\r\n    - Set constructor name when possible\r\n    - deps: setprototypeof@1.1.1\r\n    - deps: statuses@'>= 1.5.0 < 2'\r\n  * deps: iconv-lite@0.4.24\r\n    - Added encoding MIK\r\n\r\n2.3.3 / 2018-05-08\r\n==================\r\n\r\n  * deps: http-errors@1.6.3\r\n    - deps: depd@~1.1.2\r\n    - deps: setprototypeof@1.1.0\r\n    - deps: statuses@'>= 1.3.1 < 2'\r\n  * deps: iconv-lite@0.4.23\r\n    - Fix loading encoding with year appended\r\n    - Fix deprecation warnings on Node.js 10+\r\n\r\n2.3.2 / 2017-09-09\r\n==================\r\n\r\n  * deps: iconv-lite@0.4.19\r\n    - Fix ISO-8859-1 regression\r\n    - Update Windows-1255\r\n\r\n2.3.1 / 2017-09-07\r\n==================\r\n\r\n  * deps: bytes@3.0.0\r\n  * deps: http-errors@1.6.2\r\n    - deps: depd@1.1.1\r\n  * perf: skip buffer decoding on overage chunk\r\n\r\n2.3.0 / 2017-08-04\r\n==================\r\n\r\n  * Add TypeScript definitions\r\n  * Use `http-errors` for standard emitted errors\r\n  * deps: bytes@2.5.0\r\n  * deps: iconv-lite@0.4.18\r\n    - Add support for React Native\r\n    - Add a warning if not loaded as utf-8\r\n    - Fix CESU-8 decoding in Node.js 8\r\n    - Improve speed of ISO-8859-1 encoding\r\n\r\n2.2.0 / 2017-01-02\r\n==================\r\n\r\n  * deps: iconv-lite@0.4.15\r\n    - Added encoding MS-31J\r\n    - Added encoding MS-932\r\n    - Added encoding MS-936\r\n    - Added encoding MS-949\r\n    - Added encoding MS-950\r\n    - Fix GBK/GB18030 handling of Euro character\r\n\r\n2.1.7 / 2016-06-19\r\n==================\r\n\r\n  * deps: bytes@2.4.0\r\n  * perf: remove double-cleanup on happy path\r\n\r\n2.1.6 / 2016-03-07\r\n==================\r\n\r\n  * deps: bytes@2.3.0\r\n    - Drop partial bytes on all parsed units\r\n    - Fix parsing byte string that looks like hex\r\n\r\n2.1.5 / 2015-11-30\r\n==================\r\n\r\n  * deps: bytes@2.2.0\r\n  * deps: iconv-lite@0.4.13\r\n\r\n2.1.4 / 2015-09-27\r\n==================\r\n\r\n  * Fix masking critical errors from `iconv-lite`\r\n  * deps: iconv-lite@0.4.12\r\n    - Fix CESU-8 decoding in Node.js 4.x\r\n\r\n2.1.3 / 2015-09-12\r\n==================\r\n\r\n  * Fix sync callback when attaching data listener causes sync read\r\n    - Node.js 0.10 compatibility issue\r\n\r\n2.1.2 / 2015-07-05\r\n==================\r\n\r\n  * Fix error stack traces to skip `makeError`\r\n  * deps: iconv-lite@0.4.11\r\n    - Add encoding CESU-8\r\n\r\n2.1.1 / 2015-06-14\r\n==================\r\n\r\n  * Use `unpipe` module for unpiping requests\r\n\r\n2.1.0 / 2015-05-28\r\n==================\r\n\r\n  * deps: iconv-lite@0.4.10\r\n    - Improved UTF-16 endianness detection\r\n    - Leading BOM is now removed when decoding\r\n    - The encoding UTF-16 without BOM now defaults to UTF-16LE when detection fails\r\n\r\n2.0.2 / 2015-05-21\r\n==================\r\n\r\n  * deps: bytes@2.1.0\r\n    - Slight optimizations\r\n\r\n2.0.1 / 2015-05-10\r\n==================\r\n\r\n  * Fix a false-positive when unpiping in Node.js 0.8\r\n\r\n2.0.0 / 2015-05-08\r\n==================\r\n\r\n  * Return a promise without callback instead of thunk\r\n  * deps: bytes@2.0.1\r\n    - units no longer case sensitive when parsing\r\n\r\n1.3.4 / 2015-04-15\r\n==================\r\n\r\n  * Fix hanging callback if request aborts during read\r\n  * deps: iconv-lite@0.4.8\r\n    - Add encoding alias UNICODE-1-1-UTF-7\r\n\r\n1.3.3 / 2015-02-08\r\n==================\r\n\r\n  * deps: iconv-lite@0.4.7\r\n    - Gracefully support enumerables on `Object.prototype`\r\n\r\n1.3.2 / 2015-01-20\r\n==================\r\n\r\n  * deps: iconv-lite@0.4.6\r\n    - Fix rare aliases of single-byte encodings\r\n\r\n1.3.1 / 2014-11-21\r\n==================\r\n\r\n  * deps: iconv-lite@0.4.5\r\n    - Fix Windows-31J and X-SJIS encoding support\r\n\r\n1.3.0 / 2014-07-20\r\n==================\r\n\r\n  * Fully unpipe the stream on error\r\n    - Fixes `Cannot switch to old mode now` error on Node.js 0.10+\r\n\r\n1.2.3 / 2014-07-20\r\n==================\r\n\r\n  * deps: iconv-lite@0.4.4\r\n    - Added encoding UTF-7\r\n\r\n1.2.2 / 2014-06-19\r\n==================\r\n\r\n  * Send invalid encoding error to callback\r\n\r\n1.2.1 / 2014-06-15\r\n==================\r\n\r\n  * deps: iconv-lite@0.4.3\r\n    - Added encodings UTF-16BE and UTF-16 with BOM\r\n\r\n1.2.0 / 2014-06-13\r\n==================\r\n\r\n  * Passing string as `options` interpreted as encoding\r\n  * Support all encodings from `iconv-lite`\r\n\r\n1.1.7 / 2014-06-12\r\n==================\r\n\r\n  * use `string_decoder` module from npm\r\n\r\n1.1.6 / 2014-05-27\r\n==================\r\n\r\n  * check encoding for old streams1\r\n  * support node.js < 0.10.6\r\n\r\n1.1.5 / 2014-05-14\r\n==================\r\n\r\n  * bump bytes\r\n\r\n1.1.4 / 2014-04-19\r\n==================\r\n\r\n  * allow true as an option\r\n  * bump bytes\r\n\r\n1.1.3 / 2014-03-02\r\n==================\r\n\r\n  * fix case when length=null\r\n\r\n1.1.2 / 2013-12-01\r\n==================\r\n\r\n  * be less strict on state.encoding check\r\n\r\n1.1.1 / 2013-11-27\r\n==================\r\n\r\n  * add engines\r\n\r\n1.1.0 / 2013-11-27\r\n==================\r\n\r\n  * add err.statusCode and err.type\r\n  * allow for encoding option to be true\r\n  * pause the stream instead of dumping on error\r\n  * throw if the stream's encoding is set\r\n\r\n1.0.1 / 2013-11-19\r\n==================\r\n\r\n  * dont support streams1, throw if dev set encoding\r\n\r\n1.0.0 / 2013-11-17\r\n==================\r\n\r\n  * rename `expected` option to `length`\r\n\r\n0.2.0 / 2013-11-15\r\n==================\r\n\r\n  * republish\r\n\r\n0.1.1 / 2013-11-15\r\n==================\r\n\r\n  * use bytes\r\n\r\n0.1.0 / 2013-11-11\r\n==================\r\n\r\n  * generator support\r\n\r\n0.0.3 / 2013-10-10\r\n==================\r\n\r\n  * update repo\r\n\r\n0.0.2 / 2013-09-14\r\n==================\r\n\r\n  * dump stream on bad headers\r\n  * listen to events after defining received and buffers\r\n\r\n0.0.1 / 2013-09-14\r\n==================\r\n\r\n  * Initial release\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/raw-body/HISTORY.md b/backend/node_modules/raw-body/HISTORY.md
--- a/backend/node_modules/raw-body/HISTORY.md	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/raw-body/HISTORY.md	(date 1710190086745)
@@ -1,3 +1,8 @@
+2.5.2 / 2023-02-21
+==================
+
+  * Fix error message for non-stream argument
+
 2.5.1 / 2022-02-28
 ==================
 
Index: backend/node_modules/raw-body/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"raw-body\",\r\n  \"description\": \"Get and validate the raw body of a readable stream.\",\r\n  \"version\": \"2.5.1\",\r\n  \"author\": \"Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)\",\r\n  \"contributors\": [\r\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\",\r\n    \"Raynos <raynos2@gmail.com>\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"repository\": \"stream-utils/raw-body\",\r\n  \"dependencies\": {\r\n    \"bytes\": \"3.1.2\",\r\n    \"http-errors\": \"2.0.0\",\r\n    \"iconv-lite\": \"0.4.24\",\r\n    \"unpipe\": \"1.0.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"bluebird\": \"3.7.2\",\r\n    \"eslint\": \"7.32.0\",\r\n    \"eslint-config-standard\": \"14.1.1\",\r\n    \"eslint-plugin-import\": \"2.25.4\",\r\n    \"eslint-plugin-markdown\": \"2.2.1\",\r\n    \"eslint-plugin-node\": \"11.1.0\",\r\n    \"eslint-plugin-promise\": \"5.2.0\",\r\n    \"eslint-plugin-standard\": \"4.1.0\",\r\n    \"mocha\": \"9.2.1\",\r\n    \"nyc\": \"15.1.0\",\r\n    \"readable-stream\": \"2.3.7\",\r\n    \"safe-buffer\": \"5.2.1\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">= 0.8\"\r\n  },\r\n  \"files\": [\r\n    \"HISTORY.md\",\r\n    \"LICENSE\",\r\n    \"README.md\",\r\n    \"SECURITY.md\",\r\n    \"index.d.ts\",\r\n    \"index.js\"\r\n  ],\r\n  \"scripts\": {\r\n    \"lint\": \"eslint .\",\r\n    \"test\": \"mocha --trace-deprecation --reporter spec --bail --check-leaks test/\",\r\n    \"test-ci\": \"nyc --reporter=lcovonly --reporter=text npm test\",\r\n    \"test-cov\": \"nyc --reporter=html --reporter=text npm test\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/raw-body/package.json b/backend/node_modules/raw-body/package.json
--- a/backend/node_modules/raw-body/package.json	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/raw-body/package.json	(date 1710190086736)
@@ -1,7 +1,7 @@
 {
   "name": "raw-body",
   "description": "Get and validate the raw body of a readable stream.",
-  "version": "2.5.1",
+  "version": "2.5.2",
   "author": "Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)",
   "contributors": [
     "Douglas Christopher Wilson <doug@somethingdoug.com>",
@@ -17,14 +17,14 @@
   },
   "devDependencies": {
     "bluebird": "3.7.2",
-    "eslint": "7.32.0",
-    "eslint-config-standard": "14.1.1",
-    "eslint-plugin-import": "2.25.4",
-    "eslint-plugin-markdown": "2.2.1",
+    "eslint": "8.34.0",
+    "eslint-config-standard": "15.0.1",
+    "eslint-plugin-import": "2.27.5",
+    "eslint-plugin-markdown": "3.0.0",
     "eslint-plugin-node": "11.1.0",
-    "eslint-plugin-promise": "5.2.0",
+    "eslint-plugin-promise": "6.1.1",
     "eslint-plugin-standard": "4.1.0",
-    "mocha": "9.2.1",
+    "mocha": "10.2.0",
     "nyc": "15.1.0",
     "readable-stream": "2.3.7",
     "safe-buffer": "5.2.1"
Index: backend/node_modules/raw-body/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># raw-body\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![Node.js Version][node-version-image]][node-version-url]\r\n[![Build status][github-actions-ci-image]][github-actions-ci-url]\r\n[![Test coverage][coveralls-image]][coveralls-url]\r\n\r\nGets the entire buffer of a stream either as a `Buffer` or a string.\r\nValidates the stream's length against an expected length and maximum limit.\r\nIdeal for parsing request bodies.\r\n\r\n## Install\r\n\r\nThis is a [Node.js](https://nodejs.org/en/) module available through the\r\n[npm registry](https://www.npmjs.com/). Installation is done using the\r\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\r\n\r\n```sh\r\n$ npm install raw-body\r\n```\r\n\r\n### TypeScript\r\n\r\nThis module includes a [TypeScript](https://www.typescriptlang.org/)\r\ndeclaration file to enable auto complete in compatible editors and type\r\ninformation for TypeScript projects. This module depends on the Node.js\r\ntypes, so install `@types/node`:\r\n\r\n```sh\r\n$ npm install @types/node\r\n```\r\n\r\n## API\r\n\r\n```js\r\nvar getRawBody = require('raw-body')\r\n```\r\n\r\n### getRawBody(stream, [options], [callback])\r\n\r\n**Returns a promise if no callback specified and global `Promise` exists.**\r\n\r\nOptions:\r\n\r\n- `length` - The length of the stream.\r\n  If the contents of the stream do not add up to this length,\r\n  an `400` error code is returned.\r\n- `limit` - The byte limit of the body.\r\n  This is the number of bytes or any string format supported by\r\n  [bytes](https://www.npmjs.com/package/bytes),\r\n  for example `1000`, `'500kb'` or `'3mb'`.\r\n  If the body ends up being larger than this limit,\r\n  a `413` error code is returned.\r\n- `encoding` - The encoding to use to decode the body into a string.\r\n  By default, a `Buffer` instance will be returned when no encoding is specified.\r\n  Most likely, you want `utf-8`, so setting `encoding` to `true` will decode as `utf-8`.\r\n  You can use any type of encoding supported by [iconv-lite](https://www.npmjs.org/package/iconv-lite#readme).\r\n\r\nYou can also pass a string in place of options to just specify the encoding.\r\n\r\nIf an error occurs, the stream will be paused, everything unpiped,\r\nand you are responsible for correctly disposing the stream.\r\nFor HTTP requests, you may need to finish consuming the stream if\r\nyou want to keep the socket open for future requests. For streams\r\nthat use file descriptors, you should `stream.destroy()` or\r\n`stream.close()` to prevent leaks.\r\n\r\n## Errors\r\n\r\nThis module creates errors depending on the error condition during reading.\r\nThe error may be an error from the underlying Node.js implementation, but is\r\notherwise an error created by this module, which has the following attributes:\r\n\r\n  * `limit` - the limit in bytes\r\n  * `length` and `expected` - the expected length of the stream\r\n  * `received` - the received bytes\r\n  * `encoding` - the invalid encoding\r\n  * `status` and `statusCode` - the corresponding status code for the error\r\n  * `type` - the error type\r\n\r\n### Types\r\n\r\nThe errors from this module have a `type` property which allows for the programmatic\r\ndetermination of the type of error returned.\r\n\r\n#### encoding.unsupported\r\n\r\nThis error will occur when the `encoding` option is specified, but the value does\r\nnot map to an encoding supported by the [iconv-lite](https://www.npmjs.org/package/iconv-lite#readme)\r\nmodule.\r\n\r\n#### entity.too.large\r\n\r\nThis error will occur when the `limit` option is specified, but the stream has\r\nan entity that is larger.\r\n\r\n#### request.aborted\r\n\r\nThis error will occur when the request stream is aborted by the client before\r\nreading the body has finished.\r\n\r\n#### request.size.invalid\r\n\r\nThis error will occur when the `length` option is specified, but the stream has\r\nemitted more bytes.\r\n\r\n#### stream.encoding.set\r\n\r\nThis error will occur when the given stream has an encoding set on it, making it\r\na decoded stream. The stream should not have an encoding set and is expected to\r\nemit `Buffer` objects.\r\n\r\n#### stream.not.readable\r\n\r\nThis error will occur when the given stream is not readable.\r\n\r\n## Examples\r\n\r\n### Simple Express example\r\n\r\n```js\r\nvar contentType = require('content-type')\r\nvar express = require('express')\r\nvar getRawBody = require('raw-body')\r\n\r\nvar app = express()\r\n\r\napp.use(function (req, res, next) {\r\n  getRawBody(req, {\r\n    length: req.headers['content-length'],\r\n    limit: '1mb',\r\n    encoding: contentType.parse(req).parameters.charset\r\n  }, function (err, string) {\r\n    if (err) return next(err)\r\n    req.text = string\r\n    next()\r\n  })\r\n})\r\n\r\n// now access req.text\r\n```\r\n\r\n### Simple Koa example\r\n\r\n```js\r\nvar contentType = require('content-type')\r\nvar getRawBody = require('raw-body')\r\nvar koa = require('koa')\r\n\r\nvar app = koa()\r\n\r\napp.use(function * (next) {\r\n  this.text = yield getRawBody(this.req, {\r\n    length: this.req.headers['content-length'],\r\n    limit: '1mb',\r\n    encoding: contentType.parse(this.req).parameters.charset\r\n  })\r\n  yield next\r\n})\r\n\r\n// now access this.text\r\n```\r\n\r\n### Using as a promise\r\n\r\nTo use this library as a promise, simply omit the `callback` and a promise is\r\nreturned, provided that a global `Promise` is defined.\r\n\r\n```js\r\nvar getRawBody = require('raw-body')\r\nvar http = require('http')\r\n\r\nvar server = http.createServer(function (req, res) {\r\n  getRawBody(req)\r\n    .then(function (buf) {\r\n      res.statusCode = 200\r\n      res.end(buf.length + ' bytes submitted')\r\n    })\r\n    .catch(function (err) {\r\n      res.statusCode = 500\r\n      res.end(err.message)\r\n    })\r\n})\r\n\r\nserver.listen(3000)\r\n```\r\n\r\n### Using with TypeScript\r\n\r\n```ts\r\nimport * as getRawBody from 'raw-body';\r\nimport * as http from 'http';\r\n\r\nconst server = http.createServer((req, res) => {\r\n  getRawBody(req)\r\n  .then((buf) => {\r\n    res.statusCode = 200;\r\n    res.end(buf.length + ' bytes submitted');\r\n  })\r\n  .catch((err) => {\r\n    res.statusCode = err.statusCode;\r\n    res.end(err.message);\r\n  });\r\n});\r\n\r\nserver.listen(3000);\r\n```\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/raw-body.svg\r\n[npm-url]: https://npmjs.org/package/raw-body\r\n[node-version-image]: https://img.shields.io/node/v/raw-body.svg\r\n[node-version-url]: https://nodejs.org/en/download/\r\n[coveralls-image]: https://img.shields.io/coveralls/stream-utils/raw-body/master.svg\r\n[coveralls-url]: https://coveralls.io/r/stream-utils/raw-body?branch=master\r\n[downloads-image]: https://img.shields.io/npm/dm/raw-body.svg\r\n[downloads-url]: https://npmjs.org/package/raw-body\r\n[github-actions-ci-image]: https://img.shields.io/github/workflow/status/stream-utils/raw-body/ci/master?label=ci\r\n[github-actions-ci-url]: https://github.com/jshttp/stream-utils/raw-body?query=workflow%3Aci\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/raw-body/README.md b/backend/node_modules/raw-body/README.md
--- a/backend/node_modules/raw-body/README.md	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/raw-body/README.md	(date 1710190086766)
@@ -219,5 +219,5 @@
 [coveralls-url]: https://coveralls.io/r/stream-utils/raw-body?branch=master
 [downloads-image]: https://img.shields.io/npm/dm/raw-body.svg
 [downloads-url]: https://npmjs.org/package/raw-body
-[github-actions-ci-image]: https://img.shields.io/github/workflow/status/stream-utils/raw-body/ci/master?label=ci
+[github-actions-ci-image]: https://img.shields.io/github/actions/workflow/status/stream-utils/raw-body/ci.yml?branch=master&label=ci
 [github-actions-ci-url]: https://github.com/jshttp/stream-utils/raw-body?query=workflow%3Aci
Index: backend/node_modules/.bin/mime
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>../mime/cli.js
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/.bin/mime b/backend/node_modules/.bin/mime
--- a/backend/node_modules/.bin/mime	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/.bin/mime	(date 1710190087223)
@@ -1,1 +1,16 @@
-../mime/cli.js
\ No newline at end of file
+#!/bin/sh
+basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")
+
+case `uname` in
+    *CYGWIN*|*MINGW*|*MSYS*)
+        if command -v cygpath > /dev/null 2>&1; then
+            basedir=`cygpath -w "$basedir"`
+        fi
+    ;;
+esac
+
+if [ -x "$basedir/node" ]; then
+  exec "$basedir/node"  "$basedir/../mime/cli.js" "$@"
+else 
+  exec node  "$basedir/../mime/cli.js" "$@"
+fi
Index: backend/node_modules/.bin/nodemon
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>../nodemon/bin/nodemon.js
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/.bin/nodemon b/backend/node_modules/.bin/nodemon
--- a/backend/node_modules/.bin/nodemon	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/.bin/nodemon	(date 1710190087223)
@@ -1,1 +1,16 @@
-../nodemon/bin/nodemon.js
\ No newline at end of file
+#!/bin/sh
+basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")
+
+case `uname` in
+    *CYGWIN*|*MINGW*|*MSYS*)
+        if command -v cygpath > /dev/null 2>&1; then
+            basedir=`cygpath -w "$basedir"`
+        fi
+    ;;
+esac
+
+if [ -x "$basedir/node" ]; then
+  exec "$basedir/node"  "$basedir/../nodemon/bin/nodemon.js" "$@"
+else 
+  exec node  "$basedir/../nodemon/bin/nodemon.js" "$@"
+fi
Index: backend/node_modules/express/lib/utils.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @api private\r\n */\r\n\r\nvar Buffer = require('safe-buffer').Buffer\r\nvar contentDisposition = require('content-disposition');\r\nvar contentType = require('content-type');\r\nvar deprecate = require('depd')('express');\r\nvar flatten = require('array-flatten');\r\nvar mime = require('send').mime;\r\nvar etag = require('etag');\r\nvar proxyaddr = require('proxy-addr');\r\nvar qs = require('qs');\r\nvar querystring = require('querystring');\r\n\r\n/**\r\n * Return strong ETag for `body`.\r\n *\r\n * @param {String|Buffer} body\r\n * @param {String} [encoding]\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nexports.etag = createETagGenerator({ weak: false })\r\n\r\n/**\r\n * Return weak ETag for `body`.\r\n *\r\n * @param {String|Buffer} body\r\n * @param {String} [encoding]\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nexports.wetag = createETagGenerator({ weak: true })\r\n\r\n/**\r\n * Check if `path` looks absolute.\r\n *\r\n * @param {String} path\r\n * @return {Boolean}\r\n * @api private\r\n */\r\n\r\nexports.isAbsolute = function(path){\r\n  if ('/' === path[0]) return true;\r\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\r\n  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\r\n};\r\n\r\n/**\r\n * Flatten the given `arr`.\r\n *\r\n * @param {Array} arr\r\n * @return {Array}\r\n * @api private\r\n */\r\n\r\nexports.flatten = deprecate.function(flatten,\r\n  'utils.flatten: use array-flatten npm module instead');\r\n\r\n/**\r\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\r\n *\r\n * @param {String} type\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nexports.normalizeType = function(type){\r\n  return ~type.indexOf('/')\r\n    ? acceptParams(type)\r\n    : { value: mime.lookup(type), params: {} };\r\n};\r\n\r\n/**\r\n * Normalize `types`, for example \"html\" becomes \"text/html\".\r\n *\r\n * @param {Array} types\r\n * @return {Array}\r\n * @api private\r\n */\r\n\r\nexports.normalizeTypes = function(types){\r\n  var ret = [];\r\n\r\n  for (var i = 0; i < types.length; ++i) {\r\n    ret.push(exports.normalizeType(types[i]));\r\n  }\r\n\r\n  return ret;\r\n};\r\n\r\n/**\r\n * Generate Content-Disposition header appropriate for the filename.\r\n * non-ascii filenames are urlencoded and a filename* parameter is added\r\n *\r\n * @param {String} filename\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nexports.contentDisposition = deprecate.function(contentDisposition,\r\n  'utils.contentDisposition: use content-disposition npm module instead');\r\n\r\n/**\r\n * Parse accept params `str` returning an\r\n * object with `.value`, `.quality` and `.params`.\r\n * also includes `.originalIndex` for stable sorting\r\n *\r\n * @param {String} str\r\n * @param {Number} index\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction acceptParams(str, index) {\r\n  var parts = str.split(/ *; */);\r\n  var ret = { value: parts[0], quality: 1, params: {}, originalIndex: index };\r\n\r\n  for (var i = 1; i < parts.length; ++i) {\r\n    var pms = parts[i].split(/ *= */);\r\n    if ('q' === pms[0]) {\r\n      ret.quality = parseFloat(pms[1]);\r\n    } else {\r\n      ret.params[pms[0]] = pms[1];\r\n    }\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n/**\r\n * Compile \"etag\" value to function.\r\n *\r\n * @param  {Boolean|String|Function} val\r\n * @return {Function}\r\n * @api private\r\n */\r\n\r\nexports.compileETag = function(val) {\r\n  var fn;\r\n\r\n  if (typeof val === 'function') {\r\n    return val;\r\n  }\r\n\r\n  switch (val) {\r\n    case true:\r\n    case 'weak':\r\n      fn = exports.wetag;\r\n      break;\r\n    case false:\r\n      break;\r\n    case 'strong':\r\n      fn = exports.etag;\r\n      break;\r\n    default:\r\n      throw new TypeError('unknown value for etag function: ' + val);\r\n  }\r\n\r\n  return fn;\r\n}\r\n\r\n/**\r\n * Compile \"query parser\" value to function.\r\n *\r\n * @param  {String|Function} val\r\n * @return {Function}\r\n * @api private\r\n */\r\n\r\nexports.compileQueryParser = function compileQueryParser(val) {\r\n  var fn;\r\n\r\n  if (typeof val === 'function') {\r\n    return val;\r\n  }\r\n\r\n  switch (val) {\r\n    case true:\r\n    case 'simple':\r\n      fn = querystring.parse;\r\n      break;\r\n    case false:\r\n      fn = newObject;\r\n      break;\r\n    case 'extended':\r\n      fn = parseExtendedQueryString;\r\n      break;\r\n    default:\r\n      throw new TypeError('unknown value for query parser function: ' + val);\r\n  }\r\n\r\n  return fn;\r\n}\r\n\r\n/**\r\n * Compile \"proxy trust\" value to function.\r\n *\r\n * @param  {Boolean|String|Number|Array|Function} val\r\n * @return {Function}\r\n * @api private\r\n */\r\n\r\nexports.compileTrust = function(val) {\r\n  if (typeof val === 'function') return val;\r\n\r\n  if (val === true) {\r\n    // Support plain true/false\r\n    return function(){ return true };\r\n  }\r\n\r\n  if (typeof val === 'number') {\r\n    // Support trusting hop count\r\n    return function(a, i){ return i < val };\r\n  }\r\n\r\n  if (typeof val === 'string') {\r\n    // Support comma-separated values\r\n    val = val.split(',')\r\n      .map(function (v) { return v.trim() })\r\n  }\r\n\r\n  return proxyaddr.compile(val || []);\r\n}\r\n\r\n/**\r\n * Set the charset in a given Content-Type string.\r\n *\r\n * @param {String} type\r\n * @param {String} charset\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nexports.setCharset = function setCharset(type, charset) {\r\n  if (!type || !charset) {\r\n    return type;\r\n  }\r\n\r\n  // parse type\r\n  var parsed = contentType.parse(type);\r\n\r\n  // set charset\r\n  parsed.parameters.charset = charset;\r\n\r\n  // format type\r\n  return contentType.format(parsed);\r\n};\r\n\r\n/**\r\n * Create an ETag generator function, generating ETags with\r\n * the given options.\r\n *\r\n * @param {object} options\r\n * @return {function}\r\n * @private\r\n */\r\n\r\nfunction createETagGenerator (options) {\r\n  return function generateETag (body, encoding) {\r\n    var buf = !Buffer.isBuffer(body)\r\n      ? Buffer.from(body, encoding)\r\n      : body\r\n\r\n    return etag(buf, options)\r\n  }\r\n}\r\n\r\n/**\r\n * Parse an extended query string with qs.\r\n *\r\n * @return {Object}\r\n * @private\r\n */\r\n\r\nfunction parseExtendedQueryString(str) {\r\n  return qs.parse(str, {\r\n    allowPrototypes: true\r\n  });\r\n}\r\n\r\n/**\r\n * Return new empty object.\r\n *\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction newObject() {\r\n  return {};\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/express/lib/utils.js b/backend/node_modules/express/lib/utils.js
--- a/backend/node_modules/express/lib/utils.js	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/express/lib/utils.js	(date 1710190086791)
@@ -117,17 +117,15 @@
 /**
  * Parse accept params `str` returning an
  * object with `.value`, `.quality` and `.params`.
- * also includes `.originalIndex` for stable sorting
  *
  * @param {String} str
- * @param {Number} index
  * @return {Object}
  * @api private
  */
 
-function acceptParams(str, index) {
+function acceptParams (str) {
   var parts = str.split(/ *; */);
-  var ret = { value: parts[0], quality: 1, params: {}, originalIndex: index };
+  var ret = { value: parts[0], quality: 1, params: {} }
 
   for (var i = 1; i < parts.length; ++i) {
     var pms = parts[i].split(/ *= */);
@@ -282,6 +280,7 @@
 /**
  * Parse an extended query string with qs.
  *
+ * @param {String} str
  * @return {Object}
  * @private
  */
Index: backend/node_modules/.bin/semver
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>../semver/bin/semver.js
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/.bin/semver b/backend/node_modules/.bin/semver
--- a/backend/node_modules/.bin/semver	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/.bin/semver	(date 1710190087224)
@@ -1,1 +1,16 @@
-../semver/bin/semver.js
\ No newline at end of file
+#!/bin/sh
+basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")
+
+case `uname` in
+    *CYGWIN*|*MINGW*|*MSYS*)
+        if command -v cygpath > /dev/null 2>&1; then
+            basedir=`cygpath -w "$basedir"`
+        fi
+    ;;
+esac
+
+if [ -x "$basedir/node" ]; then
+  exec "$basedir/node"  "$basedir/../semver/bin/semver.js" "$@"
+else 
+  exec node  "$basedir/../semver/bin/semver.js" "$@"
+fi
Index: backend/node_modules/.bin/nodetouch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>../touch/bin/nodetouch.js
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/.bin/nodetouch b/backend/node_modules/.bin/nodetouch
--- a/backend/node_modules/.bin/nodetouch	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/.bin/nodetouch	(date 1710190087223)
@@ -1,1 +1,16 @@
-../touch/bin/nodetouch.js
\ No newline at end of file
+#!/bin/sh
+basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")
+
+case `uname` in
+    *CYGWIN*|*MINGW*|*MSYS*)
+        if command -v cygpath > /dev/null 2>&1; then
+            basedir=`cygpath -w "$basedir"`
+        fi
+    ;;
+esac
+
+if [ -x "$basedir/node" ]; then
+  exec "$basedir/node"  "$basedir/../touch/bin/nodetouch.js" "$@"
+else 
+  exec node  "$basedir/../touch/bin/nodetouch.js" "$@"
+fi
Index: backend/node_modules/.bin/nopt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>../nopt/bin/nopt.js
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/.bin/nopt b/backend/node_modules/.bin/nopt
--- a/backend/node_modules/.bin/nopt	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/.bin/nopt	(date 1710190087223)
@@ -1,1 +1,16 @@
-../nopt/bin/nopt.js
\ No newline at end of file
+#!/bin/sh
+basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")
+
+case `uname` in
+    *CYGWIN*|*MINGW*|*MSYS*)
+        if command -v cygpath > /dev/null 2>&1; then
+            basedir=`cygpath -w "$basedir"`
+        fi
+    ;;
+esac
+
+if [ -x "$basedir/node" ]; then
+  exec "$basedir/node"  "$basedir/../nopt/bin/nopt.js" "$@"
+else 
+  exec node  "$basedir/../nopt/bin/nopt.js" "$@"
+fi
Index: backend/node_modules/side-channel/test/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar test = require('tape');\r\n\r\nvar getSideChannel = require('../');\r\n\r\ntest('export', function (t) {\r\n\tt.equal(typeof getSideChannel, 'function', 'is a function');\r\n\tt.equal(getSideChannel.length, 0, 'takes no arguments');\r\n\r\n\tvar channel = getSideChannel();\r\n\tt.ok(channel, 'is truthy');\r\n\tt.equal(typeof channel, 'object', 'is an object');\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('assert', function (t) {\r\n\tvar channel = getSideChannel();\r\n\tt['throws'](\r\n\t\tfunction () { channel.assert({}); },\r\n\t\tTypeError,\r\n\t\t'nonexistent value throws'\r\n\t);\r\n\r\n\tvar o = {};\r\n\tchannel.set(o, 'data');\r\n\tt.doesNotThrow(function () { channel.assert(o); }, 'existent value noops');\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('has', function (t) {\r\n\tvar channel = getSideChannel();\r\n\tvar o = [];\r\n\r\n\tt.equal(channel.has(o), false, 'nonexistent value yields false');\r\n\r\n\tchannel.set(o, 'foo');\r\n\tt.equal(channel.has(o), true, 'existent value yields true');\r\n\r\n\tt.equal(channel.has('abc'), false, 'non object value non existent yields false');\r\n\r\n\tchannel.set('abc', 'foo');\r\n\tt.equal(channel.has('abc'), true, 'non object value that exists yields true');\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('get', function (t) {\r\n\tvar channel = getSideChannel();\r\n\tvar o = {};\r\n\tt.equal(channel.get(o), undefined, 'nonexistent value yields undefined');\r\n\r\n\tvar data = {};\r\n\tchannel.set(o, data);\r\n\tt.equal(channel.get(o), data, '\"get\" yields data set by \"set\"');\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('set', function (t) {\r\n\tvar channel = getSideChannel();\r\n\tvar o = function () {};\r\n\tt.equal(channel.get(o), undefined, 'value not set');\r\n\r\n\tchannel.set(o, 42);\r\n\tt.equal(channel.get(o), 42, 'value was set');\r\n\r\n\tchannel.set(o, Infinity);\r\n\tt.equal(channel.get(o), Infinity, 'value was set again');\r\n\r\n\tvar o2 = {};\r\n\tchannel.set(o2, 17);\r\n\tt.equal(channel.get(o), Infinity, 'o is not modified');\r\n\tt.equal(channel.get(o2), 17, 'o2 is set');\r\n\r\n\tchannel.set(o, 14);\r\n\tt.equal(channel.get(o), 14, 'o is modified');\r\n\tt.equal(channel.get(o2), 17, 'o2 is not modified');\r\n\r\n\tt.end();\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/side-channel/test/index.js b/backend/node_modules/side-channel/test/index.js
--- a/backend/node_modules/side-channel/test/index.js	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/side-channel/test/index.js	(date 1710190086732)
@@ -32,7 +32,7 @@
 
 test('has', function (t) {
 	var channel = getSideChannel();
-	var o = [];
+	/** @type {unknown[]} */ var o = [];
 
 	t.equal(channel.has(o), false, 'nonexistent value yields false');
 
Index: backend/node_modules/body-parser/HISTORY.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1.20.1 / 2022-10-06\r\n===================\r\n\r\n  * deps: qs@6.11.0\r\n  * perf: remove unnecessary object clone\r\n\r\n1.20.0 / 2022-04-02\r\n===================\r\n\r\n  * Fix error message for json parse whitespace in `strict`\r\n  * Fix internal error when inflated body exceeds limit\r\n  * Prevent loss of async hooks context\r\n  * Prevent hanging when request already read\r\n  * deps: depd@2.0.0\r\n    - Replace internal `eval` usage with `Function` constructor\r\n    - Use instance methods on `process` to check for listeners\r\n  * deps: http-errors@2.0.0\r\n    - deps: depd@2.0.0\r\n    - deps: statuses@2.0.1\r\n  * deps: on-finished@2.4.1\r\n  * deps: qs@6.10.3\r\n  * deps: raw-body@2.5.1\r\n    - deps: http-errors@2.0.0\r\n\r\n1.19.2 / 2022-02-15\r\n===================\r\n\r\n  * deps: bytes@3.1.2\r\n  * deps: qs@6.9.7\r\n    * Fix handling of `__proto__` keys\r\n  * deps: raw-body@2.4.3\r\n    - deps: bytes@3.1.2\r\n\r\n1.19.1 / 2021-12-10\r\n===================\r\n\r\n  * deps: bytes@3.1.1\r\n  * deps: http-errors@1.8.1\r\n    - deps: inherits@2.0.4\r\n    - deps: toidentifier@1.0.1\r\n    - deps: setprototypeof@1.2.0\r\n  * deps: qs@6.9.6\r\n  * deps: raw-body@2.4.2\r\n    - deps: bytes@3.1.1\r\n    - deps: http-errors@1.8.1\r\n  * deps: safe-buffer@5.2.1\r\n  * deps: type-is@~1.6.18\r\n\r\n1.19.0 / 2019-04-25\r\n===================\r\n\r\n  * deps: bytes@3.1.0\r\n    - Add petabyte (`pb`) support\r\n  * deps: http-errors@1.7.2\r\n    - Set constructor name when possible\r\n    - deps: setprototypeof@1.1.1\r\n    - deps: statuses@'>= 1.5.0 < 2'\r\n  * deps: iconv-lite@0.4.24\r\n    - Added encoding MIK\r\n  * deps: qs@6.7.0\r\n    - Fix parsing array brackets after index\r\n  * deps: raw-body@2.4.0\r\n    - deps: bytes@3.1.0\r\n    - deps: http-errors@1.7.2\r\n    - deps: iconv-lite@0.4.24\r\n  * deps: type-is@~1.6.17\r\n    - deps: mime-types@~2.1.24\r\n    - perf: prevent internal `throw` on invalid type\r\n\r\n1.18.3 / 2018-05-14\r\n===================\r\n\r\n  * Fix stack trace for strict json parse error\r\n  * deps: depd@~1.1.2\r\n    - perf: remove argument reassignment\r\n  * deps: http-errors@~1.6.3\r\n    - deps: depd@~1.1.2\r\n    - deps: setprototypeof@1.1.0\r\n    - deps: statuses@'>= 1.3.1 < 2'\r\n  * deps: iconv-lite@0.4.23\r\n    - Fix loading encoding with year appended\r\n    - Fix deprecation warnings on Node.js 10+\r\n  * deps: qs@6.5.2\r\n  * deps: raw-body@2.3.3\r\n    - deps: http-errors@1.6.3\r\n    - deps: iconv-lite@0.4.23\r\n  * deps: type-is@~1.6.16\r\n    - deps: mime-types@~2.1.18\r\n\r\n1.18.2 / 2017-09-22\r\n===================\r\n\r\n  * deps: debug@2.6.9\r\n  * perf: remove argument reassignment\r\n\r\n1.18.1 / 2017-09-12\r\n===================\r\n\r\n  * deps: content-type@~1.0.4\r\n    - perf: remove argument reassignment\r\n    - perf: skip parameter parsing when no parameters\r\n  * deps: iconv-lite@0.4.19\r\n    - Fix ISO-8859-1 regression\r\n    - Update Windows-1255\r\n  * deps: qs@6.5.1\r\n    - Fix parsing & compacting very deep objects\r\n  * deps: raw-body@2.3.2\r\n    - deps: iconv-lite@0.4.19\r\n\r\n1.18.0 / 2017-09-08\r\n===================\r\n\r\n  * Fix JSON strict violation error to match native parse error\r\n  * Include the `body` property on verify errors\r\n  * Include the `type` property on all generated errors\r\n  * Use `http-errors` to set status code on errors\r\n  * deps: bytes@3.0.0\r\n  * deps: debug@2.6.8\r\n  * deps: depd@~1.1.1\r\n    - Remove unnecessary `Buffer` loading\r\n  * deps: http-errors@~1.6.2\r\n    - deps: depd@1.1.1\r\n  * deps: iconv-lite@0.4.18\r\n    - Add support for React Native\r\n    - Add a warning if not loaded as utf-8\r\n    - Fix CESU-8 decoding in Node.js 8\r\n    - Improve speed of ISO-8859-1 encoding\r\n  * deps: qs@6.5.0\r\n  * deps: raw-body@2.3.1\r\n    - Use `http-errors` for standard emitted errors\r\n    - deps: bytes@3.0.0\r\n    - deps: iconv-lite@0.4.18\r\n    - perf: skip buffer decoding on overage chunk\r\n  * perf: prevent internal `throw` when missing charset\r\n\r\n1.17.2 / 2017-05-17\r\n===================\r\n\r\n  * deps: debug@2.6.7\r\n    - Fix `DEBUG_MAX_ARRAY_LENGTH`\r\n    - deps: ms@2.0.0\r\n  * deps: type-is@~1.6.15\r\n    - deps: mime-types@~2.1.15\r\n\r\n1.17.1 / 2017-03-06\r\n===================\r\n\r\n  * deps: qs@6.4.0\r\n    - Fix regression parsing keys starting with `[`\r\n\r\n1.17.0 / 2017-03-01\r\n===================\r\n\r\n  * deps: http-errors@~1.6.1\r\n    - Make `message` property enumerable for `HttpError`s\r\n    - deps: setprototypeof@1.0.3\r\n  * deps: qs@6.3.1\r\n    - Fix compacting nested arrays\r\n\r\n1.16.1 / 2017-02-10\r\n===================\r\n\r\n  * deps: debug@2.6.1\r\n    - Fix deprecation messages in WebStorm and other editors\r\n    - Undeprecate `DEBUG_FD` set to `1` or `2`\r\n\r\n1.16.0 / 2017-01-17\r\n===================\r\n\r\n  * deps: debug@2.6.0\r\n    - Allow colors in workers\r\n    - Deprecated `DEBUG_FD` environment variable\r\n    - Fix error when running under React Native\r\n    - Use same color for same namespace\r\n    - deps: ms@0.7.2\r\n  * deps: http-errors@~1.5.1\r\n    - deps: inherits@2.0.3\r\n    - deps: setprototypeof@1.0.2\r\n    - deps: statuses@'>= 1.3.1 < 2'\r\n  * deps: iconv-lite@0.4.15\r\n    - Added encoding MS-31J\r\n    - Added encoding MS-932\r\n    - Added encoding MS-936\r\n    - Added encoding MS-949\r\n    - Added encoding MS-950\r\n    - Fix GBK/GB18030 handling of Euro character\r\n  * deps: qs@6.2.1\r\n    - Fix array parsing from skipping empty values\r\n  * deps: raw-body@~2.2.0\r\n    - deps: iconv-lite@0.4.15\r\n  * deps: type-is@~1.6.14\r\n    - deps: mime-types@~2.1.13\r\n\r\n1.15.2 / 2016-06-19\r\n===================\r\n\r\n  * deps: bytes@2.4.0\r\n  * deps: content-type@~1.0.2\r\n    - perf: enable strict mode\r\n  * deps: http-errors@~1.5.0\r\n    - Use `setprototypeof` module to replace `__proto__` setting\r\n    - deps: statuses@'>= 1.3.0 < 2'\r\n    - perf: enable strict mode\r\n  * deps: qs@6.2.0\r\n  * deps: raw-body@~2.1.7\r\n    - deps: bytes@2.4.0\r\n    - perf: remove double-cleanup on happy path\r\n  * deps: type-is@~1.6.13\r\n    - deps: mime-types@~2.1.11\r\n\r\n1.15.1 / 2016-05-05\r\n===================\r\n\r\n  * deps: bytes@2.3.0\r\n    - Drop partial bytes on all parsed units\r\n    - Fix parsing byte string that looks like hex\r\n  * deps: raw-body@~2.1.6\r\n    - deps: bytes@2.3.0\r\n  * deps: type-is@~1.6.12\r\n    - deps: mime-types@~2.1.10\r\n\r\n1.15.0 / 2016-02-10\r\n===================\r\n\r\n  * deps: http-errors@~1.4.0\r\n    - Add `HttpError` export, for `err instanceof createError.HttpError`\r\n    - deps: inherits@2.0.1\r\n    - deps: statuses@'>= 1.2.1 < 2'\r\n  * deps: qs@6.1.0\r\n  * deps: type-is@~1.6.11\r\n    - deps: mime-types@~2.1.9\r\n\r\n1.14.2 / 2015-12-16\r\n===================\r\n\r\n  * deps: bytes@2.2.0\r\n  * deps: iconv-lite@0.4.13\r\n  * deps: qs@5.2.0\r\n  * deps: raw-body@~2.1.5\r\n    - deps: bytes@2.2.0\r\n    - deps: iconv-lite@0.4.13\r\n  * deps: type-is@~1.6.10\r\n    - deps: mime-types@~2.1.8\r\n\r\n1.14.1 / 2015-09-27\r\n===================\r\n\r\n  * Fix issue where invalid charset results in 400 when `verify` used\r\n  * deps: iconv-lite@0.4.12\r\n    - Fix CESU-8 decoding in Node.js 4.x\r\n  * deps: raw-body@~2.1.4\r\n    - Fix masking critical errors from `iconv-lite`\r\n    - deps: iconv-lite@0.4.12\r\n  * deps: type-is@~1.6.9\r\n    - deps: mime-types@~2.1.7\r\n\r\n1.14.0 / 2015-09-16\r\n===================\r\n\r\n  * Fix JSON strict parse error to match syntax errors\r\n  * Provide static `require` analysis in `urlencoded` parser\r\n  * deps: depd@~1.1.0\r\n    - Support web browser loading\r\n  * deps: qs@5.1.0\r\n  * deps: raw-body@~2.1.3\r\n    - Fix sync callback when attaching data listener causes sync read\r\n  * deps: type-is@~1.6.8\r\n    - Fix type error when given invalid type to match against\r\n    - deps: mime-types@~2.1.6\r\n\r\n1.13.3 / 2015-07-31\r\n===================\r\n\r\n  * deps: type-is@~1.6.6\r\n    - deps: mime-types@~2.1.4\r\n\r\n1.13.2 / 2015-07-05\r\n===================\r\n\r\n  * deps: iconv-lite@0.4.11\r\n  * deps: qs@4.0.0\r\n    - Fix dropping parameters like `hasOwnProperty`\r\n    - Fix user-visible incompatibilities from 3.1.0\r\n    - Fix various parsing edge cases\r\n  * deps: raw-body@~2.1.2\r\n    - Fix error stack traces to skip `makeError`\r\n    - deps: iconv-lite@0.4.11\r\n  * deps: type-is@~1.6.4\r\n    - deps: mime-types@~2.1.2\r\n    - perf: enable strict mode\r\n    - perf: remove argument reassignment\r\n\r\n1.13.1 / 2015-06-16\r\n===================\r\n\r\n  * deps: qs@2.4.2\r\n    - Downgraded from 3.1.0 because of user-visible incompatibilities\r\n\r\n1.13.0 / 2015-06-14\r\n===================\r\n\r\n  * Add `statusCode` property on `Error`s, in addition to `status`\r\n  * Change `type` default to `application/json` for JSON parser\r\n  * Change `type` default to `application/x-www-form-urlencoded` for urlencoded parser\r\n  * Provide static `require` analysis\r\n  * Use the `http-errors` module to generate errors\r\n  * deps: bytes@2.1.0\r\n    - Slight optimizations\r\n  * deps: iconv-lite@0.4.10\r\n    - The encoding UTF-16 without BOM now defaults to UTF-16LE when detection fails\r\n    - Leading BOM is now removed when decoding\r\n  * deps: on-finished@~2.3.0\r\n    - Add defined behavior for HTTP `CONNECT` requests\r\n    - Add defined behavior for HTTP `Upgrade` requests\r\n    - deps: ee-first@1.1.1\r\n  * deps: qs@3.1.0\r\n    - Fix dropping parameters like `hasOwnProperty`\r\n    - Fix various parsing edge cases\r\n    - Parsed object now has `null` prototype\r\n  * deps: raw-body@~2.1.1\r\n    - Use `unpipe` module for unpiping requests\r\n    - deps: iconv-lite@0.4.10\r\n  * deps: type-is@~1.6.3\r\n    - deps: mime-types@~2.1.1\r\n    - perf: reduce try block size\r\n    - perf: remove bitwise operations\r\n  * perf: enable strict mode\r\n  * perf: remove argument reassignment\r\n  * perf: remove delete call\r\n\r\n1.12.4 / 2015-05-10\r\n===================\r\n\r\n  * deps: debug@~2.2.0\r\n  * deps: qs@2.4.2\r\n    - Fix allowing parameters like `constructor`\r\n  * deps: on-finished@~2.2.1\r\n  * deps: raw-body@~2.0.1\r\n    - Fix a false-positive when unpiping in Node.js 0.8\r\n    - deps: bytes@2.0.1\r\n  * deps: type-is@~1.6.2\r\n    - deps: mime-types@~2.0.11\r\n\r\n1.12.3 / 2015-04-15\r\n===================\r\n\r\n  * Slight efficiency improvement when not debugging\r\n  * deps: depd@~1.0.1\r\n  * deps: iconv-lite@0.4.8\r\n    - Add encoding alias UNICODE-1-1-UTF-7\r\n  * deps: raw-body@1.3.4\r\n    - Fix hanging callback if request aborts during read\r\n    - deps: iconv-lite@0.4.8\r\n\r\n1.12.2 / 2015-03-16\r\n===================\r\n\r\n  * deps: qs@2.4.1\r\n    - Fix error when parameter `hasOwnProperty` is present\r\n\r\n1.12.1 / 2015-03-15\r\n===================\r\n\r\n  * deps: debug@~2.1.3\r\n    - Fix high intensity foreground color for bold\r\n    - deps: ms@0.7.0\r\n  * deps: type-is@~1.6.1\r\n    - deps: mime-types@~2.0.10\r\n\r\n1.12.0 / 2015-02-13\r\n===================\r\n\r\n  * add `debug` messages\r\n  * accept a function for the `type` option\r\n  * use `content-type` to parse `Content-Type` headers\r\n  * deps: iconv-lite@0.4.7\r\n    - Gracefully support enumerables on `Object.prototype`\r\n  * deps: raw-body@1.3.3\r\n    - deps: iconv-lite@0.4.7\r\n  * deps: type-is@~1.6.0\r\n    - fix argument reassignment\r\n    - fix false-positives in `hasBody` `Transfer-Encoding` check\r\n    - support wildcard for both type and subtype (`*/*`)\r\n    - deps: mime-types@~2.0.9\r\n\r\n1.11.0 / 2015-01-30\r\n===================\r\n\r\n  * make internal `extended: true` depth limit infinity\r\n  * deps: type-is@~1.5.6\r\n    - deps: mime-types@~2.0.8\r\n\r\n1.10.2 / 2015-01-20\r\n===================\r\n\r\n  * deps: iconv-lite@0.4.6\r\n    - Fix rare aliases of single-byte encodings\r\n  * deps: raw-body@1.3.2\r\n    - deps: iconv-lite@0.4.6\r\n\r\n1.10.1 / 2015-01-01\r\n===================\r\n\r\n  * deps: on-finished@~2.2.0\r\n  * deps: type-is@~1.5.5\r\n    - deps: mime-types@~2.0.7\r\n\r\n1.10.0 / 2014-12-02\r\n===================\r\n\r\n  * make internal `extended: true` array limit dynamic\r\n\r\n1.9.3 / 2014-11-21\r\n==================\r\n\r\n  * deps: iconv-lite@0.4.5\r\n    - Fix Windows-31J and X-SJIS encoding support\r\n  * deps: qs@2.3.3\r\n    - Fix `arrayLimit` behavior\r\n  * deps: raw-body@1.3.1\r\n    - deps: iconv-lite@0.4.5\r\n  * deps: type-is@~1.5.3\r\n    - deps: mime-types@~2.0.3\r\n\r\n1.9.2 / 2014-10-27\r\n==================\r\n\r\n  * deps: qs@2.3.2\r\n    - Fix parsing of mixed objects and values\r\n\r\n1.9.1 / 2014-10-22\r\n==================\r\n\r\n  * deps: on-finished@~2.1.1\r\n    - Fix handling of pipelined requests\r\n  * deps: qs@2.3.0\r\n    - Fix parsing of mixed implicit and explicit arrays\r\n  * deps: type-is@~1.5.2\r\n    - deps: mime-types@~2.0.2\r\n\r\n1.9.0 / 2014-09-24\r\n==================\r\n\r\n  * include the charset in \"unsupported charset\" error message\r\n  * include the encoding in \"unsupported content encoding\" error message\r\n  * deps: depd@~1.0.0\r\n\r\n1.8.4 / 2014-09-23\r\n==================\r\n\r\n  * fix content encoding to be case-insensitive\r\n\r\n1.8.3 / 2014-09-19\r\n==================\r\n\r\n  * deps: qs@2.2.4\r\n    - Fix issue with object keys starting with numbers truncated\r\n\r\n1.8.2 / 2014-09-15\r\n==================\r\n\r\n  * deps: depd@0.4.5\r\n\r\n1.8.1 / 2014-09-07\r\n==================\r\n\r\n  * deps: media-typer@0.3.0\r\n  * deps: type-is@~1.5.1\r\n\r\n1.8.0 / 2014-09-05\r\n==================\r\n\r\n  * make empty-body-handling consistent between chunked requests\r\n    - empty `json` produces `{}`\r\n    - empty `raw` produces `new Buffer(0)`\r\n    - empty `text` produces `''`\r\n    - empty `urlencoded` produces `{}`\r\n  * deps: qs@2.2.3\r\n    - Fix issue where first empty value in array is discarded\r\n  * deps: type-is@~1.5.0\r\n    - fix `hasbody` to be true for `content-length: 0`\r\n\r\n1.7.0 / 2014-09-01\r\n==================\r\n\r\n  * add `parameterLimit` option to `urlencoded` parser\r\n  * change `urlencoded` extended array limit to 100\r\n  * respond with 413 when over `parameterLimit` in `urlencoded`\r\n\r\n1.6.7 / 2014-08-29\r\n==================\r\n\r\n  * deps: qs@2.2.2\r\n    - Remove unnecessary cloning\r\n\r\n1.6.6 / 2014-08-27\r\n==================\r\n\r\n  * deps: qs@2.2.0\r\n    - Array parsing fix\r\n    - Performance improvements\r\n\r\n1.6.5 / 2014-08-16\r\n==================\r\n\r\n  * deps: on-finished@2.1.0\r\n\r\n1.6.4 / 2014-08-14\r\n==================\r\n\r\n  * deps: qs@1.2.2\r\n\r\n1.6.3 / 2014-08-10\r\n==================\r\n\r\n  * deps: qs@1.2.1\r\n\r\n1.6.2 / 2014-08-07\r\n==================\r\n\r\n  * deps: qs@1.2.0\r\n    - Fix parsing array of objects\r\n\r\n1.6.1 / 2014-08-06\r\n==================\r\n\r\n  * deps: qs@1.1.0\r\n    - Accept urlencoded square brackets\r\n    - Accept empty values in implicit array notation\r\n\r\n1.6.0 / 2014-08-05\r\n==================\r\n\r\n  * deps: qs@1.0.2\r\n    - Complete rewrite\r\n    - Limits array length to 20\r\n    - Limits object depth to 5\r\n    - Limits parameters to 1,000\r\n\r\n1.5.2 / 2014-07-27\r\n==================\r\n\r\n  * deps: depd@0.4.4\r\n    - Work-around v8 generating empty stack traces\r\n\r\n1.5.1 / 2014-07-26\r\n==================\r\n\r\n  * deps: depd@0.4.3\r\n    - Fix exception when global `Error.stackTraceLimit` is too low\r\n\r\n1.5.0 / 2014-07-20\r\n==================\r\n\r\n  * deps: depd@0.4.2\r\n    - Add `TRACE_DEPRECATION` environment variable\r\n    - Remove non-standard grey color from color output\r\n    - Support `--no-deprecation` argument\r\n    - Support `--trace-deprecation` argument\r\n  * deps: iconv-lite@0.4.4\r\n    - Added encoding UTF-7\r\n  * deps: raw-body@1.3.0\r\n    - deps: iconv-lite@0.4.4\r\n    - Added encoding UTF-7\r\n    - Fix `Cannot switch to old mode now` error on Node.js 0.10+\r\n  * deps: type-is@~1.3.2\r\n\r\n1.4.3 / 2014-06-19\r\n==================\r\n\r\n  * deps: type-is@1.3.1\r\n    - fix global variable leak\r\n\r\n1.4.2 / 2014-06-19\r\n==================\r\n\r\n  * deps: type-is@1.3.0\r\n    - improve type parsing\r\n\r\n1.4.1 / 2014-06-19\r\n==================\r\n\r\n  * fix urlencoded extended deprecation message\r\n\r\n1.4.0 / 2014-06-19\r\n==================\r\n\r\n  * add `text` parser\r\n  * add `raw` parser\r\n  * check accepted charset in content-type (accepts utf-8)\r\n  * check accepted encoding in content-encoding (accepts identity)\r\n  * deprecate `bodyParser()` middleware; use `.json()` and `.urlencoded()` as needed\r\n  * deprecate `urlencoded()` without provided `extended` option\r\n  * lazy-load urlencoded parsers\r\n  * parsers split into files for reduced mem usage\r\n  * support gzip and deflate bodies\r\n    - set `inflate: false` to turn off\r\n  * deps: raw-body@1.2.2\r\n    - Support all encodings from `iconv-lite`\r\n\r\n1.3.1 / 2014-06-11\r\n==================\r\n\r\n  * deps: type-is@1.2.1\r\n    - Switch dependency from mime to mime-types@1.0.0\r\n\r\n1.3.0 / 2014-05-31\r\n==================\r\n\r\n  * add `extended` option to urlencoded parser\r\n\r\n1.2.2 / 2014-05-27\r\n==================\r\n\r\n  * deps: raw-body@1.1.6\r\n    - assert stream encoding on node.js 0.8\r\n    - assert stream encoding on node.js < 0.10.6\r\n    - deps: bytes@1\r\n\r\n1.2.1 / 2014-05-26\r\n==================\r\n\r\n  * invoke `next(err)` after request fully read\r\n    - prevents hung responses and socket hang ups\r\n\r\n1.2.0 / 2014-05-11\r\n==================\r\n\r\n  * add `verify` option\r\n  * deps: type-is@1.2.0\r\n    - support suffix matching\r\n\r\n1.1.2 / 2014-05-11\r\n==================\r\n\r\n  * improve json parser speed\r\n\r\n1.1.1 / 2014-05-11\r\n==================\r\n\r\n  * fix repeated limit parsing with every request\r\n\r\n1.1.0 / 2014-05-10\r\n==================\r\n\r\n  * add `type` option\r\n  * deps: pin for safety and consistency\r\n\r\n1.0.2 / 2014-04-14\r\n==================\r\n\r\n  * use `type-is` module\r\n\r\n1.0.1 / 2014-03-20\r\n==================\r\n\r\n  * lower default limits to 100kb\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/body-parser/HISTORY.md b/backend/node_modules/body-parser/HISTORY.md
--- a/backend/node_modules/body-parser/HISTORY.md	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/body-parser/HISTORY.md	(date 1710190086755)
@@ -1,3 +1,11 @@
+1.20.2 / 2023-02-21
+===================
+
+  * Fix strict json error message on Node.js 19+
+  * deps: content-type@~1.0.5
+    - perf: skip value escaping when unnecessary
+  * deps: raw-body@2.5.2
+
 1.20.1 / 2022-10-06
 ===================
 
Index: backend/node_modules/body-parser/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"body-parser\",\r\n  \"description\": \"Node.js body parsing middleware\",\r\n  \"version\": \"1.20.1\",\r\n  \"contributors\": [\r\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\",\r\n    \"Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"repository\": \"expressjs/body-parser\",\r\n  \"dependencies\": {\r\n    \"bytes\": \"3.1.2\",\r\n    \"content-type\": \"~1.0.4\",\r\n    \"debug\": \"2.6.9\",\r\n    \"depd\": \"2.0.0\",\r\n    \"destroy\": \"1.2.0\",\r\n    \"http-errors\": \"2.0.0\",\r\n    \"iconv-lite\": \"0.4.24\",\r\n    \"on-finished\": \"2.4.1\",\r\n    \"qs\": \"6.11.0\",\r\n    \"raw-body\": \"2.5.1\",\r\n    \"type-is\": \"~1.6.18\",\r\n    \"unpipe\": \"1.0.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"eslint\": \"8.24.0\",\r\n    \"eslint-config-standard\": \"14.1.1\",\r\n    \"eslint-plugin-import\": \"2.26.0\",\r\n    \"eslint-plugin-markdown\": \"3.0.0\",\r\n    \"eslint-plugin-node\": \"11.1.0\",\r\n    \"eslint-plugin-promise\": \"6.0.1\",\r\n    \"eslint-plugin-standard\": \"4.1.0\",\r\n    \"methods\": \"1.1.2\",\r\n    \"mocha\": \"10.0.0\",\r\n    \"nyc\": \"15.1.0\",\r\n    \"safe-buffer\": \"5.2.1\",\r\n    \"supertest\": \"6.3.0\"\r\n  },\r\n  \"files\": [\r\n    \"lib/\",\r\n    \"LICENSE\",\r\n    \"HISTORY.md\",\r\n    \"SECURITY.md\",\r\n    \"index.js\"\r\n  ],\r\n  \"engines\": {\r\n    \"node\": \">= 0.8\",\r\n    \"npm\": \"1.2.8000 || >= 1.4.16\"\r\n  },\r\n  \"scripts\": {\r\n    \"lint\": \"eslint .\",\r\n    \"test\": \"mocha --require test/support/env --reporter spec --check-leaks --bail test/\",\r\n    \"test-ci\": \"nyc --reporter=lcov --reporter=text npm test\",\r\n    \"test-cov\": \"nyc --reporter=html --reporter=text npm test\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/body-parser/package.json b/backend/node_modules/body-parser/package.json
--- a/backend/node_modules/body-parser/package.json	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/body-parser/package.json	(date 1710190086747)
@@ -1,7 +1,7 @@
 {
   "name": "body-parser",
   "description": "Node.js body parsing middleware",
-  "version": "1.20.1",
+  "version": "1.20.2",
   "contributors": [
     "Douglas Christopher Wilson <doug@somethingdoug.com>",
     "Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)"
@@ -10,7 +10,7 @@
   "repository": "expressjs/body-parser",
   "dependencies": {
     "bytes": "3.1.2",
-    "content-type": "~1.0.4",
+    "content-type": "~1.0.5",
     "debug": "2.6.9",
     "depd": "2.0.0",
     "destroy": "1.2.0",
@@ -18,23 +18,23 @@
     "iconv-lite": "0.4.24",
     "on-finished": "2.4.1",
     "qs": "6.11.0",
-    "raw-body": "2.5.1",
+    "raw-body": "2.5.2",
     "type-is": "~1.6.18",
     "unpipe": "1.0.0"
   },
   "devDependencies": {
-    "eslint": "8.24.0",
+    "eslint": "8.34.0",
     "eslint-config-standard": "14.1.1",
-    "eslint-plugin-import": "2.26.0",
+    "eslint-plugin-import": "2.27.5",
     "eslint-plugin-markdown": "3.0.0",
     "eslint-plugin-node": "11.1.0",
-    "eslint-plugin-promise": "6.0.1",
+    "eslint-plugin-promise": "6.1.1",
     "eslint-plugin-standard": "4.1.0",
     "methods": "1.1.2",
-    "mocha": "10.0.0",
+    "mocha": "10.2.0",
     "nyc": "15.1.0",
     "safe-buffer": "5.2.1",
-    "supertest": "6.3.0"
+    "supertest": "6.3.3"
   },
   "files": [
     "lib/",
Index: backend/node_modules/body-parser/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># body-parser\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![Build Status][github-actions-ci-image]][github-actions-ci-url]\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\nNode.js body parsing middleware.\r\n\r\nParse incoming request bodies in a middleware before your handlers, available\r\nunder the `req.body` property.\r\n\r\n**Note** As `req.body`'s shape is based on user-controlled input, all\r\nproperties and values in this object are untrusted and should be validated\r\nbefore trusting. For example, `req.body.foo.toString()` may fail in multiple\r\nways, for example the `foo` property may not be there or may not be a string,\r\nand `toString` may not be a function and instead a string or other user input.\r\n\r\n[Learn about the anatomy of an HTTP transaction in Node.js](https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/).\r\n\r\n_This does not handle multipart bodies_, due to their complex and typically\r\nlarge nature. For multipart bodies, you may be interested in the following\r\nmodules:\r\n\r\n  * [busboy](https://www.npmjs.org/package/busboy#readme) and\r\n    [connect-busboy](https://www.npmjs.org/package/connect-busboy#readme)\r\n  * [multiparty](https://www.npmjs.org/package/multiparty#readme) and\r\n    [connect-multiparty](https://www.npmjs.org/package/connect-multiparty#readme)\r\n  * [formidable](https://www.npmjs.org/package/formidable#readme)\r\n  * [multer](https://www.npmjs.org/package/multer#readme)\r\n\r\nThis module provides the following parsers:\r\n\r\n  * [JSON body parser](#bodyparserjsonoptions)\r\n  * [Raw body parser](#bodyparserrawoptions)\r\n  * [Text body parser](#bodyparsertextoptions)\r\n  * [URL-encoded form body parser](#bodyparserurlencodedoptions)\r\n\r\nOther body parsers you might be interested in:\r\n\r\n- [body](https://www.npmjs.org/package/body#readme)\r\n- [co-body](https://www.npmjs.org/package/co-body#readme)\r\n\r\n## Installation\r\n\r\n```sh\r\n$ npm install body-parser\r\n```\r\n\r\n## API\r\n\r\n```js\r\nvar bodyParser = require('body-parser')\r\n```\r\n\r\nThe `bodyParser` object exposes various factories to create middlewares. All\r\nmiddlewares will populate the `req.body` property with the parsed body when\r\nthe `Content-Type` request header matches the `type` option, or an empty\r\nobject (`{}`) if there was no body to parse, the `Content-Type` was not matched,\r\nor an error occurred.\r\n\r\nThe various errors returned by this module are described in the\r\n[errors section](#errors).\r\n\r\n### bodyParser.json([options])\r\n\r\nReturns middleware that only parses `json` and only looks at requests where\r\nthe `Content-Type` header matches the `type` option. This parser accepts any\r\nUnicode encoding of the body and supports automatic inflation of `gzip` and\r\n`deflate` encodings.\r\n\r\nA new `body` object containing the parsed data is populated on the `request`\r\nobject after the middleware (i.e. `req.body`).\r\n\r\n#### Options\r\n\r\nThe `json` function takes an optional `options` object that may contain any of\r\nthe following keys:\r\n\r\n##### inflate\r\n\r\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\r\n`false`, deflated bodies are rejected. Defaults to `true`.\r\n\r\n##### limit\r\n\r\nControls the maximum request body size. If this is a number, then the value\r\nspecifies the number of bytes; if it is a string, the value is passed to the\r\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\r\nto `'100kb'`.\r\n\r\n##### reviver\r\n\r\nThe `reviver` option is passed directly to `JSON.parse` as the second\r\nargument. You can find more information on this argument\r\n[in the MDN documentation about JSON.parse](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Example.3A_Using_the_reviver_parameter).\r\n\r\n##### strict\r\n\r\nWhen set to `true`, will only accept arrays and objects; when `false` will\r\naccept anything `JSON.parse` accepts. Defaults to `true`.\r\n\r\n##### type\r\n\r\nThe `type` option is used to determine what media type the middleware will\r\nparse. This option can be a string, array of strings, or a function. If not a\r\nfunction, `type` option is passed directly to the\r\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\r\nbe an extension name (like `json`), a mime type (like `application/json`), or\r\na mime type with a wildcard (like `*/*` or `*/json`). If a function, the `type`\r\noption is called as `fn(req)` and the request is parsed if it returns a truthy\r\nvalue. Defaults to `application/json`.\r\n\r\n##### verify\r\n\r\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\r\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\r\nencoding of the request. The parsing can be aborted by throwing an error.\r\n\r\n### bodyParser.raw([options])\r\n\r\nReturns middleware that parses all bodies as a `Buffer` and only looks at\r\nrequests where the `Content-Type` header matches the `type` option. This\r\nparser supports automatic inflation of `gzip` and `deflate` encodings.\r\n\r\nA new `body` object containing the parsed data is populated on the `request`\r\nobject after the middleware (i.e. `req.body`). This will be a `Buffer` object\r\nof the body.\r\n\r\n#### Options\r\n\r\nThe `raw` function takes an optional `options` object that may contain any of\r\nthe following keys:\r\n\r\n##### inflate\r\n\r\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\r\n`false`, deflated bodies are rejected. Defaults to `true`.\r\n\r\n##### limit\r\n\r\nControls the maximum request body size. If this is a number, then the value\r\nspecifies the number of bytes; if it is a string, the value is passed to the\r\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\r\nto `'100kb'`.\r\n\r\n##### type\r\n\r\nThe `type` option is used to determine what media type the middleware will\r\nparse. This option can be a string, array of strings, or a function.\r\nIf not a function, `type` option is passed directly to the\r\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this\r\ncan be an extension name (like `bin`), a mime type (like\r\n`application/octet-stream`), or a mime type with a wildcard (like `*/*` or\r\n`application/*`). If a function, the `type` option is called as `fn(req)`\r\nand the request is parsed if it returns a truthy value. Defaults to\r\n`application/octet-stream`.\r\n\r\n##### verify\r\n\r\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\r\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\r\nencoding of the request. The parsing can be aborted by throwing an error.\r\n\r\n### bodyParser.text([options])\r\n\r\nReturns middleware that parses all bodies as a string and only looks at\r\nrequests where the `Content-Type` header matches the `type` option. This\r\nparser supports automatic inflation of `gzip` and `deflate` encodings.\r\n\r\nA new `body` string containing the parsed data is populated on the `request`\r\nobject after the middleware (i.e. `req.body`). This will be a string of the\r\nbody.\r\n\r\n#### Options\r\n\r\nThe `text` function takes an optional `options` object that may contain any of\r\nthe following keys:\r\n\r\n##### defaultCharset\r\n\r\nSpecify the default character set for the text content if the charset is not\r\nspecified in the `Content-Type` header of the request. Defaults to `utf-8`.\r\n\r\n##### inflate\r\n\r\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\r\n`false`, deflated bodies are rejected. Defaults to `true`.\r\n\r\n##### limit\r\n\r\nControls the maximum request body size. If this is a number, then the value\r\nspecifies the number of bytes; if it is a string, the value is passed to the\r\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\r\nto `'100kb'`.\r\n\r\n##### type\r\n\r\nThe `type` option is used to determine what media type the middleware will\r\nparse. This option can be a string, array of strings, or a function. If not\r\na function, `type` option is passed directly to the\r\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\r\nbe an extension name (like `txt`), a mime type (like `text/plain`), or a mime\r\ntype with a wildcard (like `*/*` or `text/*`). If a function, the `type`\r\noption is called as `fn(req)` and the request is parsed if it returns a\r\ntruthy value. Defaults to `text/plain`.\r\n\r\n##### verify\r\n\r\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\r\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\r\nencoding of the request. The parsing can be aborted by throwing an error.\r\n\r\n### bodyParser.urlencoded([options])\r\n\r\nReturns middleware that only parses `urlencoded` bodies and only looks at\r\nrequests where the `Content-Type` header matches the `type` option. This\r\nparser accepts only UTF-8 encoding of the body and supports automatic\r\ninflation of `gzip` and `deflate` encodings.\r\n\r\nA new `body` object containing the parsed data is populated on the `request`\r\nobject after the middleware (i.e. `req.body`). This object will contain\r\nkey-value pairs, where the value can be a string or array (when `extended` is\r\n`false`), or any type (when `extended` is `true`).\r\n\r\n#### Options\r\n\r\nThe `urlencoded` function takes an optional `options` object that may contain\r\nany of the following keys:\r\n\r\n##### extended\r\n\r\nThe `extended` option allows to choose between parsing the URL-encoded data\r\nwith the `querystring` library (when `false`) or the `qs` library (when\r\n`true`). The \"extended\" syntax allows for rich objects and arrays to be\r\nencoded into the URL-encoded format, allowing for a JSON-like experience\r\nwith URL-encoded. For more information, please\r\n[see the qs library](https://www.npmjs.org/package/qs#readme).\r\n\r\nDefaults to `true`, but using the default has been deprecated. Please\r\nresearch into the difference between `qs` and `querystring` and choose the\r\nappropriate setting.\r\n\r\n##### inflate\r\n\r\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\r\n`false`, deflated bodies are rejected. Defaults to `true`.\r\n\r\n##### limit\r\n\r\nControls the maximum request body size. If this is a number, then the value\r\nspecifies the number of bytes; if it is a string, the value is passed to the\r\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\r\nto `'100kb'`.\r\n\r\n##### parameterLimit\r\n\r\nThe `parameterLimit` option controls the maximum number of parameters that\r\nare allowed in the URL-encoded data. If a request contains more parameters\r\nthan this value, a 413 will be returned to the client. Defaults to `1000`.\r\n\r\n##### type\r\n\r\nThe `type` option is used to determine what media type the middleware will\r\nparse. This option can be a string, array of strings, or a function. If not\r\na function, `type` option is passed directly to the\r\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\r\nbe an extension name (like `urlencoded`), a mime type (like\r\n`application/x-www-form-urlencoded`), or a mime type with a wildcard (like\r\n`*/x-www-form-urlencoded`). If a function, the `type` option is called as\r\n`fn(req)` and the request is parsed if it returns a truthy value. Defaults\r\nto `application/x-www-form-urlencoded`.\r\n\r\n##### verify\r\n\r\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\r\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\r\nencoding of the request. The parsing can be aborted by throwing an error.\r\n\r\n## Errors\r\n\r\nThe middlewares provided by this module create errors using the\r\n[`http-errors` module](https://www.npmjs.com/package/http-errors). The errors\r\nwill typically have a `status`/`statusCode` property that contains the suggested\r\nHTTP response code, an `expose` property to determine if the `message` property\r\nshould be displayed to the client, a `type` property to determine the type of\r\nerror without matching against the `message`, and a `body` property containing\r\nthe read body, if available.\r\n\r\nThe following are the common errors created, though any error can come through\r\nfor various reasons.\r\n\r\n### content encoding unsupported\r\n\r\nThis error will occur when the request had a `Content-Encoding` header that\r\ncontained an encoding but the \"inflation\" option was set to `false`. The\r\n`status` property is set to `415`, the `type` property is set to\r\n`'encoding.unsupported'`, and the `charset` property will be set to the\r\nencoding that is unsupported.\r\n\r\n### entity parse failed\r\n\r\nThis error will occur when the request contained an entity that could not be\r\nparsed by the middleware. The `status` property is set to `400`, the `type`\r\nproperty is set to `'entity.parse.failed'`, and the `body` property is set to\r\nthe entity value that failed parsing.\r\n\r\n### entity verify failed\r\n\r\nThis error will occur when the request contained an entity that could not be\r\nfailed verification by the defined `verify` option. The `status` property is\r\nset to `403`, the `type` property is set to `'entity.verify.failed'`, and the\r\n`body` property is set to the entity value that failed verification.\r\n\r\n### request aborted\r\n\r\nThis error will occur when the request is aborted by the client before reading\r\nthe body has finished. The `received` property will be set to the number of\r\nbytes received before the request was aborted and the `expected` property is\r\nset to the number of expected bytes. The `status` property is set to `400`\r\nand `type` property is set to `'request.aborted'`.\r\n\r\n### request entity too large\r\n\r\nThis error will occur when the request body's size is larger than the \"limit\"\r\noption. The `limit` property will be set to the byte limit and the `length`\r\nproperty will be set to the request body's length. The `status` property is\r\nset to `413` and the `type` property is set to `'entity.too.large'`.\r\n\r\n### request size did not match content length\r\n\r\nThis error will occur when the request's length did not match the length from\r\nthe `Content-Length` header. This typically occurs when the request is malformed,\r\ntypically when the `Content-Length` header was calculated based on characters\r\ninstead of bytes. The `status` property is set to `400` and the `type` property\r\nis set to `'request.size.invalid'`.\r\n\r\n### stream encoding should not be set\r\n\r\nThis error will occur when something called the `req.setEncoding` method prior\r\nto this middleware. This module operates directly on bytes only and you cannot\r\ncall `req.setEncoding` when using this module. The `status` property is set to\r\n`500` and the `type` property is set to `'stream.encoding.set'`.\r\n\r\n### stream is not readable\r\n\r\nThis error will occur when the request is no longer readable when this middleware\r\nattempts to read it. This typically means something other than a middleware from\r\nthis module read the request body already and the middleware was also configured to\r\nread the same request. The `status` property is set to `500` and the `type`\r\nproperty is set to `'stream.not.readable'`.\r\n\r\n### too many parameters\r\n\r\nThis error will occur when the content of the request exceeds the configured\r\n`parameterLimit` for the `urlencoded` parser. The `status` property is set to\r\n`413` and the `type` property is set to `'parameters.too.many'`.\r\n\r\n### unsupported charset \"BOGUS\"\r\n\r\nThis error will occur when the request had a charset parameter in the\r\n`Content-Type` header, but the `iconv-lite` module does not support it OR the\r\nparser does not support it. The charset is contained in the message as well\r\nas in the `charset` property. The `status` property is set to `415`, the\r\n`type` property is set to `'charset.unsupported'`, and the `charset` property\r\nis set to the charset that is unsupported.\r\n\r\n### unsupported content encoding \"bogus\"\r\n\r\nThis error will occur when the request had a `Content-Encoding` header that\r\ncontained an unsupported encoding. The encoding is contained in the message\r\nas well as in the `encoding` property. The `status` property is set to `415`,\r\nthe `type` property is set to `'encoding.unsupported'`, and the `encoding`\r\nproperty is set to the encoding that is unsupported.\r\n\r\n## Examples\r\n\r\n### Express/Connect top-level generic\r\n\r\nThis example demonstrates adding a generic JSON and URL-encoded parser as a\r\ntop-level middleware, which will parse the bodies of all incoming requests.\r\nThis is the simplest setup.\r\n\r\n```js\r\nvar express = require('express')\r\nvar bodyParser = require('body-parser')\r\n\r\nvar app = express()\r\n\r\n// parse application/x-www-form-urlencoded\r\napp.use(bodyParser.urlencoded({ extended: false }))\r\n\r\n// parse application/json\r\napp.use(bodyParser.json())\r\n\r\napp.use(function (req, res) {\r\n  res.setHeader('Content-Type', 'text/plain')\r\n  res.write('you posted:\\n')\r\n  res.end(JSON.stringify(req.body, null, 2))\r\n})\r\n```\r\n\r\n### Express route-specific\r\n\r\nThis example demonstrates adding body parsers specifically to the routes that\r\nneed them. In general, this is the most recommended way to use body-parser with\r\nExpress.\r\n\r\n```js\r\nvar express = require('express')\r\nvar bodyParser = require('body-parser')\r\n\r\nvar app = express()\r\n\r\n// create application/json parser\r\nvar jsonParser = bodyParser.json()\r\n\r\n// create application/x-www-form-urlencoded parser\r\nvar urlencodedParser = bodyParser.urlencoded({ extended: false })\r\n\r\n// POST /login gets urlencoded bodies\r\napp.post('/login', urlencodedParser, function (req, res) {\r\n  res.send('welcome, ' + req.body.username)\r\n})\r\n\r\n// POST /api/users gets JSON bodies\r\napp.post('/api/users', jsonParser, function (req, res) {\r\n  // create user in req.body\r\n})\r\n```\r\n\r\n### Change accepted type for parsers\r\n\r\nAll the parsers accept a `type` option which allows you to change the\r\n`Content-Type` that the middleware will parse.\r\n\r\n```js\r\nvar express = require('express')\r\nvar bodyParser = require('body-parser')\r\n\r\nvar app = express()\r\n\r\n// parse various different custom JSON types as JSON\r\napp.use(bodyParser.json({ type: 'application/*+json' }))\r\n\r\n// parse some custom thing into a Buffer\r\napp.use(bodyParser.raw({ type: 'application/vnd.custom-type' }))\r\n\r\n// parse an HTML body into a string\r\napp.use(bodyParser.text({ type: 'text/html' }))\r\n```\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/body-parser.svg\r\n[npm-url]: https://npmjs.org/package/body-parser\r\n[coveralls-image]: https://img.shields.io/coveralls/expressjs/body-parser/master.svg\r\n[coveralls-url]: https://coveralls.io/r/expressjs/body-parser?branch=master\r\n[downloads-image]: https://img.shields.io/npm/dm/body-parser.svg\r\n[downloads-url]: https://npmjs.org/package/body-parser\r\n[github-actions-ci-image]: https://img.shields.io/github/workflow/status/expressjs/body-parser/ci/master?label=ci\r\n[github-actions-ci-url]: https://github.com/expressjs/body-parser/actions/workflows/ci.yml\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/body-parser/README.md b/backend/node_modules/body-parser/README.md
--- a/backend/node_modules/body-parser/README.md	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/body-parser/README.md	(date 1710190086818)
@@ -1,8 +1,8 @@
 # body-parser
 
-[![NPM Version][npm-image]][npm-url]
-[![NPM Downloads][downloads-image]][downloads-url]
-[![Build Status][github-actions-ci-image]][github-actions-ci-url]
+[![NPM Version][npm-version-image]][npm-url]
+[![NPM Downloads][npm-downloads-image]][npm-url]
+[![Build Status][ci-image]][ci-url]
 [![Test Coverage][coveralls-image]][coveralls-url]
 
 Node.js body parsing middleware.
@@ -454,11 +454,12 @@
 
 [MIT](LICENSE)
 
-[npm-image]: https://img.shields.io/npm/v/body-parser.svg
-[npm-url]: https://npmjs.org/package/body-parser
-[coveralls-image]: https://img.shields.io/coveralls/expressjs/body-parser/master.svg
+[ci-image]: https://badgen.net/github/checks/expressjs/body-parser/master?label=ci
+[ci-url]: https://github.com/expressjs/body-parser/actions/workflows/ci.yml
+[coveralls-image]: https://badgen.net/coveralls/c/github/expressjs/body-parser/master
 [coveralls-url]: https://coveralls.io/r/expressjs/body-parser?branch=master
-[downloads-image]: https://img.shields.io/npm/dm/body-parser.svg
-[downloads-url]: https://npmjs.org/package/body-parser
-[github-actions-ci-image]: https://img.shields.io/github/workflow/status/expressjs/body-parser/ci/master?label=ci
-[github-actions-ci-url]: https://github.com/expressjs/body-parser/actions/workflows/ci.yml
+[node-version-image]: https://badgen.net/npm/node/body-parser
+[node-version-url]: https://nodejs.org/en/download
+[npm-downloads-image]: https://badgen.net/npm/dm/body-parser
+[npm-url]: https://npmjs.org/package/body-parser
+[npm-version-image]: https://badgen.net/npm/v/body-parser
Index: backend/node_modules/.package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"backend\",\r\n  \"version\": \"1.0.0\",\r\n  \"lockfileVersion\": 3,\r\n  \"requires\": true,\r\n  \"packages\": {\r\n    \"node_modules/abbrev\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==\"\r\n    },\r\n    \"node_modules/accepts\": {\r\n      \"version\": \"1.3.8\",\r\n      \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\r\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\r\n      \"dependencies\": {\r\n        \"mime-types\": \"~2.1.34\",\r\n        \"negotiator\": \"0.6.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/anymatch\": {\r\n      \"version\": \"3.1.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\r\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\r\n      \"dependencies\": {\r\n        \"normalize-path\": \"^3.0.0\",\r\n        \"picomatch\": \"^2.0.4\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 8\"\r\n      }\r\n    },\r\n    \"node_modules/array-flatten\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==\"\r\n    },\r\n    \"node_modules/balanced-match\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\"\r\n    },\r\n    \"node_modules/bignumber.js\": {\r\n      \"version\": \"9.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/bignumber.js/-/bignumber.js-9.0.0.tgz\",\r\n      \"integrity\": \"sha512-t/OYhhJ2SD+YGBQcjY8GzzDHEk9f3nerxjtfa6tlMXfe7frs/WozhvCNoGvpM0P3bNf3Gq5ZRMlGr5f3r4/N8A==\",\r\n      \"engines\": {\r\n        \"node\": \"*\"\r\n      }\r\n    },\r\n    \"node_modules/binary-extensions\": {\r\n      \"version\": \"2.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz\",\r\n      \"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser\": {\r\n      \"version\": \"1.20.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.1.tgz\",\r\n      \"integrity\": \"sha512-jWi7abTbYwajOytWCQc37VulmWiRae5RyTpaCyDcS5/lMdtwSz5lOpDE67srw/HYe35f1z3fDQw+3txg7gNtWw==\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.1.2\",\r\n        \"content-type\": \"~1.0.4\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"2.0.0\",\r\n        \"destroy\": \"1.2.0\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"iconv-lite\": \"0.4.24\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"qs\": \"6.11.0\",\r\n        \"raw-body\": \"2.5.1\",\r\n        \"type-is\": \"~1.6.18\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\",\r\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\r\n      }\r\n    },\r\n    \"node_modules/brace-expansion\": {\r\n      \"version\": \"1.1.11\",\r\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\r\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\r\n      \"dependencies\": {\r\n        \"balanced-match\": \"^1.0.0\",\r\n        \"concat-map\": \"0.0.1\"\r\n      }\r\n    },\r\n    \"node_modules/braces\": {\r\n      \"version\": \"3.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.2.tgz\",\r\n      \"integrity\": \"sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==\",\r\n      \"dependencies\": {\r\n        \"fill-range\": \"^7.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      }\r\n    },\r\n    \"node_modules/bytes\": {\r\n      \"version\": \"3.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\r\n      \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/call-bind\": {\r\n      \"version\": \"1.0.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz\",\r\n      \"integrity\": \"sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==\",\r\n      \"dependencies\": {\r\n        \"es-define-property\": \"^1.0.0\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"function-bind\": \"^1.1.2\",\r\n        \"get-intrinsic\": \"^1.2.4\",\r\n        \"set-function-length\": \"^1.2.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/chokidar\": {\r\n      \"version\": \"3.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz\",\r\n      \"integrity\": \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\",\r\n      \"dependencies\": {\r\n        \"anymatch\": \"~3.1.2\",\r\n        \"braces\": \"~3.0.2\",\r\n        \"glob-parent\": \"~5.1.2\",\r\n        \"is-binary-path\": \"~2.1.0\",\r\n        \"is-glob\": \"~4.0.1\",\r\n        \"normalize-path\": \"~3.0.0\",\r\n        \"readdirp\": \"~3.6.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 8.10.0\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://paulmillr.com/funding/\"\r\n      },\r\n      \"optionalDependencies\": {\r\n        \"fsevents\": \"~2.3.2\"\r\n      }\r\n    },\r\n    \"node_modules/concat-map\": {\r\n      \"version\": \"0.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\r\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\"\r\n    },\r\n    \"node_modules/content-disposition\": {\r\n      \"version\": \"0.5.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz\",\r\n      \"integrity\": \"sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\",\r\n      \"dependencies\": {\r\n        \"safe-buffer\": \"5.2.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/content-type\": {\r\n      \"version\": \"1.0.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz\",\r\n      \"integrity\": \"sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/cookie\": {\r\n      \"version\": \"0.5.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.5.0.tgz\",\r\n      \"integrity\": \"sha512-YZ3GUyn/o8gfKJlnlX7g7xq4gyO6OSuhGPKaaGssGB2qgDUS0gPgtTvoyZLTt9Ab6dC4hfc9dV5arkvc/OCmrw==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/cookie-signature\": {\r\n      \"version\": \"1.0.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\r\n      \"integrity\": \"sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==\"\r\n    },\r\n    \"node_modules/core-util-is\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==\"\r\n    },\r\n    \"node_modules/cors\": {\r\n      \"version\": \"2.8.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/cors/-/cors-2.8.5.tgz\",\r\n      \"integrity\": \"sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==\",\r\n      \"dependencies\": {\r\n        \"object-assign\": \"^4\",\r\n        \"vary\": \"^1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.10\"\r\n      }\r\n    },\r\n    \"node_modules/debug\": {\r\n      \"version\": \"2.6.9\",\r\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\r\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\r\n      \"dependencies\": {\r\n        \"ms\": \"2.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/define-data-property\": {\r\n      \"version\": \"1.1.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz\",\r\n      \"integrity\": \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\",\r\n      \"dependencies\": {\r\n        \"es-define-property\": \"^1.0.0\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"gopd\": \"^1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/depd\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/destroy\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\",\r\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\r\n      }\r\n    },\r\n    \"node_modules/ee-first\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\"\r\n    },\r\n    \"node_modules/encodeurl\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/es-define-property\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz\",\r\n      \"integrity\": \"sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==\",\r\n      \"dependencies\": {\r\n        \"get-intrinsic\": \"^1.2.4\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/es-errors\": {\r\n      \"version\": \"1.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\r\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/escape-html\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\"\r\n    },\r\n    \"node_modules/etag\": {\r\n      \"version\": \"1.8.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\r\n      \"integrity\": \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/express\": {\r\n      \"version\": \"4.18.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/express/-/express-4.18.2.tgz\",\r\n      \"integrity\": \"sha512-5/PsL6iGPdfQ/lKM1UuielYgv3BUoJfz1aUwU9vHZ+J7gyvwdQXFEBIEIaxeGf0GIcreATNyBExtalisDbuMqQ==\",\r\n      \"dependencies\": {\r\n        \"accepts\": \"~1.3.8\",\r\n        \"array-flatten\": \"1.1.1\",\r\n        \"body-parser\": \"1.20.1\",\r\n        \"content-disposition\": \"0.5.4\",\r\n        \"content-type\": \"~1.0.4\",\r\n        \"cookie\": \"0.5.0\",\r\n        \"cookie-signature\": \"1.0.6\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"2.0.0\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"etag\": \"~1.8.1\",\r\n        \"finalhandler\": \"1.2.0\",\r\n        \"fresh\": \"0.5.2\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"merge-descriptors\": \"1.0.1\",\r\n        \"methods\": \"~1.1.2\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"parseurl\": \"~1.3.3\",\r\n        \"path-to-regexp\": \"0.1.7\",\r\n        \"proxy-addr\": \"~2.0.7\",\r\n        \"qs\": \"6.11.0\",\r\n        \"range-parser\": \"~1.2.1\",\r\n        \"safe-buffer\": \"5.2.1\",\r\n        \"send\": \"0.18.0\",\r\n        \"serve-static\": \"1.15.0\",\r\n        \"setprototypeof\": \"1.2.0\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"type-is\": \"~1.6.18\",\r\n        \"utils-merge\": \"1.0.1\",\r\n        \"vary\": \"~1.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/fill-range\": {\r\n      \"version\": \"7.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz\",\r\n      \"integrity\": \"sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==\",\r\n      \"dependencies\": {\r\n        \"to-regex-range\": \"^5.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      }\r\n    },\r\n    \"node_modules/finalhandler\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-5uXcUVftlQMFnWC9qu/svkWv3GTd2PfUhK/3PLkYNAe7FbqJMt3515HaxE6eRL74GdsriiwujiawdaB1BpEISg==\",\r\n      \"dependencies\": {\r\n        \"debug\": \"2.6.9\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"parseurl\": \"~1.3.3\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"unpipe\": \"~1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/forwarded\": {\r\n      \"version\": \"0.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\r\n      \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/fresh\": {\r\n      \"version\": \"0.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\r\n      \"integrity\": \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/fsevents\": {\r\n      \"version\": \"2.3.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\r\n      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\r\n      \"hasInstallScript\": true,\r\n      \"optional\": true,\r\n      \"os\": [\r\n        \"darwin\"\r\n      ],\r\n      \"engines\": {\r\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/function-bind\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/get-intrinsic\": {\r\n      \"version\": \"1.2.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz\",\r\n      \"integrity\": \"sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==\",\r\n      \"dependencies\": {\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"function-bind\": \"^1.1.2\",\r\n        \"has-proto\": \"^1.0.1\",\r\n        \"has-symbols\": \"^1.0.3\",\r\n        \"hasown\": \"^2.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/glob-parent\": {\r\n      \"version\": \"5.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\r\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\r\n      \"dependencies\": {\r\n        \"is-glob\": \"^4.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 6\"\r\n      }\r\n    },\r\n    \"node_modules/gopd\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==\",\r\n      \"dependencies\": {\r\n        \"get-intrinsic\": \"^1.1.3\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/has-flag\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\r\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/has-property-descriptors\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\",\r\n      \"dependencies\": {\r\n        \"es-define-property\": \"^1.0.0\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/has-proto\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/has-symbols\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/hasown\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-1/th4MHjnwncwXsIW6QMzlvYL9kG5e/CpVvLRZe4XPa8TOUNbCELqmvhDmnkNsAjwaG4+I8gJJL0JBvTTLO9qA==\",\r\n      \"dependencies\": {\r\n        \"function-bind\": \"^1.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/http-errors\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\r\n      \"dependencies\": {\r\n        \"depd\": \"2.0.0\",\r\n        \"inherits\": \"2.0.4\",\r\n        \"setprototypeof\": \"1.2.0\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"toidentifier\": \"1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/iconv-lite\": {\r\n      \"version\": \"0.4.24\",\r\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\r\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\r\n      \"dependencies\": {\r\n        \"safer-buffer\": \">= 2.1.2 < 3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/ignore-by-default\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==\"\r\n    },\r\n    \"node_modules/inherits\": {\r\n      \"version\": \"2.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\r\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\r\n    },\r\n    \"node_modules/ipaddr.js\": {\r\n      \"version\": \"1.9.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\r\n      \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.10\"\r\n      }\r\n    },\r\n    \"node_modules/is-binary-path\": {\r\n      \"version\": \"2.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\r\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\r\n      \"dependencies\": {\r\n        \"binary-extensions\": \"^2.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      }\r\n    },\r\n    \"node_modules/is-extglob\": {\r\n      \"version\": \"2.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\r\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/is-glob\": {\r\n      \"version\": \"4.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\r\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\r\n      \"dependencies\": {\r\n        \"is-extglob\": \"^2.1.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/is-number\": {\r\n      \"version\": \"7.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\r\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.12.0\"\r\n      }\r\n    },\r\n    \"node_modules/isarray\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz\",\r\n      \"integrity\": \"sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==\"\r\n    },\r\n    \"node_modules/lru-cache\": {\r\n      \"version\": \"6.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\r\n      \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\r\n      \"dependencies\": {\r\n        \"yallist\": \"^4.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=10\"\r\n      }\r\n    },\r\n    \"node_modules/media-typer\": {\r\n      \"version\": \"0.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\r\n      \"integrity\": \"sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/merge-descriptors\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-cCi6g3/Zr1iqQi6ySbseM1Xvooa98N0w31jzUYrXPX2xqObmFGHJ0tQ5u74H3mVh7wLouTseZyYIq39g8cNp1w==\"\r\n    },\r\n    \"node_modules/methods\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/mime\": {\r\n      \"version\": \"1.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.6.0.tgz\",\r\n      \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\",\r\n      \"bin\": {\r\n        \"mime\": \"cli.js\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/mime-db\": {\r\n      \"version\": \"1.52.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\r\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/mime-types\": {\r\n      \"version\": \"2.1.35\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\r\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\r\n      \"dependencies\": {\r\n        \"mime-db\": \"1.52.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/minimatch\": {\r\n      \"version\": \"3.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\r\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\r\n      \"dependencies\": {\r\n        \"brace-expansion\": \"^1.1.7\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \"*\"\r\n      }\r\n    },\r\n    \"node_modules/ms\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"\r\n    },\r\n    \"node_modules/mysql\": {\r\n      \"version\": \"2.18.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/mysql/-/mysql-2.18.1.tgz\",\r\n      \"integrity\": \"sha512-Bca+gk2YWmqp2Uf6k5NFEurwY/0td0cpebAucFpY/3jhrwrVGuxU2uQFCHjU19SJfje0yQvi+rVWdq78hR5lig==\",\r\n      \"dependencies\": {\r\n        \"bignumber.js\": \"9.0.0\",\r\n        \"readable-stream\": \"2.3.7\",\r\n        \"safe-buffer\": \"5.1.2\",\r\n        \"sqlstring\": \"2.3.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/mysql/node_modules/safe-buffer\": {\r\n      \"version\": \"5.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\r\n      \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\"\r\n    },\r\n    \"node_modules/negotiator\": {\r\n      \"version\": \"0.6.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\r\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/nodemon\": {\r\n      \"version\": \"3.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/nodemon/-/nodemon-3.1.0.tgz\",\r\n      \"integrity\": \"sha512-xqlktYlDMCepBJd43ZQhjWwMw2obW/JRvkrLxq5RCNcuDDX1DbcPT+qT1IlIIdf+DhnWs90JpTMe+Y5KxOchvA==\",\r\n      \"dependencies\": {\r\n        \"chokidar\": \"^3.5.2\",\r\n        \"debug\": \"^4\",\r\n        \"ignore-by-default\": \"^1.0.1\",\r\n        \"minimatch\": \"^3.1.2\",\r\n        \"pstree.remy\": \"^1.1.8\",\r\n        \"semver\": \"^7.5.3\",\r\n        \"simple-update-notifier\": \"^2.0.0\",\r\n        \"supports-color\": \"^5.5.0\",\r\n        \"touch\": \"^3.1.0\",\r\n        \"undefsafe\": \"^2.0.5\"\r\n      },\r\n      \"bin\": {\r\n        \"nodemon\": \"bin/nodemon.js\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=10\"\r\n      },\r\n      \"funding\": {\r\n        \"type\": \"opencollective\",\r\n        \"url\": \"https://opencollective.com/nodemon\"\r\n      }\r\n    },\r\n    \"node_modules/nodemon/node_modules/debug\": {\r\n      \"version\": \"4.3.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\r\n      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\r\n      \"dependencies\": {\r\n        \"ms\": \"2.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=6.0\"\r\n      },\r\n      \"peerDependenciesMeta\": {\r\n        \"supports-color\": {\r\n          \"optional\": true\r\n        }\r\n      }\r\n    },\r\n    \"node_modules/nodemon/node_modules/ms\": {\r\n      \"version\": \"2.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\r\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\"\r\n    },\r\n    \"node_modules/nopt\": {\r\n      \"version\": \"1.0.10\",\r\n      \"resolved\": \"https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz\",\r\n      \"integrity\": \"sha512-NWmpvLSqUrgrAC9HCuxEvb+PSloHpqVu+FqcO4eeF2h5qYRhA7ev6KvelyQAKtegUbC6RypJnlEOhd8vloNKYg==\",\r\n      \"dependencies\": {\r\n        \"abbrev\": \"1\"\r\n      },\r\n      \"bin\": {\r\n        \"nopt\": \"bin/nopt.js\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \"*\"\r\n      }\r\n    },\r\n    \"node_modules/normalize-path\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\r\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/object-assign\": {\r\n      \"version\": \"4.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\r\n      \"integrity\": \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/object-inspect\": {\r\n      \"version\": \"1.13.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.1.tgz\",\r\n      \"integrity\": \"sha512-5qoj1RUiKOMsCCNLV1CBiPYE10sziTsnmNxkAI/rZhiD63CF7IqdFGC/XzjWjpSgLf0LxXX3bDFIh0E18f6UhQ==\",\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/on-finished\": {\r\n      \"version\": \"2.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\r\n      \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\r\n      \"dependencies\": {\r\n        \"ee-first\": \"1.1.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/parseurl\": {\r\n      \"version\": \"1.3.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\r\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/path-to-regexp\": {\r\n      \"version\": \"0.1.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz\",\r\n      \"integrity\": \"sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ==\"\r\n    },\r\n    \"node_modules/picomatch\": {\r\n      \"version\": \"2.3.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\r\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\r\n      \"engines\": {\r\n        \"node\": \">=8.6\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\r\n      }\r\n    },\r\n    \"node_modules/process-nextick-args\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==\"\r\n    },\r\n    \"node_modules/proxy-addr\": {\r\n      \"version\": \"2.0.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\r\n      \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\r\n      \"dependencies\": {\r\n        \"forwarded\": \"0.2.0\",\r\n        \"ipaddr.js\": \"1.9.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.10\"\r\n      }\r\n    },\r\n    \"node_modules/pstree.remy\": {\r\n      \"version\": \"1.1.8\",\r\n      \"resolved\": \"https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz\",\r\n      \"integrity\": \"sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==\"\r\n    },\r\n    \"node_modules/qs\": {\r\n      \"version\": \"6.11.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.11.0.tgz\",\r\n      \"integrity\": \"sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==\",\r\n      \"dependencies\": {\r\n        \"side-channel\": \"^1.0.4\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.6\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/range-parser\": {\r\n      \"version\": \"1.2.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\r\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/raw-body\": {\r\n      \"version\": \"2.5.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.1.tgz\",\r\n      \"integrity\": \"sha512-qqJBtEyVgS0ZmPGdCFPWJ3FreoqvG4MVQln/kCgF7Olq95IbOp0/BWyMwbdtn4VTvkM8Y7khCQ2Xgk/tcrCXig==\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.1.2\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"iconv-lite\": \"0.4.24\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/readable-stream\": {\r\n      \"version\": \"2.3.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz\",\r\n      \"integrity\": \"sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==\",\r\n      \"dependencies\": {\r\n        \"core-util-is\": \"~1.0.0\",\r\n        \"inherits\": \"~2.0.3\",\r\n        \"isarray\": \"~1.0.0\",\r\n        \"process-nextick-args\": \"~2.0.0\",\r\n        \"safe-buffer\": \"~5.1.1\",\r\n        \"string_decoder\": \"~1.1.1\",\r\n        \"util-deprecate\": \"~1.0.1\"\r\n      }\r\n    },\r\n    \"node_modules/readable-stream/node_modules/safe-buffer\": {\r\n      \"version\": \"5.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\r\n      \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\"\r\n    },\r\n    \"node_modules/readdirp\": {\r\n      \"version\": \"3.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\r\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\r\n      \"dependencies\": {\r\n        \"picomatch\": \"^2.2.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/safe-buffer\": {\r\n      \"version\": \"5.2.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\r\n      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\r\n      \"funding\": [\r\n        {\r\n          \"type\": \"github\",\r\n          \"url\": \"https://github.com/sponsors/feross\"\r\n        },\r\n        {\r\n          \"type\": \"patreon\",\r\n          \"url\": \"https://www.patreon.com/feross\"\r\n        },\r\n        {\r\n          \"type\": \"consulting\",\r\n          \"url\": \"https://feross.org/support\"\r\n        }\r\n      ]\r\n    },\r\n    \"node_modules/safer-buffer\": {\r\n      \"version\": \"2.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\r\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\"\r\n    },\r\n    \"node_modules/semver\": {\r\n      \"version\": \"7.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.6.0.tgz\",\r\n      \"integrity\": \"sha512-EnwXhrlwXMk9gKu5/flx5sv/an57AkRplG3hTK68W7FRDN+k+OWBj65M7719OkA82XLBxrcX0KSHj+X5COhOVg==\",\r\n      \"dependencies\": {\r\n        \"lru-cache\": \"^6.0.0\"\r\n      },\r\n      \"bin\": {\r\n        \"semver\": \"bin/semver.js\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=10\"\r\n      }\r\n    },\r\n    \"node_modules/send\": {\r\n      \"version\": \"0.18.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/send/-/send-0.18.0.tgz\",\r\n      \"integrity\": \"sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==\",\r\n      \"dependencies\": {\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"2.0.0\",\r\n        \"destroy\": \"1.2.0\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"etag\": \"~1.8.1\",\r\n        \"fresh\": \"0.5.2\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"mime\": \"1.6.0\",\r\n        \"ms\": \"2.1.3\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"range-parser\": \"~1.2.1\",\r\n        \"statuses\": \"2.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/send/node_modules/ms\": {\r\n      \"version\": \"2.1.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\r\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"\r\n    },\r\n    \"node_modules/serve-static\": {\r\n      \"version\": \"1.15.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.15.0.tgz\",\r\n      \"integrity\": \"sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==\",\r\n      \"dependencies\": {\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"parseurl\": \"~1.3.3\",\r\n        \"send\": \"0.18.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/set-function-length\": {\r\n      \"version\": \"1.2.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.1.tgz\",\r\n      \"integrity\": \"sha512-j4t6ccc+VsKwYHso+kElc5neZpjtq9EnRICFZtWyBsLojhmeF/ZBd/elqm22WJh/BziDe/SBiOeAt0m2mfLD0g==\",\r\n      \"dependencies\": {\r\n        \"define-data-property\": \"^1.1.2\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"function-bind\": \"^1.1.2\",\r\n        \"get-intrinsic\": \"^1.2.3\",\r\n        \"gopd\": \"^1.0.1\",\r\n        \"has-property-descriptors\": \"^1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/setprototypeof\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\"\r\n    },\r\n    \"node_modules/side-channel\": {\r\n      \"version\": \"1.0.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.5.tgz\",\r\n      \"integrity\": \"sha512-QcgiIWV4WV7qWExbN5llt6frQB/lBven9pqliLXfGPB+K9ZYXxDozp0wLkHS24kWCm+6YXH/f0HhnObZnZOBnQ==\",\r\n      \"dependencies\": {\r\n        \"call-bind\": \"^1.0.6\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"get-intrinsic\": \"^1.2.4\",\r\n        \"object-inspect\": \"^1.13.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/simple-update-notifier\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-a2B9Y0KlNXl9u/vsW6sTIu9vGEpfKu2wRV6l1H3XEas/0gUIzGzBoP/IouTcUQbm9JWZLH3COxyn03TYlFax6w==\",\r\n      \"dependencies\": {\r\n        \"semver\": \"^7.5.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=10\"\r\n      }\r\n    },\r\n    \"node_modules/sqlstring\": {\r\n      \"version\": \"2.3.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/sqlstring/-/sqlstring-2.3.1.tgz\",\r\n      \"integrity\": \"sha512-ooAzh/7dxIG5+uDik1z/Rd1vli0+38izZhGzSa34FwR7IbelPWCCKSNIl8jlL/F7ERvy8CB2jNeM1E9i9mXMAQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/statuses\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/string_decoder\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==\",\r\n      \"dependencies\": {\r\n        \"safe-buffer\": \"~5.1.0\"\r\n      }\r\n    },\r\n    \"node_modules/string_decoder/node_modules/safe-buffer\": {\r\n      \"version\": \"5.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz\",\r\n      \"integrity\": \"sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==\"\r\n    },\r\n    \"node_modules/supports-color\": {\r\n      \"version\": \"5.5.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\r\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\r\n      \"dependencies\": {\r\n        \"has-flag\": \"^3.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/to-regex-range\": {\r\n      \"version\": \"5.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\r\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\r\n      \"dependencies\": {\r\n        \"is-number\": \"^7.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8.0\"\r\n      }\r\n    },\r\n    \"node_modules/toidentifier\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.6\"\r\n      }\r\n    },\r\n    \"node_modules/touch\": {\r\n      \"version\": \"3.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/touch/-/touch-3.1.0.tgz\",\r\n      \"integrity\": \"sha512-WBx8Uy5TLtOSRtIq+M03/sKDrXCLHxwDcquSP2c43Le03/9serjQBIztjRz6FkJez9D/hleyAXTBGLwwZUw9lA==\",\r\n      \"dependencies\": {\r\n        \"nopt\": \"~1.0.10\"\r\n      },\r\n      \"bin\": {\r\n        \"nodetouch\": \"bin/nodetouch.js\"\r\n      }\r\n    },\r\n    \"node_modules/type-is\": {\r\n      \"version\": \"1.6.18\",\r\n      \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\r\n      \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\r\n      \"dependencies\": {\r\n        \"media-typer\": \"0.3.0\",\r\n        \"mime-types\": \"~2.1.24\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/undefsafe\": {\r\n      \"version\": \"2.0.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz\",\r\n      \"integrity\": \"sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==\"\r\n    },\r\n    \"node_modules/unpipe\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\r\n      \"integrity\": \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/util-deprecate\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==\"\r\n    },\r\n    \"node_modules/utils-merge\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4.0\"\r\n      }\r\n    },\r\n    \"node_modules/vary\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/yallist\": {\r\n      \"version\": \"4.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\r\n      \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\"\r\n    }\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/.package-lock.json b/backend/node_modules/.package-lock.json
--- a/backend/node_modules/.package-lock.json	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/.package-lock.json	(date 1710190087308)
@@ -4,6 +4,56 @@
   "lockfileVersion": 3,
   "requires": true,
   "packages": {
+    "node_modules/@apidevtools/json-schema-ref-parser": {
+      "version": "9.1.2",
+      "resolved": "https://registry.npmjs.org/@apidevtools/json-schema-ref-parser/-/json-schema-ref-parser-9.1.2.tgz",
+      "integrity": "sha512-r1w81DpR+KyRWd3f+rk6TNqMgedmAxZP5v5KWlXQWlgMUUtyEJch0DKEci1SorPMiSeM8XPl7MZ3miJ60JIpQg==",
+      "dependencies": {
+        "@jsdevtools/ono": "^7.1.3",
+        "@types/json-schema": "^7.0.6",
+        "call-me-maybe": "^1.0.1",
+        "js-yaml": "^4.1.0"
+      }
+    },
+    "node_modules/@apidevtools/openapi-schemas": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/@apidevtools/openapi-schemas/-/openapi-schemas-2.1.0.tgz",
+      "integrity": "sha512-Zc1AlqrJlX3SlpupFGpiLi2EbteyP7fXmUOGup6/DnkRgjP9bgMM/ag+n91rsv0U1Gpz0H3VILA/o3bW7Ua6BQ==",
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/@apidevtools/swagger-methods": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/@apidevtools/swagger-methods/-/swagger-methods-3.0.2.tgz",
+      "integrity": "sha512-QAkD5kK2b1WfjDS/UQn/qQkbwF31uqRjPTrsCs5ZG9BQGAkjwvqGFjjPqAuzac/IYzpPtRzjCP1WrTuAIjMrXg=="
+    },
+    "node_modules/@apidevtools/swagger-parser": {
+      "version": "10.0.3",
+      "resolved": "https://registry.npmjs.org/@apidevtools/swagger-parser/-/swagger-parser-10.0.3.tgz",
+      "integrity": "sha512-sNiLY51vZOmSPFZA5TF35KZ2HbgYklQnTSDnkghamzLb3EkNtcQnrBQEj5AOCxHpTtXpqMCRM1CrmV2rG6nw4g==",
+      "dependencies": {
+        "@apidevtools/json-schema-ref-parser": "^9.0.6",
+        "@apidevtools/openapi-schemas": "^2.0.4",
+        "@apidevtools/swagger-methods": "^3.0.2",
+        "@jsdevtools/ono": "^7.1.3",
+        "call-me-maybe": "^1.0.1",
+        "z-schema": "^5.0.1"
+      },
+      "peerDependencies": {
+        "openapi-types": ">=7"
+      }
+    },
+    "node_modules/@jsdevtools/ono": {
+      "version": "7.1.3",
+      "resolved": "https://registry.npmjs.org/@jsdevtools/ono/-/ono-7.1.3.tgz",
+      "integrity": "sha512-4JQNk+3mVzK3xh2rqd6RB4J46qUR19azEHBneZyTZM+c456qOrbbM/5xcR8huNCCcbVt7+UmizG6GuUvPvKUYg=="
+    },
+    "node_modules/@types/json-schema": {
+      "version": "7.0.15",
+      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
+      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA=="
+    },
     "node_modules/abbrev": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
@@ -33,6 +83,11 @@
         "node": ">= 8"
       }
     },
+    "node_modules/argparse": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
+      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q=="
+    },
     "node_modules/array-flatten": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
@@ -60,12 +115,12 @@
       }
     },
     "node_modules/body-parser": {
-      "version": "1.20.1",
-      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.1.tgz",
-      "integrity": "sha512-jWi7abTbYwajOytWCQc37VulmWiRae5RyTpaCyDcS5/lMdtwSz5lOpDE67srw/HYe35f1z3fDQw+3txg7gNtWw==",
+      "version": "1.20.2",
+      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.2.tgz",
+      "integrity": "sha512-ml9pReCu3M61kGlqoTm2umSXTlRTuGTx0bfYj+uIUKKYycG5NtSbeetV3faSU6R7ajOPw0g/J1PvK4qNy7s5bA==",
       "dependencies": {
         "bytes": "3.1.2",
-        "content-type": "~1.0.4",
+        "content-type": "~1.0.5",
         "debug": "2.6.9",
         "depd": "2.0.0",
         "destroy": "1.2.0",
@@ -73,7 +128,7 @@
         "iconv-lite": "0.4.24",
         "on-finished": "2.4.1",
         "qs": "6.11.0",
-        "raw-body": "2.5.1",
+        "raw-body": "2.5.2",
         "type-is": "~1.6.18",
         "unpipe": "1.0.0"
       },
@@ -128,6 +183,11 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/call-me-maybe": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/call-me-maybe/-/call-me-maybe-1.0.2.tgz",
+      "integrity": "sha512-HpX65o1Hnr9HH25ojC1YGs7HCQLq0GCOibSaWER0eNpgJ/Z1MZv2mTc7+xh6WOPxbRVcmgbv4hGU+uSQ/2xFZQ=="
+    },
     "node_modules/chokidar": {
       "version": "3.6.0",
       "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
@@ -151,6 +211,14 @@
         "fsevents": "~2.3.2"
       }
     },
+    "node_modules/commander": {
+      "version": "6.2.0",
+      "resolved": "https://registry.npmjs.org/commander/-/commander-6.2.0.tgz",
+      "integrity": "sha512-zP4jEKbe8SHzKJYQmq8Y9gYjtO/POJLgIdKgV7B9qNmABVFVc+ctqSX6iXh4mCpJfRBOabiZ2YKPg8ciDw6C+Q==",
+      "engines": {
+        "node": ">= 6"
+      }
+    },
     "node_modules/concat-map": {
       "version": "0.0.1",
       "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
@@ -246,6 +314,17 @@
         "npm": "1.2.8000 || >= 1.4.16"
       }
     },
+    "node_modules/doctrine": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
+      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
+      "dependencies": {
+        "esutils": "^2.0.2"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
     "node_modules/ee-first": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
@@ -283,6 +362,14 @@
       "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
       "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow=="
     },
+    "node_modules/esutils": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
+      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
     "node_modules/etag": {
       "version": "1.8.1",
       "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
@@ -292,13 +379,13 @@
       }
     },
     "node_modules/express": {
-      "version": "4.18.2",
-      "resolved": "https://registry.npmjs.org/express/-/express-4.18.2.tgz",
-      "integrity": "sha512-5/PsL6iGPdfQ/lKM1UuielYgv3BUoJfz1aUwU9vHZ+J7gyvwdQXFEBIEIaxeGf0GIcreATNyBExtalisDbuMqQ==",
+      "version": "4.18.3",
+      "resolved": "https://registry.npmjs.org/express/-/express-4.18.3.tgz",
+      "integrity": "sha512-6VyCijWQ+9O7WuVMTRBTl+cjNNIzD5cY5mQ1WM8r/LEkI2u8EYpOotESNwzNlyCn3g+dmjKYI6BmNneSr/FSRw==",
       "dependencies": {
         "accepts": "~1.3.8",
         "array-flatten": "1.1.1",
-        "body-parser": "1.20.1",
+        "body-parser": "1.20.2",
         "content-disposition": "0.5.4",
         "content-type": "~1.0.4",
         "cookie": "0.5.0",
@@ -376,6 +463,11 @@
         "node": ">= 0.6"
       }
     },
+    "node_modules/fs.realpath": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
+      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw=="
+    },
     "node_modules/fsevents": {
       "version": "2.3.3",
       "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
@@ -415,6 +507,25 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/glob": {
+      "version": "7.1.6",
+      "resolved": "https://registry.npmjs.org/glob/-/glob-7.1.6.tgz",
+      "integrity": "sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==",
+      "dependencies": {
+        "fs.realpath": "^1.0.0",
+        "inflight": "^1.0.4",
+        "inherits": "2",
+        "minimatch": "^3.0.4",
+        "once": "^1.3.0",
+        "path-is-absolute": "^1.0.0"
+      },
+      "engines": {
+        "node": "*"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
     "node_modules/glob-parent": {
       "version": "5.1.2",
       "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
@@ -520,6 +631,15 @@
       "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz",
       "integrity": "sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA=="
     },
+    "node_modules/inflight": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
+      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
+      "dependencies": {
+        "once": "^1.3.0",
+        "wrappy": "1"
+      }
+    },
     "node_modules/inherits": {
       "version": "2.0.4",
       "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
@@ -576,6 +696,32 @@
       "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
       "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ=="
     },
+    "node_modules/js-yaml": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
+      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
+      "dependencies": {
+        "argparse": "^2.0.1"
+      },
+      "bin": {
+        "js-yaml": "bin/js-yaml.js"
+      }
+    },
+    "node_modules/lodash.get": {
+      "version": "4.4.2",
+      "resolved": "https://registry.npmjs.org/lodash.get/-/lodash.get-4.4.2.tgz",
+      "integrity": "sha512-z+Uw/vLuy6gQe8cfaFWD7p0wVv8fJl3mbzXh33RS+0oW2wvUqiRXiQ69gLWSLpgB5/6sU+r6BlQR0MBILadqTQ=="
+    },
+    "node_modules/lodash.isequal": {
+      "version": "4.5.0",
+      "resolved": "https://registry.npmjs.org/lodash.isequal/-/lodash.isequal-4.5.0.tgz",
+      "integrity": "sha512-pDo3lu8Jhfjqls6GkMgpahsF9kCyayhgykjyLMNFTKWrpVdAQtYyB4muAMWozBB4ig/dtWAmsMxLEI8wuz+DYQ=="
+    },
+    "node_modules/lodash.mergewith": {
+      "version": "4.6.2",
+      "resolved": "https://registry.npmjs.org/lodash.mergewith/-/lodash.mergewith-4.6.2.tgz",
+      "integrity": "sha512-GK3g5RPZWTRSeLSpgP8Xhra+pnjBC56q9FZYe1d5RN3TJ35dbkGy3YqBSMbyCrlbi+CM9Z3Jk5yTL7RCsqboyQ=="
+    },
     "node_modules/lru-cache": {
       "version": "6.0.0",
       "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz",
@@ -778,6 +924,20 @@
         "node": ">= 0.8"
       }
     },
+    "node_modules/once": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
+      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
+      "dependencies": {
+        "wrappy": "1"
+      }
+    },
+    "node_modules/openapi-types": {
+      "version": "12.1.3",
+      "resolved": "https://registry.npmjs.org/openapi-types/-/openapi-types-12.1.3.tgz",
+      "integrity": "sha512-N4YtSYJqghVu4iek2ZUvcN/0aqH1kRDuNqzcycDxhOUpg7GdvLa2F3DgS6yBNhInhv2r/6I0Flkn7CqL8+nIcw==",
+      "peer": true
+    },
     "node_modules/parseurl": {
       "version": "1.3.3",
       "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
@@ -786,6 +946,14 @@
         "node": ">= 0.8"
       }
     },
+    "node_modules/path-is-absolute": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
+      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
     "node_modules/path-to-regexp": {
       "version": "0.1.7",
       "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
@@ -847,9 +1015,9 @@
       }
     },
     "node_modules/raw-body": {
-      "version": "2.5.1",
-      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.1.tgz",
-      "integrity": "sha512-qqJBtEyVgS0ZmPGdCFPWJ3FreoqvG4MVQln/kCgF7Olq95IbOp0/BWyMwbdtn4VTvkM8Y7khCQ2Xgk/tcrCXig==",
+      "version": "2.5.2",
+      "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz",
+      "integrity": "sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==",
       "dependencies": {
         "bytes": "3.1.2",
         "http-errors": "2.0.0",
@@ -992,11 +1160,11 @@
       "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
     },
     "node_modules/side-channel": {
-      "version": "1.0.5",
-      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.0.5.tgz",
-      "integrity": "sha512-QcgiIWV4WV7qWExbN5llt6frQB/lBven9pqliLXfGPB+K9ZYXxDozp0wLkHS24kWCm+6YXH/f0HhnObZnZOBnQ==",
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz",
+      "integrity": "sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==",
       "dependencies": {
-        "call-bind": "^1.0.6",
+        "call-bind": "^1.0.7",
         "es-errors": "^1.3.0",
         "get-intrinsic": "^1.2.4",
         "object-inspect": "^1.13.1"
@@ -1059,6 +1227,55 @@
         "node": ">=4"
       }
     },
+    "node_modules/swagger-jsdoc": {
+      "version": "6.2.8",
+      "resolved": "https://registry.npmjs.org/swagger-jsdoc/-/swagger-jsdoc-6.2.8.tgz",
+      "integrity": "sha512-VPvil1+JRpmJ55CgAtn8DIcpBs0bL5L3q5bVQvF4tAW/k/9JYSj7dCpaYCAv5rufe0vcCbBRQXGvzpkWjvLklQ==",
+      "dependencies": {
+        "commander": "6.2.0",
+        "doctrine": "3.0.0",
+        "glob": "7.1.6",
+        "lodash.mergewith": "^4.6.2",
+        "swagger-parser": "^10.0.3",
+        "yaml": "2.0.0-1"
+      },
+      "bin": {
+        "swagger-jsdoc": "bin/swagger-jsdoc.js"
+      },
+      "engines": {
+        "node": ">=12.0.0"
+      }
+    },
+    "node_modules/swagger-parser": {
+      "version": "10.0.3",
+      "resolved": "https://registry.npmjs.org/swagger-parser/-/swagger-parser-10.0.3.tgz",
+      "integrity": "sha512-nF7oMeL4KypldrQhac8RyHerJeGPD1p2xDh900GPvc+Nk7nWP6jX2FcC7WmkinMoAmoO774+AFXcWsW8gMWEIg==",
+      "dependencies": {
+        "@apidevtools/swagger-parser": "10.0.3"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/swagger-ui-dist": {
+      "version": "5.11.10",
+      "resolved": "https://registry.npmjs.org/swagger-ui-dist/-/swagger-ui-dist-5.11.10.tgz",
+      "integrity": "sha512-wAHf32iFqJCBkdQRBYB1pR8kJuliJbgCXcdgkU7GkDvrOfD2gVmyEwdTi9rERCur/OrufifnH5UecOzlQ07CYg=="
+    },
+    "node_modules/swagger-ui-express": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/swagger-ui-express/-/swagger-ui-express-5.0.0.tgz",
+      "integrity": "sha512-tsU9tODVvhyfkNSvf03E6FAk+z+5cU3lXAzMy6Pv4av2Gt2xA0++fogwC4qo19XuFf6hdxevPuVCSKFuMHJhFA==",
+      "dependencies": {
+        "swagger-ui-dist": ">=5.0.0"
+      },
+      "engines": {
+        "node": ">= v0.10.32"
+      },
+      "peerDependencies": {
+        "express": ">=4.0.0 || >=5.0.0-beta"
+      }
+    },
     "node_modules/to-regex-range": {
       "version": "5.0.1",
       "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
@@ -1127,6 +1344,14 @@
         "node": ">= 0.4.0"
       }
     },
+    "node_modules/validator": {
+      "version": "13.11.0",
+      "resolved": "https://registry.npmjs.org/validator/-/validator-13.11.0.tgz",
+      "integrity": "sha512-Ii+sehpSfZy+At5nPdnyMhx78fEoPDkR2XW/zimHEL3MyGJQOCQ7WeP20jPYRz7ZCpcKLB21NxuXHF3bxjStBQ==",
+      "engines": {
+        "node": ">= 0.10"
+      }
+    },
     "node_modules/vary": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
@@ -1135,10 +1360,51 @@
         "node": ">= 0.8"
       }
     },
+    "node_modules/wrappy": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
+      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ=="
+    },
     "node_modules/yallist": {
       "version": "4.0.0",
       "resolved": "https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz",
       "integrity": "sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A=="
+    },
+    "node_modules/yaml": {
+      "version": "2.0.0-1",
+      "resolved": "https://registry.npmjs.org/yaml/-/yaml-2.0.0-1.tgz",
+      "integrity": "sha512-W7h5dEhywMKenDJh2iX/LABkbFnBxasD27oyXWDS/feDsxiw0dD5ncXdYXgkvAsXIY2MpW/ZKkr9IU30DBdMNQ==",
+      "engines": {
+        "node": ">= 6"
+      }
+    },
+    "node_modules/z-schema": {
+      "version": "5.0.5",
+      "resolved": "https://registry.npmjs.org/z-schema/-/z-schema-5.0.5.tgz",
+      "integrity": "sha512-D7eujBWkLa3p2sIpJA0d1pr7es+a7m0vFAnZLlCEKq/Ij2k0MLi9Br2UPxoxdYystm5K1yeBGzub0FlYUEWj2Q==",
+      "dependencies": {
+        "lodash.get": "^4.4.2",
+        "lodash.isequal": "^4.5.0",
+        "validator": "^13.7.0"
+      },
+      "bin": {
+        "z-schema": "bin/z-schema"
+      },
+      "engines": {
+        "node": ">=8.0.0"
+      },
+      "optionalDependencies": {
+        "commander": "^9.4.1"
+      }
+    },
+    "node_modules/z-schema/node_modules/commander": {
+      "version": "9.5.0",
+      "resolved": "https://registry.npmjs.org/commander/-/commander-9.5.0.tgz",
+      "integrity": "sha512-KRs7WVDKg86PWiuAqhDrAQnTXZKraVcCc6vFdL14qrZ/DcWwuRo7VoiYXalXO7S5GKpqYiVEwCbgFDfxNHKJBQ==",
+      "optional": true,
+      "engines": {
+        "node": "^12.20.0 || >=14"
+      }
     }
   }
 }
Index: backend/node_modules/express/History.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>4.18.2 / 2022-10-08\r\n===================\r\n\r\n  * Fix regression routing a large stack in a single route\r\n  * deps: body-parser@1.20.1\r\n    - deps: qs@6.11.0\r\n    - perf: remove unnecessary object clone\r\n  * deps: qs@6.11.0\r\n\r\n4.18.1 / 2022-04-29\r\n===================\r\n\r\n  * Fix hanging on large stack of sync routes\r\n\r\n4.18.0 / 2022-04-25\r\n===================\r\n\r\n  * Add \"root\" option to `res.download`\r\n  * Allow `options` without `filename` in `res.download`\r\n  * Deprecate string and non-integer arguments to `res.status`\r\n  * Fix behavior of `null`/`undefined` as `maxAge` in `res.cookie`\r\n  * Fix handling very large stacks of sync middleware\r\n  * Ignore `Object.prototype` values in settings through `app.set`/`app.get`\r\n  * Invoke `default` with same arguments as types in `res.format`\r\n  * Support proper 205 responses using `res.send`\r\n  * Use `http-errors` for `res.format` error\r\n  * deps: body-parser@1.20.0\r\n    - Fix error message for json parse whitespace in `strict`\r\n    - Fix internal error when inflated body exceeds limit\r\n    - Prevent loss of async hooks context\r\n    - Prevent hanging when request already read\r\n    - deps: depd@2.0.0\r\n    - deps: http-errors@2.0.0\r\n    - deps: on-finished@2.4.1\r\n    - deps: qs@6.10.3\r\n    - deps: raw-body@2.5.1\r\n  * deps: cookie@0.5.0\r\n    - Add `priority` option\r\n    - Fix `expires` option to reject invalid dates\r\n  * deps: depd@2.0.0\r\n    - Replace internal `eval` usage with `Function` constructor\r\n    - Use instance methods on `process` to check for listeners\r\n  * deps: finalhandler@1.2.0\r\n    - Remove set content headers that break response\r\n    - deps: on-finished@2.4.1\r\n    - deps: statuses@2.0.1\r\n  * deps: on-finished@2.4.1\r\n    - Prevent loss of async hooks context\r\n  * deps: qs@6.10.3\r\n  * deps: send@0.18.0\r\n    - Fix emitted 416 error missing headers property\r\n    - Limit the headers removed for 304 response\r\n    - deps: depd@2.0.0\r\n    - deps: destroy@1.2.0\r\n    - deps: http-errors@2.0.0\r\n    - deps: on-finished@2.4.1\r\n    - deps: statuses@2.0.1\r\n  * deps: serve-static@1.15.0\r\n    - deps: send@0.18.0\r\n  * deps: statuses@2.0.1\r\n    - Remove code 306\r\n    - Rename `425 Unordered Collection` to standard `425 Too Early`\r\n\r\n4.17.3 / 2022-02-16\r\n===================\r\n\r\n  * deps: accepts@~1.3.8\r\n    - deps: mime-types@~2.1.34\r\n    - deps: negotiator@0.6.3\r\n  * deps: body-parser@1.19.2\r\n    - deps: bytes@3.1.2\r\n    - deps: qs@6.9.7\r\n    - deps: raw-body@2.4.3\r\n  * deps: cookie@0.4.2\r\n  * deps: qs@6.9.7\r\n    * Fix handling of `__proto__` keys\r\n  * pref: remove unnecessary regexp for trust proxy\r\n\r\n4.17.2 / 2021-12-16\r\n===================\r\n\r\n  * Fix handling of `undefined` in `res.jsonp`\r\n  * Fix handling of `undefined` when `\"json escape\"` is enabled\r\n  * Fix incorrect middleware execution with unanchored `RegExp`s\r\n  * Fix `res.jsonp(obj, status)` deprecation message\r\n  * Fix typo in `res.is` JSDoc\r\n  * deps: body-parser@1.19.1\r\n    - deps: bytes@3.1.1\r\n    - deps: http-errors@1.8.1\r\n    - deps: qs@6.9.6\r\n    - deps: raw-body@2.4.2\r\n    - deps: safe-buffer@5.2.1\r\n    - deps: type-is@~1.6.18\r\n  * deps: content-disposition@0.5.4\r\n    - deps: safe-buffer@5.2.1\r\n  * deps: cookie@0.4.1\r\n    - Fix `maxAge` option to reject invalid values\r\n  * deps: proxy-addr@~2.0.7\r\n    - Use `req.socket` over deprecated `req.connection`\r\n    - deps: forwarded@0.2.0\r\n    - deps: ipaddr.js@1.9.1\r\n  * deps: qs@6.9.6\r\n  * deps: safe-buffer@5.2.1\r\n  * deps: send@0.17.2\r\n    - deps: http-errors@1.8.1\r\n    - deps: ms@2.1.3\r\n    - pref: ignore empty http tokens\r\n  * deps: serve-static@1.14.2\r\n    - deps: send@0.17.2\r\n  * deps: setprototypeof@1.2.0\r\n\r\n4.17.1 / 2019-05-25\r\n===================\r\n\r\n  * Revert \"Improve error message for `null`/`undefined` to `res.status`\"\r\n\r\n4.17.0 / 2019-05-16\r\n===================\r\n\r\n  * Add `express.raw` to parse bodies into `Buffer`\r\n  * Add `express.text` to parse bodies into string\r\n  * Improve error message for non-strings to `res.sendFile`\r\n  * Improve error message for `null`/`undefined` to `res.status`\r\n  * Support multiple hosts in `X-Forwarded-Host`\r\n  * deps: accepts@~1.3.7\r\n  * deps: body-parser@1.19.0\r\n    - Add encoding MIK\r\n    - Add petabyte (`pb`) support\r\n    - Fix parsing array brackets after index\r\n    - deps: bytes@3.1.0\r\n    - deps: http-errors@1.7.2\r\n    - deps: iconv-lite@0.4.24\r\n    - deps: qs@6.7.0\r\n    - deps: raw-body@2.4.0\r\n    - deps: type-is@~1.6.17\r\n  * deps: content-disposition@0.5.3\r\n  * deps: cookie@0.4.0\r\n    - Add `SameSite=None` support\r\n  * deps: finalhandler@~1.1.2\r\n    - Set stricter `Content-Security-Policy` header\r\n    - deps: parseurl@~1.3.3\r\n    - deps: statuses@~1.5.0\r\n  * deps: parseurl@~1.3.3\r\n  * deps: proxy-addr@~2.0.5\r\n    - deps: ipaddr.js@1.9.0\r\n  * deps: qs@6.7.0\r\n    - Fix parsing array brackets after index\r\n  * deps: range-parser@~1.2.1\r\n  * deps: send@0.17.1\r\n    - Set stricter CSP header in redirect & error responses\r\n    - deps: http-errors@~1.7.2\r\n    - deps: mime@1.6.0\r\n    - deps: ms@2.1.1\r\n    - deps: range-parser@~1.2.1\r\n    - deps: statuses@~1.5.0\r\n    - perf: remove redundant `path.normalize` call\r\n  * deps: serve-static@1.14.1\r\n    - Set stricter CSP header in redirect response\r\n    - deps: parseurl@~1.3.3\r\n    - deps: send@0.17.1\r\n  * deps: setprototypeof@1.1.1\r\n  * deps: statuses@~1.5.0\r\n    - Add `103 Early Hints`\r\n  * deps: type-is@~1.6.18\r\n    - deps: mime-types@~2.1.24\r\n    - perf: prevent internal `throw` on invalid type\r\n\r\n4.16.4 / 2018-10-10\r\n===================\r\n\r\n  * Fix issue where `\"Request aborted\"` may be logged in `res.sendfile`\r\n  * Fix JSDoc for `Router` constructor\r\n  * deps: body-parser@1.18.3\r\n    - Fix deprecation warnings on Node.js 10+\r\n    - Fix stack trace for strict json parse error\r\n    - deps: depd@~1.1.2\r\n    - deps: http-errors@~1.6.3\r\n    - deps: iconv-lite@0.4.23\r\n    - deps: qs@6.5.2\r\n    - deps: raw-body@2.3.3\r\n    - deps: type-is@~1.6.16\r\n  * deps: proxy-addr@~2.0.4\r\n    - deps: ipaddr.js@1.8.0\r\n  * deps: qs@6.5.2\r\n  * deps: safe-buffer@5.1.2\r\n\r\n4.16.3 / 2018-03-12\r\n===================\r\n\r\n  * deps: accepts@~1.3.5\r\n    - deps: mime-types@~2.1.18\r\n  * deps: depd@~1.1.2\r\n    - perf: remove argument reassignment\r\n  * deps: encodeurl@~1.0.2\r\n    - Fix encoding `%` as last character\r\n  * deps: finalhandler@1.1.1\r\n    - Fix 404 output for bad / missing pathnames\r\n    - deps: encodeurl@~1.0.2\r\n    - deps: statuses@~1.4.0\r\n  * deps: proxy-addr@~2.0.3\r\n    - deps: ipaddr.js@1.6.0\r\n  * deps: send@0.16.2\r\n    - Fix incorrect end tag in default error & redirects\r\n    - deps: depd@~1.1.2\r\n    - deps: encodeurl@~1.0.2\r\n    - deps: statuses@~1.4.0\r\n  * deps: serve-static@1.13.2\r\n    - Fix incorrect end tag in redirects\r\n    - deps: encodeurl@~1.0.2\r\n    - deps: send@0.16.2\r\n  * deps: statuses@~1.4.0\r\n  * deps: type-is@~1.6.16\r\n    - deps: mime-types@~2.1.18\r\n\r\n4.16.2 / 2017-10-09\r\n===================\r\n\r\n  * Fix `TypeError` in `res.send` when given `Buffer` and `ETag` header set\r\n  * perf: skip parsing of entire `X-Forwarded-Proto` header\r\n\r\n4.16.1 / 2017-09-29\r\n===================\r\n\r\n  * deps: send@0.16.1\r\n  * deps: serve-static@1.13.1\r\n    - Fix regression when `root` is incorrectly set to a file\r\n    - deps: send@0.16.1\r\n\r\n4.16.0 / 2017-09-28\r\n===================\r\n\r\n  * Add `\"json escape\"` setting for `res.json` and `res.jsonp`\r\n  * Add `express.json` and `express.urlencoded` to parse bodies\r\n  * Add `options` argument to `res.download`\r\n  * Improve error message when autoloading invalid view engine\r\n  * Improve error messages when non-function provided as middleware\r\n  * Skip `Buffer` encoding when not generating ETag for small response\r\n  * Use `safe-buffer` for improved Buffer API\r\n  * deps: accepts@~1.3.4\r\n    - deps: mime-types@~2.1.16\r\n  * deps: content-type@~1.0.4\r\n    - perf: remove argument reassignment\r\n    - perf: skip parameter parsing when no parameters\r\n  * deps: etag@~1.8.1\r\n    - perf: replace regular expression with substring\r\n  * deps: finalhandler@1.1.0\r\n    - Use `res.headersSent` when available\r\n  * deps: parseurl@~1.3.2\r\n    - perf: reduce overhead for full URLs\r\n    - perf: unroll the \"fast-path\" `RegExp`\r\n  * deps: proxy-addr@~2.0.2\r\n    - Fix trimming leading / trailing OWS in `X-Forwarded-For`\r\n    - deps: forwarded@~0.1.2\r\n    - deps: ipaddr.js@1.5.2\r\n    - perf: reduce overhead when no `X-Forwarded-For` header\r\n  * deps: qs@6.5.1\r\n    - Fix parsing & compacting very deep objects\r\n  * deps: send@0.16.0\r\n    - Add 70 new types for file extensions\r\n    - Add `immutable` option\r\n    - Fix missing `</html>` in default error & redirects\r\n    - Set charset as \"UTF-8\" for .js and .json\r\n    - Use instance methods on steam to check for listeners\r\n    - deps: mime@1.4.1\r\n    - perf: improve path validation speed\r\n  * deps: serve-static@1.13.0\r\n    - Add 70 new types for file extensions\r\n    - Add `immutable` option\r\n    - Set charset as \"UTF-8\" for .js and .json\r\n    - deps: send@0.16.0\r\n  * deps: setprototypeof@1.1.0\r\n  * deps: utils-merge@1.0.1\r\n  * deps: vary@~1.1.2\r\n    - perf: improve header token parsing speed\r\n  * perf: re-use options object when generating ETags\r\n  * perf: remove dead `.charset` set in `res.jsonp`\r\n\r\n4.15.5 / 2017-09-24\r\n===================\r\n\r\n  * deps: debug@2.6.9\r\n  * deps: finalhandler@~1.0.6\r\n    - deps: debug@2.6.9\r\n    - deps: parseurl@~1.3.2\r\n  * deps: fresh@0.5.2\r\n    - Fix handling of modified headers with invalid dates\r\n    - perf: improve ETag match loop\r\n    - perf: improve `If-None-Match` token parsing\r\n  * deps: send@0.15.6\r\n    - Fix handling of modified headers with invalid dates\r\n    - deps: debug@2.6.9\r\n    - deps: etag@~1.8.1\r\n    - deps: fresh@0.5.2\r\n    - perf: improve `If-Match` token parsing\r\n  * deps: serve-static@1.12.6\r\n    - deps: parseurl@~1.3.2\r\n    - deps: send@0.15.6\r\n    - perf: improve slash collapsing\r\n\r\n4.15.4 / 2017-08-06\r\n===================\r\n\r\n  * deps: debug@2.6.8\r\n  * deps: depd@~1.1.1\r\n    - Remove unnecessary `Buffer` loading\r\n  * deps: finalhandler@~1.0.4\r\n    - deps: debug@2.6.8\r\n  * deps: proxy-addr@~1.1.5\r\n    - Fix array argument being altered\r\n    - deps: ipaddr.js@1.4.0\r\n  * deps: qs@6.5.0\r\n  * deps: send@0.15.4\r\n    - deps: debug@2.6.8\r\n    - deps: depd@~1.1.1\r\n    - deps: http-errors@~1.6.2\r\n  * deps: serve-static@1.12.4\r\n    - deps: send@0.15.4\r\n\r\n4.15.3 / 2017-05-16\r\n===================\r\n\r\n  * Fix error when `res.set` cannot add charset to `Content-Type`\r\n  * deps: debug@2.6.7\r\n    - Fix `DEBUG_MAX_ARRAY_LENGTH`\r\n    - deps: ms@2.0.0\r\n  * deps: finalhandler@~1.0.3\r\n    - Fix missing `</html>` in HTML document\r\n    - deps: debug@2.6.7\r\n  * deps: proxy-addr@~1.1.4\r\n    - deps: ipaddr.js@1.3.0\r\n  * deps: send@0.15.3\r\n    - deps: debug@2.6.7\r\n    - deps: ms@2.0.0\r\n  * deps: serve-static@1.12.3\r\n    - deps: send@0.15.3\r\n  * deps: type-is@~1.6.15\r\n    - deps: mime-types@~2.1.15\r\n  * deps: vary@~1.1.1\r\n    - perf: hoist regular expression\r\n\r\n4.15.2 / 2017-03-06\r\n===================\r\n\r\n  * deps: qs@6.4.0\r\n    - Fix regression parsing keys starting with `[`\r\n\r\n4.15.1 / 2017-03-05\r\n===================\r\n\r\n  * deps: send@0.15.1\r\n    - Fix issue when `Date.parse` does not return `NaN` on invalid date\r\n    - Fix strict violation in broken environments\r\n  * deps: serve-static@1.12.1\r\n    - Fix issue when `Date.parse` does not return `NaN` on invalid date\r\n    - deps: send@0.15.1\r\n\r\n4.15.0 / 2017-03-01\r\n===================\r\n\r\n  * Add debug message when loading view engine\r\n  * Add `next(\"router\")` to exit from router\r\n  * Fix case where `router.use` skipped requests routes did not\r\n  * Remove usage of `res._headers` private field\r\n    - Improves compatibility with Node.js 8 nightly\r\n  * Skip routing when `req.url` is not set\r\n  * Use `%o` in path debug to tell types apart\r\n  * Use `Object.create` to setup request & response prototypes\r\n  * Use `setprototypeof` module to replace `__proto__` setting\r\n  * Use `statuses` instead of `http` module for status messages\r\n  * deps: debug@2.6.1\r\n    - Allow colors in workers\r\n    - Deprecated `DEBUG_FD` environment variable set to `3` or higher\r\n    - Fix error when running under React Native\r\n    - Use same color for same namespace\r\n    - deps: ms@0.7.2\r\n  * deps: etag@~1.8.0\r\n    - Use SHA1 instead of MD5 for ETag hashing\r\n    - Works with FIPS 140-2 OpenSSL configuration\r\n  * deps: finalhandler@~1.0.0\r\n    - Fix exception when `err` cannot be converted to a string\r\n    - Fully URL-encode the pathname in the 404\r\n    - Only include the pathname in the 404 message\r\n    - Send complete HTML document\r\n    - Set `Content-Security-Policy: default-src 'self'` header\r\n    - deps: debug@2.6.1\r\n  * deps: fresh@0.5.0\r\n    - Fix false detection of `no-cache` request directive\r\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\r\n    - Fix weak `ETag` matching to match spec\r\n    - perf: delay reading header values until needed\r\n    - perf: enable strict mode\r\n    - perf: hoist regular expressions\r\n    - perf: remove duplicate conditional\r\n    - perf: remove unnecessary boolean coercions\r\n    - perf: skip checking modified time if ETag check failed\r\n    - perf: skip parsing `If-None-Match` when no `ETag` header\r\n    - perf: use `Date.parse` instead of `new Date`\r\n  * deps: qs@6.3.1\r\n    - Fix array parsing from skipping empty values\r\n    - Fix compacting nested arrays\r\n  * deps: send@0.15.0\r\n    - Fix false detection of `no-cache` request directive\r\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\r\n    - Fix weak `ETag` matching to match spec\r\n    - Remove usage of `res._headers` private field\r\n    - Support `If-Match` and `If-Unmodified-Since` headers\r\n    - Use `res.getHeaderNames()` when available\r\n    - Use `res.headersSent` when available\r\n    - deps: debug@2.6.1\r\n    - deps: etag@~1.8.0\r\n    - deps: fresh@0.5.0\r\n    - deps: http-errors@~1.6.1\r\n  * deps: serve-static@1.12.0\r\n    - Fix false detection of `no-cache` request directive\r\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\r\n    - Fix weak `ETag` matching to match spec\r\n    - Remove usage of `res._headers` private field\r\n    - Send complete HTML document in redirect response\r\n    - Set default CSP header in redirect response\r\n    - Support `If-Match` and `If-Unmodified-Since` headers\r\n    - Use `res.getHeaderNames()` when available\r\n    - Use `res.headersSent` when available\r\n    - deps: send@0.15.0\r\n  * perf: add fast match path for `*` route\r\n  * perf: improve `req.ips` performance\r\n\r\n4.14.1 / 2017-01-28\r\n===================\r\n\r\n  * deps: content-disposition@0.5.2\r\n  * deps: finalhandler@0.5.1\r\n    - Fix exception when `err.headers` is not an object\r\n    - deps: statuses@~1.3.1\r\n    - perf: hoist regular expressions\r\n    - perf: remove duplicate validation path\r\n  * deps: proxy-addr@~1.1.3\r\n    - deps: ipaddr.js@1.2.0\r\n  * deps: send@0.14.2\r\n    - deps: http-errors@~1.5.1\r\n    - deps: ms@0.7.2\r\n    - deps: statuses@~1.3.1\r\n  * deps: serve-static@~1.11.2\r\n    - deps: send@0.14.2\r\n  * deps: type-is@~1.6.14\r\n    - deps: mime-types@~2.1.13\r\n\r\n4.14.0 / 2016-06-16\r\n===================\r\n\r\n  * Add `acceptRanges` option to `res.sendFile`/`res.sendfile`\r\n  * Add `cacheControl` option to `res.sendFile`/`res.sendfile`\r\n  * Add `options` argument to `req.range`\r\n    - Includes the `combine` option\r\n  * Encode URL in `res.location`/`res.redirect` if not already encoded\r\n  * Fix some redirect handling in `res.sendFile`/`res.sendfile`\r\n  * Fix Windows absolute path check using forward slashes\r\n  * Improve error with invalid arguments to `req.get()`\r\n  * Improve performance for `res.json`/`res.jsonp` in most cases\r\n  * Improve `Range` header handling in `res.sendFile`/`res.sendfile`\r\n  * deps: accepts@~1.3.3\r\n    - Fix including type extensions in parameters in `Accept` parsing\r\n    - Fix parsing `Accept` parameters with quoted equals\r\n    - Fix parsing `Accept` parameters with quoted semicolons\r\n    - Many performance improvements\r\n    - deps: mime-types@~2.1.11\r\n    - deps: negotiator@0.6.1\r\n  * deps: content-type@~1.0.2\r\n    - perf: enable strict mode\r\n  * deps: cookie@0.3.1\r\n    - Add `sameSite` option\r\n    - Fix cookie `Max-Age` to never be a floating point number\r\n    - Improve error message when `encode` is not a function\r\n    - Improve error message when `expires` is not a `Date`\r\n    - Throw better error for invalid argument to parse\r\n    - Throw on invalid values provided to `serialize`\r\n    - perf: enable strict mode\r\n    - perf: hoist regular expression\r\n    - perf: use for loop in parse\r\n    - perf: use string concatenation for serialization\r\n  * deps: finalhandler@0.5.0\r\n    - Change invalid or non-numeric status code to 500\r\n    - Overwrite status message to match set status code\r\n    - Prefer `err.statusCode` if `err.status` is invalid\r\n    - Set response headers from `err.headers` object\r\n    - Use `statuses` instead of `http` module for status messages\r\n  * deps: proxy-addr@~1.1.2\r\n    - Fix accepting various invalid netmasks\r\n    - Fix IPv6-mapped IPv4 validation edge cases\r\n    - IPv4 netmasks must be contiguous\r\n    - IPv6 addresses cannot be used as a netmask\r\n    - deps: ipaddr.js@1.1.1\r\n  * deps: qs@6.2.0\r\n    - Add `decoder` option in `parse` function\r\n  * deps: range-parser@~1.2.0\r\n    - Add `combine` option to combine overlapping ranges\r\n    - Fix incorrectly returning -1 when there is at least one valid range\r\n    - perf: remove internal function\r\n  * deps: send@0.14.1\r\n    - Add `acceptRanges` option\r\n    - Add `cacheControl` option\r\n    - Attempt to combine multiple ranges into single range\r\n    - Correctly inherit from `Stream` class\r\n    - Fix `Content-Range` header in 416 responses when using `start`/`end` options\r\n    - Fix `Content-Range` header missing from default 416 responses\r\n    - Fix redirect error when `path` contains raw non-URL characters\r\n    - Fix redirect when `path` starts with multiple forward slashes\r\n    - Ignore non-byte `Range` headers\r\n    - deps: http-errors@~1.5.0\r\n    - deps: range-parser@~1.2.0\r\n    - deps: statuses@~1.3.0\r\n    - perf: remove argument reassignment\r\n  * deps: serve-static@~1.11.1\r\n    - Add `acceptRanges` option\r\n    - Add `cacheControl` option\r\n    - Attempt to combine multiple ranges into single range\r\n    - Fix redirect error when `req.url` contains raw non-URL characters\r\n    - Ignore non-byte `Range` headers\r\n    - Use status code 301 for redirects\r\n    - deps: send@0.14.1\r\n  * deps: type-is@~1.6.13\r\n    - Fix type error when given invalid type to match against\r\n    - deps: mime-types@~2.1.11\r\n  * deps: vary@~1.1.0\r\n    - Only accept valid field names in the `field` argument\r\n  * perf: use strict equality when possible\r\n\r\n4.13.4 / 2016-01-21\r\n===================\r\n\r\n  * deps: content-disposition@0.5.1\r\n    - perf: enable strict mode\r\n  * deps: cookie@0.1.5\r\n    - Throw on invalid values provided to `serialize`\r\n  * deps: depd@~1.1.0\r\n    - Support web browser loading\r\n    - perf: enable strict mode\r\n  * deps: escape-html@~1.0.3\r\n    - perf: enable strict mode\r\n    - perf: optimize string replacement\r\n    - perf: use faster string coercion\r\n  * deps: finalhandler@0.4.1\r\n    - deps: escape-html@~1.0.3\r\n  * deps: merge-descriptors@1.0.1\r\n    - perf: enable strict mode\r\n  * deps: methods@~1.1.2\r\n    - perf: enable strict mode\r\n  * deps: parseurl@~1.3.1\r\n    - perf: enable strict mode\r\n  * deps: proxy-addr@~1.0.10\r\n    - deps: ipaddr.js@1.0.5\r\n    - perf: enable strict mode\r\n  * deps: range-parser@~1.0.3\r\n    - perf: enable strict mode\r\n  * deps: send@0.13.1\r\n    - deps: depd@~1.1.0\r\n    - deps: destroy@~1.0.4\r\n    - deps: escape-html@~1.0.3\r\n    - deps: range-parser@~1.0.3\r\n  * deps: serve-static@~1.10.2\r\n    - deps: escape-html@~1.0.3\r\n    - deps: parseurl@~1.3.0\r\n    - deps: send@0.13.1\r\n\r\n4.13.3 / 2015-08-02\r\n===================\r\n\r\n  * Fix infinite loop condition using `mergeParams: true`\r\n  * Fix inner numeric indices incorrectly altering parent `req.params`\r\n\r\n4.13.2 / 2015-07-31\r\n===================\r\n\r\n  * deps: accepts@~1.2.12\r\n    - deps: mime-types@~2.1.4\r\n  * deps: array-flatten@1.1.1\r\n    - perf: enable strict mode\r\n  * deps: path-to-regexp@0.1.7\r\n    - Fix regression with escaped round brackets and matching groups\r\n  * deps: type-is@~1.6.6\r\n    - deps: mime-types@~2.1.4\r\n\r\n4.13.1 / 2015-07-05\r\n===================\r\n\r\n  * deps: accepts@~1.2.10\r\n    - deps: mime-types@~2.1.2\r\n  * deps: qs@4.0.0\r\n    - Fix dropping parameters like `hasOwnProperty`\r\n    - Fix various parsing edge cases\r\n  * deps: type-is@~1.6.4\r\n    - deps: mime-types@~2.1.2\r\n    - perf: enable strict mode\r\n    - perf: remove argument reassignment\r\n\r\n4.13.0 / 2015-06-20\r\n===================\r\n\r\n  * Add settings to debug output\r\n  * Fix `res.format` error when only `default` provided\r\n  * Fix issue where `next('route')` in `app.param` would incorrectly skip values\r\n  * Fix hiding platform issues with `decodeURIComponent`\r\n    - Only `URIError`s are a 400\r\n  * Fix using `*` before params in routes\r\n  * Fix using capture groups before params in routes\r\n  * Simplify `res.cookie` to call `res.append`\r\n  * Use `array-flatten` module for flattening arrays\r\n  * deps: accepts@~1.2.9\r\n    - deps: mime-types@~2.1.1\r\n    - perf: avoid argument reassignment & argument slice\r\n    - perf: avoid negotiator recursive construction\r\n    - perf: enable strict mode\r\n    - perf: remove unnecessary bitwise operator\r\n  * deps: cookie@0.1.3\r\n    - perf: deduce the scope of try-catch deopt\r\n    - perf: remove argument reassignments\r\n  * deps: escape-html@1.0.2\r\n  * deps: etag@~1.7.0\r\n    - Always include entity length in ETags for hash length extensions\r\n    - Generate non-Stats ETags using MD5 only (no longer CRC32)\r\n    - Improve stat performance by removing hashing\r\n    - Improve support for JXcore\r\n    - Remove base64 padding in ETags to shorten\r\n    - Support \"fake\" stats objects in environments without fs\r\n    - Use MD5 instead of MD4 in weak ETags over 1KB\r\n  * deps: finalhandler@0.4.0\r\n    - Fix a false-positive when unpiping in Node.js 0.8\r\n    - Support `statusCode` property on `Error` objects\r\n    - Use `unpipe` module for unpiping requests\r\n    - deps: escape-html@1.0.2\r\n    - deps: on-finished@~2.3.0\r\n    - perf: enable strict mode\r\n    - perf: remove argument reassignment\r\n  * deps: fresh@0.3.0\r\n    - Add weak `ETag` matching support\r\n  * deps: on-finished@~2.3.0\r\n    - Add defined behavior for HTTP `CONNECT` requests\r\n    - Add defined behavior for HTTP `Upgrade` requests\r\n    - deps: ee-first@1.1.1\r\n  * deps: path-to-regexp@0.1.6\r\n  * deps: send@0.13.0\r\n    - Allow Node.js HTTP server to set `Date` response header\r\n    - Fix incorrectly removing `Content-Location` on 304 response\r\n    - Improve the default redirect response headers\r\n    - Send appropriate headers on default error response\r\n    - Use `http-errors` for standard emitted errors\r\n    - Use `statuses` instead of `http` module for status messages\r\n    - deps: escape-html@1.0.2\r\n    - deps: etag@~1.7.0\r\n    - deps: fresh@0.3.0\r\n    - deps: on-finished@~2.3.0\r\n    - perf: enable strict mode\r\n    - perf: remove unnecessary array allocations\r\n  * deps: serve-static@~1.10.0\r\n    - Add `fallthrough` option\r\n    - Fix reading options from options prototype\r\n    - Improve the default redirect response headers\r\n    - Malformed URLs now `next()` instead of 400\r\n    - deps: escape-html@1.0.2\r\n    - deps: send@0.13.0\r\n    - perf: enable strict mode\r\n    - perf: remove argument reassignment\r\n  * deps: type-is@~1.6.3\r\n    - deps: mime-types@~2.1.1\r\n    - perf: reduce try block size\r\n    - perf: remove bitwise operations\r\n  * perf: enable strict mode\r\n  * perf: isolate `app.render` try block\r\n  * perf: remove argument reassignments in application\r\n  * perf: remove argument reassignments in request prototype\r\n  * perf: remove argument reassignments in response prototype\r\n  * perf: remove argument reassignments in routing\r\n  * perf: remove argument reassignments in `View`\r\n  * perf: skip attempting to decode zero length string\r\n  * perf: use saved reference to `http.STATUS_CODES`\r\n\r\n4.12.4 / 2015-05-17\r\n===================\r\n\r\n  * deps: accepts@~1.2.7\r\n    - deps: mime-types@~2.0.11\r\n    - deps: negotiator@0.5.3\r\n  * deps: debug@~2.2.0\r\n    - deps: ms@0.7.1\r\n  * deps: depd@~1.0.1\r\n  * deps: etag@~1.6.0\r\n    - Improve support for JXcore\r\n    - Support \"fake\" stats objects in environments without `fs`\r\n  * deps: finalhandler@0.3.6\r\n    - deps: debug@~2.2.0\r\n    - deps: on-finished@~2.2.1\r\n  * deps: on-finished@~2.2.1\r\n    - Fix `isFinished(req)` when data buffered\r\n  * deps: proxy-addr@~1.0.8\r\n    - deps: ipaddr.js@1.0.1\r\n  * deps: qs@2.4.2\r\n   - Fix allowing parameters like `constructor`\r\n  * deps: send@0.12.3\r\n    - deps: debug@~2.2.0\r\n    - deps: depd@~1.0.1\r\n    - deps: etag@~1.6.0\r\n    - deps: ms@0.7.1\r\n    - deps: on-finished@~2.2.1\r\n  * deps: serve-static@~1.9.3\r\n    - deps: send@0.12.3\r\n  * deps: type-is@~1.6.2\r\n    - deps: mime-types@~2.0.11\r\n\r\n4.12.3 / 2015-03-17\r\n===================\r\n\r\n  * deps: accepts@~1.2.5\r\n    - deps: mime-types@~2.0.10\r\n  * deps: debug@~2.1.3\r\n    - Fix high intensity foreground color for bold\r\n    - deps: ms@0.7.0\r\n  * deps: finalhandler@0.3.4\r\n    - deps: debug@~2.1.3\r\n  * deps: proxy-addr@~1.0.7\r\n    - deps: ipaddr.js@0.1.9\r\n  * deps: qs@2.4.1\r\n    - Fix error when parameter `hasOwnProperty` is present\r\n  * deps: send@0.12.2\r\n    - Throw errors early for invalid `extensions` or `index` options\r\n    - deps: debug@~2.1.3\r\n  * deps: serve-static@~1.9.2\r\n    - deps: send@0.12.2\r\n  * deps: type-is@~1.6.1\r\n    - deps: mime-types@~2.0.10\r\n\r\n4.12.2 / 2015-03-02\r\n===================\r\n\r\n  * Fix regression where `\"Request aborted\"` is logged using `res.sendFile`\r\n\r\n4.12.1 / 2015-03-01\r\n===================\r\n\r\n  * Fix constructing application with non-configurable prototype properties\r\n  * Fix `ECONNRESET` errors from `res.sendFile` usage\r\n  * Fix `req.host` when using \"trust proxy\" hops count\r\n  * Fix `req.protocol`/`req.secure` when using \"trust proxy\" hops count\r\n  * Fix wrong `code` on aborted connections from `res.sendFile`\r\n  * deps: merge-descriptors@1.0.0\r\n\r\n4.12.0 / 2015-02-23\r\n===================\r\n\r\n  * Fix `\"trust proxy\"` setting to inherit when app is mounted\r\n  * Generate `ETag`s for all request responses\r\n    - No longer restricted to only responses for `GET` and `HEAD` requests\r\n  * Use `content-type` to parse `Content-Type` headers\r\n  * deps: accepts@~1.2.4\r\n    - Fix preference sorting to be stable for long acceptable lists\r\n    - deps: mime-types@~2.0.9\r\n    - deps: negotiator@0.5.1\r\n  * deps: cookie-signature@1.0.6\r\n  * deps: send@0.12.1\r\n    - Always read the stat size from the file\r\n    - Fix mutating passed-in `options`\r\n    - deps: mime@1.3.4\r\n  * deps: serve-static@~1.9.1\r\n    - deps: send@0.12.1\r\n  * deps: type-is@~1.6.0\r\n    - fix argument reassignment\r\n    - fix false-positives in `hasBody` `Transfer-Encoding` check\r\n    - support wildcard for both type and subtype (`*/*`)\r\n    - deps: mime-types@~2.0.9\r\n\r\n4.11.2 / 2015-02-01\r\n===================\r\n\r\n  * Fix `res.redirect` double-calling `res.end` for `HEAD` requests\r\n  * deps: accepts@~1.2.3\r\n    - deps: mime-types@~2.0.8\r\n  * deps: proxy-addr@~1.0.6\r\n    - deps: ipaddr.js@0.1.8\r\n  * deps: type-is@~1.5.6\r\n    - deps: mime-types@~2.0.8\r\n\r\n4.11.1 / 2015-01-20\r\n===================\r\n\r\n  * deps: send@0.11.1\r\n    - Fix root path disclosure\r\n  * deps: serve-static@~1.8.1\r\n    - Fix redirect loop in Node.js 0.11.14\r\n    - Fix root path disclosure\r\n    - deps: send@0.11.1\r\n\r\n4.11.0 / 2015-01-13\r\n===================\r\n\r\n  * Add `res.append(field, val)` to append headers\r\n  * Deprecate leading `:` in `name` for `app.param(name, fn)`\r\n  * Deprecate `req.param()` -- use `req.params`, `req.body`, or `req.query` instead\r\n  * Deprecate `app.param(fn)`\r\n  * Fix `OPTIONS` responses to include the `HEAD` method properly\r\n  * Fix `res.sendFile` not always detecting aborted connection\r\n  * Match routes iteratively to prevent stack overflows\r\n  * deps: accepts@~1.2.2\r\n    - deps: mime-types@~2.0.7\r\n    - deps: negotiator@0.5.0\r\n  * deps: send@0.11.0\r\n    - deps: debug@~2.1.1\r\n    - deps: etag@~1.5.1\r\n    - deps: ms@0.7.0\r\n    - deps: on-finished@~2.2.0\r\n  * deps: serve-static@~1.8.0\r\n    - deps: send@0.11.0\r\n\r\n4.10.8 / 2015-01-13\r\n===================\r\n\r\n  * Fix crash from error within `OPTIONS` response handler\r\n  * deps: proxy-addr@~1.0.5\r\n    - deps: ipaddr.js@0.1.6\r\n\r\n4.10.7 / 2015-01-04\r\n===================\r\n\r\n  * Fix `Allow` header for `OPTIONS` to not contain duplicate methods\r\n  * Fix incorrect \"Request aborted\" for `res.sendFile` when `HEAD` or 304\r\n  * deps: debug@~2.1.1\r\n  * deps: finalhandler@0.3.3\r\n    - deps: debug@~2.1.1\r\n    - deps: on-finished@~2.2.0\r\n  * deps: methods@~1.1.1\r\n  * deps: on-finished@~2.2.0\r\n  * deps: serve-static@~1.7.2\r\n    - Fix potential open redirect when mounted at root\r\n  * deps: type-is@~1.5.5\r\n    - deps: mime-types@~2.0.7\r\n\r\n4.10.6 / 2014-12-12\r\n===================\r\n\r\n  * Fix exception in `req.fresh`/`req.stale` without response headers\r\n\r\n4.10.5 / 2014-12-10\r\n===================\r\n\r\n  * Fix `res.send` double-calling `res.end` for `HEAD` requests\r\n  * deps: accepts@~1.1.4\r\n    - deps: mime-types@~2.0.4\r\n  * deps: type-is@~1.5.4\r\n    - deps: mime-types@~2.0.4\r\n\r\n4.10.4 / 2014-11-24\r\n===================\r\n\r\n  * Fix `res.sendfile` logging standard write errors\r\n\r\n4.10.3 / 2014-11-23\r\n===================\r\n\r\n  * Fix `res.sendFile` logging standard write errors\r\n  * deps: etag@~1.5.1\r\n  * deps: proxy-addr@~1.0.4\r\n    - deps: ipaddr.js@0.1.5\r\n  * deps: qs@2.3.3\r\n    - Fix `arrayLimit` behavior\r\n\r\n4.10.2 / 2014-11-09\r\n===================\r\n\r\n  * Correctly invoke async router callback asynchronously\r\n  * deps: accepts@~1.1.3\r\n    - deps: mime-types@~2.0.3\r\n  * deps: type-is@~1.5.3\r\n    - deps: mime-types@~2.0.3\r\n\r\n4.10.1 / 2014-10-28\r\n===================\r\n\r\n  * Fix handling of URLs containing `://` in the path\r\n  * deps: qs@2.3.2\r\n    - Fix parsing of mixed objects and values\r\n\r\n4.10.0 / 2014-10-23\r\n===================\r\n\r\n  * Add support for `app.set('views', array)`\r\n    - Views are looked up in sequence in array of directories\r\n  * Fix `res.send(status)` to mention `res.sendStatus(status)`\r\n  * Fix handling of invalid empty URLs\r\n  * Use `content-disposition` module for `res.attachment`/`res.download`\r\n    - Sends standards-compliant `Content-Disposition` header\r\n    - Full Unicode support\r\n  * Use `path.resolve` in view lookup\r\n  * deps: debug@~2.1.0\r\n    - Implement `DEBUG_FD` env variable support\r\n  * deps: depd@~1.0.0\r\n  * deps: etag@~1.5.0\r\n    - Improve string performance\r\n    - Slightly improve speed for weak ETags over 1KB\r\n  * deps: finalhandler@0.3.2\r\n    - Terminate in progress response only on error\r\n    - Use `on-finished` to determine request status\r\n    - deps: debug@~2.1.0\r\n    - deps: on-finished@~2.1.1\r\n  * deps: on-finished@~2.1.1\r\n    - Fix handling of pipelined requests\r\n  * deps: qs@2.3.0\r\n    - Fix parsing of mixed implicit and explicit arrays\r\n  * deps: send@0.10.1\r\n    - deps: debug@~2.1.0\r\n    - deps: depd@~1.0.0\r\n    - deps: etag@~1.5.0\r\n    - deps: on-finished@~2.1.1\r\n  * deps: serve-static@~1.7.1\r\n    - deps: send@0.10.1\r\n\r\n4.9.8 / 2014-10-17\r\n==================\r\n\r\n  * Fix `res.redirect` body when redirect status specified\r\n  * deps: accepts@~1.1.2\r\n    - Fix error when media type has invalid parameter\r\n    - deps: negotiator@0.4.9\r\n\r\n4.9.7 / 2014-10-10\r\n==================\r\n\r\n  * Fix using same param name in array of paths\r\n\r\n4.9.6 / 2014-10-08\r\n==================\r\n\r\n  * deps: accepts@~1.1.1\r\n    - deps: mime-types@~2.0.2\r\n    - deps: negotiator@0.4.8\r\n  * deps: serve-static@~1.6.4\r\n    - Fix redirect loop when index file serving disabled\r\n  * deps: type-is@~1.5.2\r\n    - deps: mime-types@~2.0.2\r\n\r\n4.9.5 / 2014-09-24\r\n==================\r\n\r\n  * deps: etag@~1.4.0\r\n  * deps: proxy-addr@~1.0.3\r\n    - Use `forwarded` npm module\r\n  * deps: send@0.9.3\r\n    - deps: etag@~1.4.0\r\n  * deps: serve-static@~1.6.3\r\n    - deps: send@0.9.3\r\n\r\n4.9.4 / 2014-09-19\r\n==================\r\n\r\n  * deps: qs@2.2.4\r\n    - Fix issue with object keys starting with numbers truncated\r\n\r\n4.9.3 / 2014-09-18\r\n==================\r\n\r\n  * deps: proxy-addr@~1.0.2\r\n    - Fix a global leak when multiple subnets are trusted\r\n    - deps: ipaddr.js@0.1.3\r\n\r\n4.9.2 / 2014-09-17\r\n==================\r\n\r\n  * Fix regression for empty string `path` in `app.use`\r\n  * Fix `router.use` to accept array of middleware without path\r\n  * Improve error message for bad `app.use` arguments\r\n\r\n4.9.1 / 2014-09-16\r\n==================\r\n\r\n  * Fix `app.use` to accept array of middleware without path\r\n  * deps: depd@0.4.5\r\n  * deps: etag@~1.3.1\r\n  * deps: send@0.9.2\r\n    - deps: depd@0.4.5\r\n    - deps: etag@~1.3.1\r\n    - deps: range-parser@~1.0.2\r\n  * deps: serve-static@~1.6.2\r\n    - deps: send@0.9.2\r\n\r\n4.9.0 / 2014-09-08\r\n==================\r\n\r\n  * Add `res.sendStatus`\r\n  * Invoke callback for sendfile when client aborts\r\n    - Applies to `res.sendFile`, `res.sendfile`, and `res.download`\r\n    - `err` will be populated with request aborted error\r\n  * Support IP address host in `req.subdomains`\r\n  * Use `etag` to generate `ETag` headers\r\n  * deps: accepts@~1.1.0\r\n    - update `mime-types`\r\n  * deps: cookie-signature@1.0.5\r\n  * deps: debug@~2.0.0\r\n  * deps: finalhandler@0.2.0\r\n    - Set `X-Content-Type-Options: nosniff` header\r\n    - deps: debug@~2.0.0\r\n  * deps: fresh@0.2.4\r\n  * deps: media-typer@0.3.0\r\n    - Throw error when parameter format invalid on parse\r\n  * deps: qs@2.2.3\r\n    - Fix issue where first empty value in array is discarded\r\n  * deps: range-parser@~1.0.2\r\n  * deps: send@0.9.1\r\n    - Add `lastModified` option\r\n    - Use `etag` to generate `ETag` header\r\n    - deps: debug@~2.0.0\r\n    - deps: fresh@0.2.4\r\n  * deps: serve-static@~1.6.1\r\n    - Add `lastModified` option\r\n    - deps: send@0.9.1\r\n  * deps: type-is@~1.5.1\r\n    - fix `hasbody` to be true for `content-length: 0`\r\n    - deps: media-typer@0.3.0\r\n    - deps: mime-types@~2.0.1\r\n  * deps: vary@~1.0.0\r\n    - Accept valid `Vary` header string as `field`\r\n\r\n4.8.8 / 2014-09-04\r\n==================\r\n\r\n  * deps: send@0.8.5\r\n    - Fix a path traversal issue when using `root`\r\n    - Fix malicious path detection for empty string path\r\n  * deps: serve-static@~1.5.4\r\n    - deps: send@0.8.5\r\n\r\n4.8.7 / 2014-08-29\r\n==================\r\n\r\n  * deps: qs@2.2.2\r\n    - Remove unnecessary cloning\r\n\r\n4.8.6 / 2014-08-27\r\n==================\r\n\r\n  * deps: qs@2.2.0\r\n    - Array parsing fix\r\n    - Performance improvements\r\n\r\n4.8.5 / 2014-08-18\r\n==================\r\n\r\n  * deps: send@0.8.3\r\n    - deps: destroy@1.0.3\r\n    - deps: on-finished@2.1.0\r\n  * deps: serve-static@~1.5.3\r\n    - deps: send@0.8.3\r\n\r\n4.8.4 / 2014-08-14\r\n==================\r\n\r\n  * deps: qs@1.2.2\r\n  * deps: send@0.8.2\r\n    - Work around `fd` leak in Node.js 0.10 for `fs.ReadStream`\r\n  * deps: serve-static@~1.5.2\r\n    - deps: send@0.8.2\r\n\r\n4.8.3 / 2014-08-10\r\n==================\r\n\r\n  * deps: parseurl@~1.3.0\r\n  * deps: qs@1.2.1\r\n  * deps: serve-static@~1.5.1\r\n    - Fix parsing of weird `req.originalUrl` values\r\n    - deps: parseurl@~1.3.0\r\n    - deps: utils-merge@1.0.0\r\n\r\n4.8.2 / 2014-08-07\r\n==================\r\n\r\n  * deps: qs@1.2.0\r\n    - Fix parsing array of objects\r\n\r\n4.8.1 / 2014-08-06\r\n==================\r\n\r\n  * fix incorrect deprecation warnings on `res.download`\r\n  * deps: qs@1.1.0\r\n    - Accept urlencoded square brackets\r\n    - Accept empty values in implicit array notation\r\n\r\n4.8.0 / 2014-08-05\r\n==================\r\n\r\n  * add `res.sendFile`\r\n    - accepts a file system path instead of a URL\r\n    - requires an absolute path or `root` option specified\r\n  * deprecate `res.sendfile` -- use `res.sendFile` instead\r\n  * support mounted app as any argument to `app.use()`\r\n  * deps: qs@1.0.2\r\n    - Complete rewrite\r\n    - Limits array length to 20\r\n    - Limits object depth to 5\r\n    - Limits parameters to 1,000\r\n  * deps: send@0.8.1\r\n    - Add `extensions` option\r\n  * deps: serve-static@~1.5.0\r\n    - Add `extensions` option\r\n    - deps: send@0.8.1\r\n\r\n4.7.4 / 2014-08-04\r\n==================\r\n\r\n  * fix `res.sendfile` regression for serving directory index files\r\n  * deps: send@0.7.4\r\n    - Fix incorrect 403 on Windows and Node.js 0.11\r\n    - Fix serving index files without root dir\r\n  * deps: serve-static@~1.4.4\r\n    - deps: send@0.7.4\r\n\r\n4.7.3 / 2014-08-04\r\n==================\r\n\r\n  * deps: send@0.7.3\r\n    - Fix incorrect 403 on Windows and Node.js 0.11\r\n  * deps: serve-static@~1.4.3\r\n    - Fix incorrect 403 on Windows and Node.js 0.11\r\n    - deps: send@0.7.3\r\n\r\n4.7.2 / 2014-07-27\r\n==================\r\n\r\n  * deps: depd@0.4.4\r\n    - Work-around v8 generating empty stack traces\r\n  * deps: send@0.7.2\r\n    - deps: depd@0.4.4\r\n  * deps: serve-static@~1.4.2\r\n\r\n4.7.1 / 2014-07-26\r\n==================\r\n\r\n  * deps: depd@0.4.3\r\n    - Fix exception when global `Error.stackTraceLimit` is too low\r\n  * deps: send@0.7.1\r\n    - deps: depd@0.4.3\r\n  * deps: serve-static@~1.4.1\r\n\r\n4.7.0 / 2014-07-25\r\n==================\r\n\r\n  * fix `req.protocol` for proxy-direct connections\r\n  * configurable query parser with `app.set('query parser', parser)`\r\n    - `app.set('query parser', 'extended')` parse with \"qs\" module\r\n    - `app.set('query parser', 'simple')` parse with \"querystring\" core module\r\n    - `app.set('query parser', false)` disable query string parsing\r\n    - `app.set('query parser', true)` enable simple parsing\r\n  * deprecate `res.json(status, obj)` -- use `res.status(status).json(obj)` instead\r\n  * deprecate `res.jsonp(status, obj)` -- use `res.status(status).jsonp(obj)` instead\r\n  * deprecate `res.send(status, body)` -- use `res.status(status).send(body)` instead\r\n  * deps: debug@1.0.4\r\n  * deps: depd@0.4.2\r\n    - Add `TRACE_DEPRECATION` environment variable\r\n    - Remove non-standard grey color from color output\r\n    - Support `--no-deprecation` argument\r\n    - Support `--trace-deprecation` argument\r\n  * deps: finalhandler@0.1.0\r\n    - Respond after request fully read\r\n    - deps: debug@1.0.4\r\n  * deps: parseurl@~1.2.0\r\n    - Cache URLs based on original value\r\n    - Remove no-longer-needed URL mis-parse work-around\r\n    - Simplify the \"fast-path\" `RegExp`\r\n  * deps: send@0.7.0\r\n    - Add `dotfiles` option\r\n    - Cap `maxAge` value to 1 year\r\n    - deps: debug@1.0.4\r\n    - deps: depd@0.4.2\r\n  * deps: serve-static@~1.4.0\r\n    - deps: parseurl@~1.2.0\r\n    - deps: send@0.7.0\r\n  * perf: prevent multiple `Buffer` creation in `res.send`\r\n\r\n4.6.1 / 2014-07-12\r\n==================\r\n\r\n  * fix `subapp.mountpath` regression for `app.use(subapp)`\r\n\r\n4.6.0 / 2014-07-11\r\n==================\r\n\r\n  * accept multiple callbacks to `app.use()`\r\n  * add explicit \"Rosetta Flash JSONP abuse\" protection\r\n    - previous versions are not vulnerable; this is just explicit protection\r\n  * catch errors in multiple `req.param(name, fn)` handlers\r\n  * deprecate `res.redirect(url, status)` -- use `res.redirect(status, url)` instead\r\n  * fix `res.send(status, num)` to send `num` as json (not error)\r\n  * remove unnecessary escaping when `res.jsonp` returns JSON response\r\n  * support non-string `path` in `app.use(path, fn)`\r\n    - supports array of paths\r\n    - supports `RegExp`\r\n  * router: fix optimization on router exit\r\n  * router: refactor location of `try` blocks\r\n  * router: speed up standard `app.use(fn)`\r\n  * deps: debug@1.0.3\r\n    - Add support for multiple wildcards in namespaces\r\n  * deps: finalhandler@0.0.3\r\n    - deps: debug@1.0.3\r\n  * deps: methods@1.1.0\r\n    - add `CONNECT`\r\n  * deps: parseurl@~1.1.3\r\n    - faster parsing of href-only URLs\r\n  * deps: path-to-regexp@0.1.3\r\n  * deps: send@0.6.0\r\n    - deps: debug@1.0.3\r\n  * deps: serve-static@~1.3.2\r\n    - deps: parseurl@~1.1.3\r\n    - deps: send@0.6.0\r\n  * perf: fix arguments reassign deopt in some `res` methods\r\n\r\n4.5.1 / 2014-07-06\r\n==================\r\n\r\n * fix routing regression when altering `req.method`\r\n\r\n4.5.0 / 2014-07-04\r\n==================\r\n\r\n * add deprecation message to non-plural `req.accepts*`\r\n * add deprecation message to `res.send(body, status)`\r\n * add deprecation message to `res.vary()`\r\n * add `headers` option to `res.sendfile`\r\n   - use to set headers on successful file transfer\r\n * add `mergeParams` option to `Router`\r\n   - merges `req.params` from parent routes\r\n * add `req.hostname` -- correct name for what `req.host` returns\r\n * deprecate things with `depd` module\r\n * deprecate `req.host` -- use `req.hostname` instead\r\n * fix behavior when handling request without routes\r\n * fix handling when `route.all` is only route\r\n * invoke `router.param()` only when route matches\r\n * restore `req.params` after invoking router\r\n * use `finalhandler` for final response handling\r\n * use `media-typer` to alter content-type charset\r\n * deps: accepts@~1.0.7\r\n * deps: send@0.5.0\r\n   - Accept string for `maxage` (converted by `ms`)\r\n   - Include link in default redirect response\r\n * deps: serve-static@~1.3.0\r\n   - Accept string for `maxAge` (converted by `ms`)\r\n   - Add `setHeaders` option\r\n   - Include HTML link in redirect response\r\n   - deps: send@0.5.0\r\n * deps: type-is@~1.3.2\r\n\r\n4.4.5 / 2014-06-26\r\n==================\r\n\r\n * deps: cookie-signature@1.0.4\r\n   - fix for timing attacks\r\n\r\n4.4.4 / 2014-06-20\r\n==================\r\n\r\n * fix `res.attachment` Unicode filenames in Safari\r\n * fix \"trim prefix\" debug message in `express:router`\r\n * deps: accepts@~1.0.5\r\n * deps: buffer-crc32@0.2.3\r\n\r\n4.4.3 / 2014-06-11\r\n==================\r\n\r\n * fix persistence of modified `req.params[name]` from `app.param()`\r\n * deps: accepts@1.0.3\r\n   - deps: negotiator@0.4.6\r\n * deps: debug@1.0.2\r\n * deps: send@0.4.3\r\n   - Do not throw uncatchable error on file open race condition\r\n   - Use `escape-html` for HTML escaping\r\n   - deps: debug@1.0.2\r\n   - deps: finished@1.2.2\r\n   - deps: fresh@0.2.2\r\n * deps: serve-static@1.2.3\r\n   - Do not throw uncatchable error on file open race condition\r\n   - deps: send@0.4.3\r\n\r\n4.4.2 / 2014-06-09\r\n==================\r\n\r\n * fix catching errors from top-level handlers\r\n * use `vary` module for `res.vary`\r\n * deps: debug@1.0.1\r\n * deps: proxy-addr@1.0.1\r\n * deps: send@0.4.2\r\n   - fix \"event emitter leak\" warnings\r\n   - deps: debug@1.0.1\r\n   - deps: finished@1.2.1\r\n * deps: serve-static@1.2.2\r\n   - fix \"event emitter leak\" warnings\r\n   - deps: send@0.4.2\r\n * deps: type-is@1.2.1\r\n\r\n4.4.1 / 2014-06-02\r\n==================\r\n\r\n * deps: methods@1.0.1\r\n * deps: send@0.4.1\r\n   - Send `max-age` in `Cache-Control` in correct format\r\n * deps: serve-static@1.2.1\r\n   - use `escape-html` for escaping\r\n   - deps: send@0.4.1\r\n\r\n4.4.0 / 2014-05-30\r\n==================\r\n\r\n * custom etag control with `app.set('etag', val)`\r\n   - `app.set('etag', function(body, encoding){ return '\"etag\"' })` custom etag generation\r\n   - `app.set('etag', 'weak')` weak tag\r\n   - `app.set('etag', 'strong')` strong etag\r\n   - `app.set('etag', false)` turn off\r\n   - `app.set('etag', true)` standard etag\r\n * mark `res.send` ETag as weak and reduce collisions\r\n * update accepts to 1.0.2\r\n   - Fix interpretation when header not in request\r\n * update send to 0.4.0\r\n   - Calculate ETag with md5 for reduced collisions\r\n   - Ignore stream errors after request ends\r\n   - deps: debug@0.8.1\r\n * update serve-static to 1.2.0\r\n   - Calculate ETag with md5 for reduced collisions\r\n   - Ignore stream errors after request ends\r\n   - deps: send@0.4.0\r\n\r\n4.3.2 / 2014-05-28\r\n==================\r\n\r\n * fix handling of errors from `router.param()` callbacks\r\n\r\n4.3.1 / 2014-05-23\r\n==================\r\n\r\n * revert \"fix behavior of multiple `app.VERB` for the same path\"\r\n   - this caused a regression in the order of route execution\r\n\r\n4.3.0 / 2014-05-21\r\n==================\r\n\r\n * add `req.baseUrl` to access the path stripped from `req.url` in routes\r\n * fix behavior of multiple `app.VERB` for the same path\r\n * fix issue routing requests among sub routers\r\n * invoke `router.param()` only when necessary instead of every match\r\n * proper proxy trust with `app.set('trust proxy', trust)`\r\n   - `app.set('trust proxy', 1)` trust first hop\r\n   - `app.set('trust proxy', 'loopback')` trust loopback addresses\r\n   - `app.set('trust proxy', '10.0.0.1')` trust single IP\r\n   - `app.set('trust proxy', '10.0.0.1/16')` trust subnet\r\n   - `app.set('trust proxy', '10.0.0.1, 10.0.0.2')` trust list\r\n   - `app.set('trust proxy', false)` turn off\r\n   - `app.set('trust proxy', true)` trust everything\r\n * set proper `charset` in `Content-Type` for `res.send`\r\n * update type-is to 1.2.0\r\n   - support suffix matching\r\n\r\n4.2.0 / 2014-05-11\r\n==================\r\n\r\n * deprecate `app.del()` -- use `app.delete()` instead\r\n * deprecate `res.json(obj, status)` -- use `res.json(status, obj)` instead\r\n   - the edge-case `res.json(status, num)` requires `res.status(status).json(num)`\r\n * deprecate `res.jsonp(obj, status)` -- use `res.jsonp(status, obj)` instead\r\n   - the edge-case `res.jsonp(status, num)` requires `res.status(status).jsonp(num)`\r\n * fix `req.next` when inside router instance\r\n * include `ETag` header in `HEAD` requests\r\n * keep previous `Content-Type` for `res.jsonp`\r\n * support PURGE method\r\n   - add `app.purge`\r\n   - add `router.purge`\r\n   - include PURGE in `app.all`\r\n * update debug to 0.8.0\r\n   - add `enable()` method\r\n   - change from stderr to stdout\r\n * update methods to 1.0.0\r\n   - add PURGE\r\n\r\n4.1.2 / 2014-05-08\r\n==================\r\n\r\n * fix `req.host` for IPv6 literals\r\n * fix `res.jsonp` error if callback param is object\r\n\r\n4.1.1 / 2014-04-27\r\n==================\r\n\r\n * fix package.json to reflect supported node version\r\n\r\n4.1.0 / 2014-04-24\r\n==================\r\n\r\n * pass options from `res.sendfile` to `send`\r\n * preserve casing of headers in `res.header` and `res.set`\r\n * support unicode file names in `res.attachment` and `res.download`\r\n * update accepts to 1.0.1\r\n   - deps: negotiator@0.4.0\r\n * update cookie to 0.1.2\r\n   - Fix for maxAge == 0\r\n   - made compat with expires field\r\n * update send to 0.3.0\r\n   - Accept API options in options object\r\n   - Coerce option types\r\n   - Control whether to generate etags\r\n   - Default directory access to 403 when index disabled\r\n   - Fix sending files with dots without root set\r\n   - Include file path in etag\r\n   - Make \"Can't set headers after they are sent.\" catchable\r\n   - Send full entity-body for multi range requests\r\n   - Set etags to \"weak\"\r\n   - Support \"If-Range\" header\r\n   - Support multiple index paths\r\n   - deps: mime@1.2.11\r\n * update serve-static to 1.1.0\r\n   - Accept options directly to `send` module\r\n   - Resolve relative paths at middleware setup\r\n   - Use parseurl to parse the URL from request\r\n   - deps: send@0.3.0\r\n * update type-is to 1.1.0\r\n   - add non-array values support\r\n   - add `multipart` as a shorthand\r\n\r\n4.0.0 / 2014-04-09\r\n==================\r\n\r\n * remove:\r\n   - node 0.8 support\r\n   - connect and connect's patches except for charset handling\r\n   - express(1) - moved to [express-generator](https://github.com/expressjs/generator)\r\n   - `express.createServer()` - it has been deprecated for a long time. Use `express()`\r\n   - `app.configure` - use logic in your own app code\r\n   - `app.router` - is removed\r\n   - `req.auth` - use `basic-auth` instead\r\n   - `req.accepted*` - use `req.accepts*()` instead\r\n   - `res.location` - relative URL resolution is removed\r\n   - `res.charset` - include the charset in the content type when using `res.set()`\r\n   - all bundled middleware except `static`\r\n * change:\r\n   - `app.route` -> `app.mountpath` when mounting an express app in another express app\r\n   - `json spaces` no longer enabled by default in development\r\n   - `req.accepts*` -> `req.accepts*s` - i.e. `req.acceptsEncoding` -> `req.acceptsEncodings`\r\n   - `req.params` is now an object instead of an array\r\n   - `res.locals` is no longer a function. It is a plain js object. Treat it as such.\r\n   - `res.headerSent` -> `res.headersSent` to match node.js ServerResponse object\r\n * refactor:\r\n   - `req.accepts*` with [accepts](https://github.com/expressjs/accepts)\r\n   - `req.is` with [type-is](https://github.com/expressjs/type-is)\r\n   - [path-to-regexp](https://github.com/component/path-to-regexp)\r\n * add:\r\n   - `app.router()` - returns the app Router instance\r\n   - `app.route()` - Proxy to the app's `Router#route()` method to create a new route\r\n   - Router & Route - public API\r\n\r\n3.21.2 / 2015-07-31\r\n===================\r\n\r\n  * deps: connect@2.30.2\r\n    - deps: body-parser@~1.13.3\r\n    - deps: compression@~1.5.2\r\n    - deps: errorhandler@~1.4.2\r\n    - deps: method-override@~2.3.5\r\n    - deps: serve-index@~1.7.2\r\n    - deps: type-is@~1.6.6\r\n    - deps: vhost@~3.0.1\r\n  * deps: vary@~1.0.1\r\n    - Fix setting empty header from empty `field`\r\n    - perf: enable strict mode\r\n    - perf: remove argument reassignments\r\n\r\n3.21.1 / 2015-07-05\r\n===================\r\n\r\n  * deps: basic-auth@~1.0.3\r\n  * deps: connect@2.30.1\r\n    - deps: body-parser@~1.13.2\r\n    - deps: compression@~1.5.1\r\n    - deps: errorhandler@~1.4.1\r\n    - deps: morgan@~1.6.1\r\n    - deps: pause@0.1.0\r\n    - deps: qs@4.0.0\r\n    - deps: serve-index@~1.7.1\r\n    - deps: type-is@~1.6.4\r\n\r\n3.21.0 / 2015-06-18\r\n===================\r\n\r\n  * deps: basic-auth@1.0.2\r\n    - perf: enable strict mode\r\n    - perf: hoist regular expression\r\n    - perf: parse with regular expressions\r\n    - perf: remove argument reassignment\r\n  * deps: connect@2.30.0\r\n    - deps: body-parser@~1.13.1\r\n    - deps: bytes@2.1.0\r\n    - deps: compression@~1.5.0\r\n    - deps: cookie@0.1.3\r\n    - deps: cookie-parser@~1.3.5\r\n    - deps: csurf@~1.8.3\r\n    - deps: errorhandler@~1.4.0\r\n    - deps: express-session@~1.11.3\r\n    - deps: finalhandler@0.4.0\r\n    - deps: fresh@0.3.0\r\n    - deps: morgan@~1.6.0\r\n    - deps: serve-favicon@~2.3.0\r\n    - deps: serve-index@~1.7.0\r\n    - deps: serve-static@~1.10.0\r\n    - deps: type-is@~1.6.3\r\n  * deps: cookie@0.1.3\r\n    - perf: deduce the scope of try-catch deopt\r\n    - perf: remove argument reassignments\r\n  * deps: escape-html@1.0.2\r\n  * deps: etag@~1.7.0\r\n    - Always include entity length in ETags for hash length extensions\r\n    - Generate non-Stats ETags using MD5 only (no longer CRC32)\r\n    - Improve stat performance by removing hashing\r\n    - Improve support for JXcore\r\n    - Remove base64 padding in ETags to shorten\r\n    - Support \"fake\" stats objects in environments without fs\r\n    - Use MD5 instead of MD4 in weak ETags over 1KB\r\n  * deps: fresh@0.3.0\r\n    - Add weak `ETag` matching support\r\n  * deps: mkdirp@0.5.1\r\n    - Work in global strict mode\r\n  * deps: send@0.13.0\r\n    - Allow Node.js HTTP server to set `Date` response header\r\n    - Fix incorrectly removing `Content-Location` on 304 response\r\n    - Improve the default redirect response headers\r\n    - Send appropriate headers on default error response\r\n    - Use `http-errors` for standard emitted errors\r\n    - Use `statuses` instead of `http` module for status messages\r\n    - deps: escape-html@1.0.2\r\n    - deps: etag@~1.7.0\r\n    - deps: fresh@0.3.0\r\n    - deps: on-finished@~2.3.0\r\n    - perf: enable strict mode\r\n    - perf: remove unnecessary array allocations\r\n\r\n3.20.3 / 2015-05-17\r\n===================\r\n\r\n  * deps: connect@2.29.2\r\n    - deps: body-parser@~1.12.4\r\n    - deps: compression@~1.4.4\r\n    - deps: connect-timeout@~1.6.2\r\n    - deps: debug@~2.2.0\r\n    - deps: depd@~1.0.1\r\n    - deps: errorhandler@~1.3.6\r\n    - deps: finalhandler@0.3.6\r\n    - deps: method-override@~2.3.3\r\n    - deps: morgan@~1.5.3\r\n    - deps: qs@2.4.2\r\n    - deps: response-time@~2.3.1\r\n    - deps: serve-favicon@~2.2.1\r\n    - deps: serve-index@~1.6.4\r\n    - deps: serve-static@~1.9.3\r\n    - deps: type-is@~1.6.2\r\n  * deps: debug@~2.2.0\r\n    - deps: ms@0.7.1\r\n  * deps: depd@~1.0.1\r\n  * deps: proxy-addr@~1.0.8\r\n    - deps: ipaddr.js@1.0.1\r\n  * deps: send@0.12.3\r\n    - deps: debug@~2.2.0\r\n    - deps: depd@~1.0.1\r\n    - deps: etag@~1.6.0\r\n    - deps: ms@0.7.1\r\n    - deps: on-finished@~2.2.1\r\n\r\n3.20.2 / 2015-03-16\r\n===================\r\n\r\n  * deps: connect@2.29.1\r\n    - deps: body-parser@~1.12.2\r\n    - deps: compression@~1.4.3\r\n    - deps: connect-timeout@~1.6.1\r\n    - deps: debug@~2.1.3\r\n    - deps: errorhandler@~1.3.5\r\n    - deps: express-session@~1.10.4\r\n    - deps: finalhandler@0.3.4\r\n    - deps: method-override@~2.3.2\r\n    - deps: morgan@~1.5.2\r\n    - deps: qs@2.4.1\r\n    - deps: serve-index@~1.6.3\r\n    - deps: serve-static@~1.9.2\r\n    - deps: type-is@~1.6.1\r\n  * deps: debug@~2.1.3\r\n    - Fix high intensity foreground color for bold\r\n    - deps: ms@0.7.0\r\n  * deps: merge-descriptors@1.0.0\r\n  * deps: proxy-addr@~1.0.7\r\n    - deps: ipaddr.js@0.1.9\r\n  * deps: send@0.12.2\r\n    - Throw errors early for invalid `extensions` or `index` options\r\n    - deps: debug@~2.1.3\r\n\r\n3.20.1 / 2015-02-28\r\n===================\r\n\r\n  * Fix `req.host` when using \"trust proxy\" hops count\r\n  * Fix `req.protocol`/`req.secure` when using \"trust proxy\" hops count\r\n\r\n3.20.0 / 2015-02-18\r\n===================\r\n\r\n  * Fix `\"trust proxy\"` setting to inherit when app is mounted\r\n  * Generate `ETag`s for all request responses\r\n    - No longer restricted to only responses for `GET` and `HEAD` requests\r\n  * Use `content-type` to parse `Content-Type` headers\r\n  * deps: connect@2.29.0\r\n    - Use `content-type` to parse `Content-Type` headers\r\n    - deps: body-parser@~1.12.0\r\n    - deps: compression@~1.4.1\r\n    - deps: connect-timeout@~1.6.0\r\n    - deps: cookie-parser@~1.3.4\r\n    - deps: cookie-signature@1.0.6\r\n    - deps: csurf@~1.7.0\r\n    - deps: errorhandler@~1.3.4\r\n    - deps: express-session@~1.10.3\r\n    - deps: http-errors@~1.3.1\r\n    - deps: response-time@~2.3.0\r\n    - deps: serve-index@~1.6.2\r\n    - deps: serve-static@~1.9.1\r\n    - deps: type-is@~1.6.0\r\n  * deps: cookie-signature@1.0.6\r\n  * deps: send@0.12.1\r\n    - Always read the stat size from the file\r\n    - Fix mutating passed-in `options`\r\n    - deps: mime@1.3.4\r\n\r\n3.19.2 / 2015-02-01\r\n===================\r\n\r\n  * deps: connect@2.28.3\r\n    - deps: compression@~1.3.1\r\n    - deps: csurf@~1.6.6\r\n    - deps: errorhandler@~1.3.3\r\n    - deps: express-session@~1.10.2\r\n    - deps: serve-index@~1.6.1\r\n    - deps: type-is@~1.5.6\r\n  * deps: proxy-addr@~1.0.6\r\n    - deps: ipaddr.js@0.1.8\r\n\r\n3.19.1 / 2015-01-20\r\n===================\r\n\r\n  * deps: connect@2.28.2\r\n    - deps: body-parser@~1.10.2\r\n    - deps: serve-static@~1.8.1\r\n  * deps: send@0.11.1\r\n    - Fix root path disclosure\r\n\r\n3.19.0 / 2015-01-09\r\n===================\r\n\r\n  * Fix `OPTIONS` responses to include the `HEAD` method property\r\n  * Use `readline` for prompt in `express(1)`\r\n  * deps: commander@2.6.0\r\n  * deps: connect@2.28.1\r\n    - deps: body-parser@~1.10.1\r\n    - deps: compression@~1.3.0\r\n    - deps: connect-timeout@~1.5.0\r\n    - deps: csurf@~1.6.4\r\n    - deps: debug@~2.1.1\r\n    - deps: errorhandler@~1.3.2\r\n    - deps: express-session@~1.10.1\r\n    - deps: finalhandler@0.3.3\r\n    - deps: method-override@~2.3.1\r\n    - deps: morgan@~1.5.1\r\n    - deps: serve-favicon@~2.2.0\r\n    - deps: serve-index@~1.6.0\r\n    - deps: serve-static@~1.8.0\r\n    - deps: type-is@~1.5.5\r\n  * deps: debug@~2.1.1\r\n  * deps: methods@~1.1.1\r\n  * deps: proxy-addr@~1.0.5\r\n    - deps: ipaddr.js@0.1.6\r\n  * deps: send@0.11.0\r\n    - deps: debug@~2.1.1\r\n    - deps: etag@~1.5.1\r\n    - deps: ms@0.7.0\r\n    - deps: on-finished@~2.2.0\r\n\r\n3.18.6 / 2014-12-12\r\n===================\r\n\r\n  * Fix exception in `req.fresh`/`req.stale` without response headers\r\n\r\n3.18.5 / 2014-12-11\r\n===================\r\n\r\n  * deps: connect@2.27.6\r\n    - deps: compression@~1.2.2\r\n    - deps: express-session@~1.9.3\r\n    - deps: http-errors@~1.2.8\r\n    - deps: serve-index@~1.5.3\r\n    - deps: type-is@~1.5.4\r\n\r\n3.18.4 / 2014-11-23\r\n===================\r\n\r\n  * deps: connect@2.27.4\r\n    - deps: body-parser@~1.9.3\r\n    - deps: compression@~1.2.1\r\n    - deps: errorhandler@~1.2.3\r\n    - deps: express-session@~1.9.2\r\n    - deps: qs@2.3.3\r\n    - deps: serve-favicon@~2.1.7\r\n    - deps: serve-static@~1.5.1\r\n    - deps: type-is@~1.5.3\r\n  * deps: etag@~1.5.1\r\n  * deps: proxy-addr@~1.0.4\r\n    - deps: ipaddr.js@0.1.5\r\n\r\n3.18.3 / 2014-11-09\r\n===================\r\n\r\n  * deps: connect@2.27.3\r\n    - Correctly invoke async callback asynchronously\r\n    - deps: csurf@~1.6.3\r\n\r\n3.18.2 / 2014-10-28\r\n===================\r\n\r\n  * deps: connect@2.27.2\r\n    - Fix handling of URLs containing `://` in the path\r\n    - deps: body-parser@~1.9.2\r\n    - deps: qs@2.3.2\r\n\r\n3.18.1 / 2014-10-22\r\n===================\r\n\r\n  * Fix internal `utils.merge` deprecation warnings\r\n  * deps: connect@2.27.1\r\n    - deps: body-parser@~1.9.1\r\n    - deps: express-session@~1.9.1\r\n    - deps: finalhandler@0.3.2\r\n    - deps: morgan@~1.4.1\r\n    - deps: qs@2.3.0\r\n    - deps: serve-static@~1.7.1\r\n  * deps: send@0.10.1\r\n    - deps: on-finished@~2.1.1\r\n\r\n3.18.0 / 2014-10-17\r\n===================\r\n\r\n  * Use `content-disposition` module for `res.attachment`/`res.download`\r\n    - Sends standards-compliant `Content-Disposition` header\r\n    - Full Unicode support\r\n  * Use `etag` module to generate `ETag` headers\r\n  * deps: connect@2.27.0\r\n    - Use `http-errors` module for creating errors\r\n    - Use `utils-merge` module for merging objects\r\n    - deps: body-parser@~1.9.0\r\n    - deps: compression@~1.2.0\r\n    - deps: connect-timeout@~1.4.0\r\n    - deps: debug@~2.1.0\r\n    - deps: depd@~1.0.0\r\n    - deps: express-session@~1.9.0\r\n    - deps: finalhandler@0.3.1\r\n    - deps: method-override@~2.3.0\r\n    - deps: morgan@~1.4.0\r\n    - deps: response-time@~2.2.0\r\n    - deps: serve-favicon@~2.1.6\r\n    - deps: serve-index@~1.5.0\r\n    - deps: serve-static@~1.7.0\r\n  * deps: debug@~2.1.0\r\n    - Implement `DEBUG_FD` env variable support\r\n  * deps: depd@~1.0.0\r\n  * deps: send@0.10.0\r\n    - deps: debug@~2.1.0\r\n    - deps: depd@~1.0.0\r\n    - deps: etag@~1.5.0\r\n\r\n3.17.8 / 2014-10-15\r\n===================\r\n\r\n  * deps: connect@2.26.6\r\n    - deps: compression@~1.1.2\r\n    - deps: csurf@~1.6.2\r\n    - deps: errorhandler@~1.2.2\r\n\r\n3.17.7 / 2014-10-08\r\n===================\r\n\r\n  * deps: connect@2.26.5\r\n    - Fix accepting non-object arguments to `logger`\r\n    - deps: serve-static@~1.6.4\r\n\r\n3.17.6 / 2014-10-02\r\n===================\r\n\r\n  * deps: connect@2.26.4\r\n    - deps: morgan@~1.3.2\r\n    - deps: type-is@~1.5.2\r\n\r\n3.17.5 / 2014-09-24\r\n===================\r\n\r\n  * deps: connect@2.26.3\r\n    - deps: body-parser@~1.8.4\r\n    - deps: serve-favicon@~2.1.5\r\n    - deps: serve-static@~1.6.3\r\n  * deps: proxy-addr@~1.0.3\r\n    - Use `forwarded` npm module\r\n  * deps: send@0.9.3\r\n    - deps: etag@~1.4.0\r\n\r\n3.17.4 / 2014-09-19\r\n===================\r\n\r\n  * deps: connect@2.26.2\r\n    - deps: body-parser@~1.8.3\r\n    - deps: qs@2.2.4\r\n\r\n3.17.3 / 2014-09-18\r\n===================\r\n\r\n  * deps: proxy-addr@~1.0.2\r\n    - Fix a global leak when multiple subnets are trusted\r\n    - deps: ipaddr.js@0.1.3\r\n\r\n3.17.2 / 2014-09-15\r\n===================\r\n\r\n  * Use `crc` instead of `buffer-crc32` for speed\r\n  * deps: connect@2.26.1\r\n    - deps: body-parser@~1.8.2\r\n    - deps: depd@0.4.5\r\n    - deps: express-session@~1.8.2\r\n    - deps: morgan@~1.3.1\r\n    - deps: serve-favicon@~2.1.3\r\n    - deps: serve-static@~1.6.2\r\n  * deps: depd@0.4.5\r\n  * deps: send@0.9.2\r\n    - deps: depd@0.4.5\r\n    - deps: etag@~1.3.1\r\n    - deps: range-parser@~1.0.2\r\n\r\n3.17.1 / 2014-09-08\r\n===================\r\n\r\n  * Fix error in `req.subdomains` on empty host\r\n\r\n3.17.0 / 2014-09-08\r\n===================\r\n\r\n  * Support `X-Forwarded-Host` in `req.subdomains`\r\n  * Support IP address host in `req.subdomains`\r\n  * deps: connect@2.26.0\r\n    - deps: body-parser@~1.8.1\r\n    - deps: compression@~1.1.0\r\n    - deps: connect-timeout@~1.3.0\r\n    - deps: cookie-parser@~1.3.3\r\n    - deps: cookie-signature@1.0.5\r\n    - deps: csurf@~1.6.1\r\n    - deps: debug@~2.0.0\r\n    - deps: errorhandler@~1.2.0\r\n    - deps: express-session@~1.8.1\r\n    - deps: finalhandler@0.2.0\r\n    - deps: fresh@0.2.4\r\n    - deps: media-typer@0.3.0\r\n    - deps: method-override@~2.2.0\r\n    - deps: morgan@~1.3.0\r\n    - deps: qs@2.2.3\r\n    - deps: serve-favicon@~2.1.3\r\n    - deps: serve-index@~1.2.1\r\n    - deps: serve-static@~1.6.1\r\n    - deps: type-is@~1.5.1\r\n    - deps: vhost@~3.0.0\r\n  * deps: cookie-signature@1.0.5\r\n  * deps: debug@~2.0.0\r\n  * deps: fresh@0.2.4\r\n  * deps: media-typer@0.3.0\r\n    - Throw error when parameter format invalid on parse\r\n  * deps: range-parser@~1.0.2\r\n  * deps: send@0.9.1\r\n    - Add `lastModified` option\r\n    - Use `etag` to generate `ETag` header\r\n    - deps: debug@~2.0.0\r\n    - deps: fresh@0.2.4\r\n  * deps: vary@~1.0.0\r\n    - Accept valid `Vary` header string as `field`\r\n\r\n3.16.10 / 2014-09-04\r\n====================\r\n\r\n  * deps: connect@2.25.10\r\n    - deps: serve-static@~1.5.4\r\n  * deps: send@0.8.5\r\n    - Fix a path traversal issue when using `root`\r\n    - Fix malicious path detection for empty string path\r\n\r\n3.16.9 / 2014-08-29\r\n===================\r\n\r\n  * deps: connect@2.25.9\r\n    - deps: body-parser@~1.6.7\r\n    - deps: qs@2.2.2\r\n\r\n3.16.8 / 2014-08-27\r\n===================\r\n\r\n  * deps: connect@2.25.8\r\n    - deps: body-parser@~1.6.6\r\n    - deps: csurf@~1.4.1\r\n    - deps: qs@2.2.0\r\n\r\n3.16.7 / 2014-08-18\r\n===================\r\n\r\n  * deps: connect@2.25.7\r\n    - deps: body-parser@~1.6.5\r\n    - deps: express-session@~1.7.6\r\n    - deps: morgan@~1.2.3\r\n    - deps: serve-static@~1.5.3\r\n  * deps: send@0.8.3\r\n    - deps: destroy@1.0.3\r\n    - deps: on-finished@2.1.0\r\n\r\n3.16.6 / 2014-08-14\r\n===================\r\n\r\n  * deps: connect@2.25.6\r\n    - deps: body-parser@~1.6.4\r\n    - deps: qs@1.2.2\r\n    - deps: serve-static@~1.5.2\r\n  * deps: send@0.8.2\r\n    - Work around `fd` leak in Node.js 0.10 for `fs.ReadStream`\r\n\r\n3.16.5 / 2014-08-11\r\n===================\r\n\r\n  * deps: connect@2.25.5\r\n    - Fix backwards compatibility in `logger`\r\n\r\n3.16.4 / 2014-08-10\r\n===================\r\n\r\n  * Fix original URL parsing in `res.location`\r\n  * deps: connect@2.25.4\r\n    - Fix `query` middleware breaking with argument\r\n    - deps: body-parser@~1.6.3\r\n    - deps: compression@~1.0.11\r\n    - deps: connect-timeout@~1.2.2\r\n    - deps: express-session@~1.7.5\r\n    - deps: method-override@~2.1.3\r\n    - deps: on-headers@~1.0.0\r\n    - deps: parseurl@~1.3.0\r\n    - deps: qs@1.2.1\r\n    - deps: response-time@~2.0.1\r\n    - deps: serve-index@~1.1.6\r\n    - deps: serve-static@~1.5.1\r\n  * deps: parseurl@~1.3.0\r\n\r\n3.16.3 / 2014-08-07\r\n===================\r\n\r\n  * deps: connect@2.25.3\r\n    - deps: multiparty@3.3.2\r\n\r\n3.16.2 / 2014-08-07\r\n===================\r\n\r\n  * deps: connect@2.25.2\r\n    - deps: body-parser@~1.6.2\r\n    - deps: qs@1.2.0\r\n\r\n3.16.1 / 2014-08-06\r\n===================\r\n\r\n  * deps: connect@2.25.1\r\n    - deps: body-parser@~1.6.1\r\n    - deps: qs@1.1.0\r\n\r\n3.16.0 / 2014-08-05\r\n===================\r\n\r\n  * deps: connect@2.25.0\r\n    - deps: body-parser@~1.6.0\r\n    - deps: compression@~1.0.10\r\n    - deps: csurf@~1.4.0\r\n    - deps: express-session@~1.7.4\r\n    - deps: qs@1.0.2\r\n    - deps: serve-static@~1.5.0\r\n  * deps: send@0.8.1\r\n    - Add `extensions` option\r\n\r\n3.15.3 / 2014-08-04\r\n===================\r\n\r\n  * fix `res.sendfile` regression for serving directory index files\r\n  * deps: connect@2.24.3\r\n    - deps: serve-index@~1.1.5\r\n    - deps: serve-static@~1.4.4\r\n  * deps: send@0.7.4\r\n    - Fix incorrect 403 on Windows and Node.js 0.11\r\n    - Fix serving index files without root dir\r\n\r\n3.15.2 / 2014-07-27\r\n===================\r\n\r\n  * deps: connect@2.24.2\r\n    - deps: body-parser@~1.5.2\r\n    - deps: depd@0.4.4\r\n    - deps: express-session@~1.7.2\r\n    - deps: morgan@~1.2.2\r\n    - deps: serve-static@~1.4.2\r\n  * deps: depd@0.4.4\r\n    - Work-around v8 generating empty stack traces\r\n  * deps: send@0.7.2\r\n    - deps: depd@0.4.4\r\n\r\n3.15.1 / 2014-07-26\r\n===================\r\n\r\n  * deps: connect@2.24.1\r\n    - deps: body-parser@~1.5.1\r\n    - deps: depd@0.4.3\r\n    - deps: express-session@~1.7.1\r\n    - deps: morgan@~1.2.1\r\n    - deps: serve-index@~1.1.4\r\n    - deps: serve-static@~1.4.1\r\n  * deps: depd@0.4.3\r\n    - Fix exception when global `Error.stackTraceLimit` is too low\r\n  * deps: send@0.7.1\r\n    - deps: depd@0.4.3\r\n\r\n3.15.0 / 2014-07-22\r\n===================\r\n\r\n  * Fix `req.protocol` for proxy-direct connections\r\n  * Pass options from `res.sendfile` to `send`\r\n  * deps: connect@2.24.0\r\n    - deps: body-parser@~1.5.0\r\n    - deps: compression@~1.0.9\r\n    - deps: connect-timeout@~1.2.1\r\n    - deps: debug@1.0.4\r\n    - deps: depd@0.4.2\r\n    - deps: express-session@~1.7.0\r\n    - deps: finalhandler@0.1.0\r\n    - deps: method-override@~2.1.2\r\n    - deps: morgan@~1.2.0\r\n    - deps: multiparty@3.3.1\r\n    - deps: parseurl@~1.2.0\r\n    - deps: serve-static@~1.4.0\r\n  * deps: debug@1.0.4\r\n  * deps: depd@0.4.2\r\n    - Add `TRACE_DEPRECATION` environment variable\r\n    - Remove non-standard grey color from color output\r\n    - Support `--no-deprecation` argument\r\n    - Support `--trace-deprecation` argument\r\n  * deps: parseurl@~1.2.0\r\n    - Cache URLs based on original value\r\n    - Remove no-longer-needed URL mis-parse work-around\r\n    - Simplify the \"fast-path\" `RegExp`\r\n  * deps: send@0.7.0\r\n    - Add `dotfiles` option\r\n    - Cap `maxAge` value to 1 year\r\n    - deps: debug@1.0.4\r\n    - deps: depd@0.4.2\r\n\r\n3.14.0 / 2014-07-11\r\n===================\r\n\r\n * add explicit \"Rosetta Flash JSONP abuse\" protection\r\n   - previous versions are not vulnerable; this is just explicit protection\r\n * deprecate `res.redirect(url, status)` -- use `res.redirect(status, url)` instead\r\n * fix `res.send(status, num)` to send `num` as json (not error)\r\n * remove unnecessary escaping when `res.jsonp` returns JSON response\r\n * deps: basic-auth@1.0.0\r\n   - support empty password\r\n   - support empty username\r\n * deps: connect@2.23.0\r\n   - deps: debug@1.0.3\r\n   - deps: express-session@~1.6.4\r\n   - deps: method-override@~2.1.0\r\n   - deps: parseurl@~1.1.3\r\n   - deps: serve-static@~1.3.1\r\n  * deps: debug@1.0.3\r\n    - Add support for multiple wildcards in namespaces\r\n  * deps: methods@1.1.0\r\n    - add `CONNECT`\r\n  * deps: parseurl@~1.1.3\r\n    - faster parsing of href-only URLs\r\n\r\n3.13.0 / 2014-07-03\r\n===================\r\n\r\n * add deprecation message to `app.configure`\r\n * add deprecation message to `req.auth`\r\n * use `basic-auth` to parse `Authorization` header\r\n * deps: connect@2.22.0\r\n   - deps: csurf@~1.3.0\r\n   - deps: express-session@~1.6.1\r\n   - deps: multiparty@3.3.0\r\n   - deps: serve-static@~1.3.0\r\n * deps: send@0.5.0\r\n   - Accept string for `maxage` (converted by `ms`)\r\n   - Include link in default redirect response\r\n\r\n3.12.1 / 2014-06-26\r\n===================\r\n\r\n * deps: connect@2.21.1\r\n   - deps: cookie-parser@1.3.2\r\n   - deps: cookie-signature@1.0.4\r\n   - deps: express-session@~1.5.2\r\n   - deps: type-is@~1.3.2\r\n * deps: cookie-signature@1.0.4\r\n   - fix for timing attacks\r\n\r\n3.12.0 / 2014-06-21\r\n===================\r\n\r\n * use `media-typer` to alter content-type charset\r\n * deps: connect@2.21.0\r\n   - deprecate `connect(middleware)` -- use `app.use(middleware)` instead\r\n   - deprecate `connect.createServer()` -- use `connect()` instead\r\n   - fix `res.setHeader()` patch to work with with get -> append -> set pattern\r\n   - deps: compression@~1.0.8\r\n   - deps: errorhandler@~1.1.1\r\n   - deps: express-session@~1.5.0\r\n   - deps: serve-index@~1.1.3\r\n\r\n3.11.0 / 2014-06-19\r\n===================\r\n\r\n * deprecate things with `depd` module\r\n * deps: buffer-crc32@0.2.3\r\n * deps: connect@2.20.2\r\n   - deprecate `verify` option to `json` -- use `body-parser` npm module instead\r\n   - deprecate `verify` option to `urlencoded` -- use `body-parser` npm module instead\r\n   - deprecate things with `depd` module\r\n   - use `finalhandler` for final response handling\r\n   - use `media-typer` to parse `content-type` for charset\r\n   - deps: body-parser@1.4.3\r\n   - deps: connect-timeout@1.1.1\r\n   - deps: cookie-parser@1.3.1\r\n   - deps: csurf@1.2.2\r\n   - deps: errorhandler@1.1.0\r\n   - deps: express-session@1.4.0\r\n   - deps: multiparty@3.2.9\r\n   - deps: serve-index@1.1.2\r\n   - deps: type-is@1.3.1\r\n   - deps: vhost@2.0.0\r\n\r\n3.10.5 / 2014-06-11\r\n===================\r\n\r\n * deps: connect@2.19.6\r\n   - deps: body-parser@1.3.1\r\n   - deps: compression@1.0.7\r\n   - deps: debug@1.0.2\r\n   - deps: serve-index@1.1.1\r\n   - deps: serve-static@1.2.3\r\n * deps: debug@1.0.2\r\n * deps: send@0.4.3\r\n   - Do not throw uncatchable error on file open race condition\r\n   - Use `escape-html` for HTML escaping\r\n   - deps: debug@1.0.2\r\n   - deps: finished@1.2.2\r\n   - deps: fresh@0.2.2\r\n\r\n3.10.4 / 2014-06-09\r\n===================\r\n\r\n * deps: connect@2.19.5\r\n   - fix \"event emitter leak\" warnings\r\n   - deps: csurf@1.2.1\r\n   - deps: debug@1.0.1\r\n   - deps: serve-static@1.2.2\r\n   - deps: type-is@1.2.1\r\n * deps: debug@1.0.1\r\n * deps: send@0.4.2\r\n   - fix \"event emitter leak\" warnings\r\n   - deps: finished@1.2.1\r\n   - deps: debug@1.0.1\r\n\r\n3.10.3 / 2014-06-05\r\n===================\r\n\r\n * use `vary` module for `res.vary`\r\n * deps: connect@2.19.4\r\n   - deps: errorhandler@1.0.2\r\n   - deps: method-override@2.0.2\r\n   - deps: serve-favicon@2.0.1\r\n * deps: debug@1.0.0\r\n\r\n3.10.2 / 2014-06-03\r\n===================\r\n\r\n * deps: connect@2.19.3\r\n   - deps: compression@1.0.6\r\n\r\n3.10.1 / 2014-06-03\r\n===================\r\n\r\n * deps: connect@2.19.2\r\n   - deps: compression@1.0.4\r\n * deps: proxy-addr@1.0.1\r\n\r\n3.10.0 / 2014-06-02\r\n===================\r\n\r\n * deps: connect@2.19.1\r\n   - deprecate `methodOverride()` -- use `method-override` npm module instead\r\n   - deps: body-parser@1.3.0\r\n   - deps: method-override@2.0.1\r\n   - deps: multiparty@3.2.8\r\n   - deps: response-time@2.0.0\r\n   - deps: serve-static@1.2.1\r\n * deps: methods@1.0.1\r\n * deps: send@0.4.1\r\n   - Send `max-age` in `Cache-Control` in correct format\r\n\r\n3.9.0 / 2014-05-30\r\n==================\r\n\r\n * custom etag control with `app.set('etag', val)`\r\n   - `app.set('etag', function(body, encoding){ return '\"etag\"' })` custom etag generation\r\n   - `app.set('etag', 'weak')` weak tag\r\n   - `app.set('etag', 'strong')` strong etag\r\n   - `app.set('etag', false)` turn off\r\n   - `app.set('etag', true)` standard etag\r\n * Include ETag in HEAD requests\r\n * mark `res.send` ETag as weak and reduce collisions\r\n * update connect to 2.18.0\r\n   - deps: compression@1.0.3\r\n   - deps: serve-index@1.1.0\r\n   - deps: serve-static@1.2.0\r\n * update send to 0.4.0\r\n   - Calculate ETag with md5 for reduced collisions\r\n   - Ignore stream errors after request ends\r\n   - deps: debug@0.8.1\r\n\r\n3.8.1 / 2014-05-27\r\n==================\r\n\r\n * update connect to 2.17.3\r\n   - deps: body-parser@1.2.2\r\n   - deps: express-session@1.2.1\r\n   - deps: method-override@1.0.2\r\n\r\n3.8.0 / 2014-05-21\r\n==================\r\n\r\n * keep previous `Content-Type` for `res.jsonp`\r\n * set proper `charset` in `Content-Type` for `res.send`\r\n * update connect to 2.17.1\r\n   - fix `res.charset` appending charset when `content-type` has one\r\n   - deps: express-session@1.2.0\r\n   - deps: morgan@1.1.1\r\n   - deps: serve-index@1.0.3\r\n\r\n3.7.0 / 2014-05-18\r\n==================\r\n\r\n * proper proxy trust with `app.set('trust proxy', trust)`\r\n   - `app.set('trust proxy', 1)` trust first hop\r\n   - `app.set('trust proxy', 'loopback')` trust loopback addresses\r\n   - `app.set('trust proxy', '10.0.0.1')` trust single IP\r\n   - `app.set('trust proxy', '10.0.0.1/16')` trust subnet\r\n   - `app.set('trust proxy', '10.0.0.1, 10.0.0.2')` trust list\r\n   - `app.set('trust proxy', false)` turn off\r\n   - `app.set('trust proxy', true)` trust everything\r\n * update connect to 2.16.2\r\n   - deprecate `res.headerSent` -- use `res.headersSent`\r\n   - deprecate `res.on(\"header\")` -- use on-headers module instead\r\n   - fix edge-case in `res.appendHeader` that would append in wrong order\r\n   - json: use body-parser\r\n   - urlencoded: use body-parser\r\n   - dep: bytes@1.0.0\r\n   - dep: cookie-parser@1.1.0\r\n   - dep: csurf@1.2.0\r\n   - dep: express-session@1.1.0\r\n   - dep: method-override@1.0.1\r\n\r\n3.6.0 / 2014-05-09\r\n==================\r\n\r\n * deprecate `app.del()` -- use `app.delete()` instead\r\n * deprecate `res.json(obj, status)` -- use `res.json(status, obj)` instead\r\n   - the edge-case `res.json(status, num)` requires `res.status(status).json(num)`\r\n * deprecate `res.jsonp(obj, status)` -- use `res.jsonp(status, obj)` instead\r\n   - the edge-case `res.jsonp(status, num)` requires `res.status(status).jsonp(num)`\r\n * support PURGE method\r\n   - add `app.purge`\r\n   - add `router.purge`\r\n   - include PURGE in `app.all`\r\n * update connect to 2.15.0\r\n   * Add `res.appendHeader`\r\n   * Call error stack even when response has been sent\r\n   * Patch `res.headerSent` to return Boolean\r\n   * Patch `res.headersSent` for node.js 0.8\r\n   * Prevent default 404 handler after response sent\r\n   * dep: compression@1.0.2\r\n   * dep: connect-timeout@1.1.0\r\n   * dep: debug@^0.8.0\r\n   * dep: errorhandler@1.0.1\r\n   * dep: express-session@1.0.4\r\n   * dep: morgan@1.0.1\r\n   * dep: serve-favicon@2.0.0\r\n   * dep: serve-index@1.0.2\r\n * update debug to 0.8.0\r\n   * add `enable()` method\r\n   * change from stderr to stdout\r\n * update methods to 1.0.0\r\n   - add PURGE\r\n * update mkdirp to 0.5.0\r\n\r\n3.5.3 / 2014-05-08\r\n==================\r\n\r\n * fix `req.host` for IPv6 literals\r\n * fix `res.jsonp` error if callback param is object\r\n\r\n3.5.2 / 2014-04-24\r\n==================\r\n\r\n * update connect to 2.14.5\r\n * update cookie to 0.1.2\r\n * update mkdirp to 0.4.0\r\n * update send to 0.3.0\r\n\r\n3.5.1 / 2014-03-25\r\n==================\r\n\r\n * pin less-middleware in generated app\r\n\r\n3.5.0 / 2014-03-06\r\n==================\r\n\r\n * bump deps\r\n\r\n3.4.8 / 2014-01-13\r\n==================\r\n\r\n * prevent incorrect automatic OPTIONS responses #1868 @dpatti\r\n * update binary and examples for jade 1.0 #1876 @yossi, #1877 @reqshark, #1892 @matheusazzi\r\n * throw 400 in case of malformed paths @rlidwka\r\n\r\n3.4.7 / 2013-12-10\r\n==================\r\n\r\n * update connect\r\n\r\n3.4.6 / 2013-12-01\r\n==================\r\n\r\n * update connect (raw-body)\r\n\r\n3.4.5 / 2013-11-27\r\n==================\r\n\r\n * update connect\r\n * res.location: remove leading ./ #1802 @kapouer\r\n * res.redirect: fix `res.redirect('toString') #1829 @michaelficarra\r\n * res.send: always send ETag when content-length > 0\r\n * router: add Router.all() method\r\n\r\n3.4.4 / 2013-10-29\r\n==================\r\n\r\n * update connect\r\n * update supertest\r\n * update methods\r\n * express(1): replace bodyParser() with urlencoded() and json() #1795 @chirag04\r\n\r\n3.4.3 / 2013-10-23\r\n==================\r\n\r\n * update connect\r\n\r\n3.4.2 / 2013-10-18\r\n==================\r\n\r\n * update connect\r\n * downgrade commander\r\n\r\n3.4.1 / 2013-10-15\r\n==================\r\n\r\n * update connect\r\n * update commander\r\n * jsonp: check if callback is a function\r\n * router: wrap encodeURIComponent in a try/catch #1735 (@lxe)\r\n * res.format: now includes charset @1747 (@sorribas)\r\n * res.links: allow multiple calls @1746 (@sorribas)\r\n\r\n3.4.0 / 2013-09-07\r\n==================\r\n\r\n * add res.vary(). Closes #1682\r\n * update connect\r\n\r\n3.3.8 / 2013-09-02\r\n==================\r\n\r\n * update connect\r\n\r\n3.3.7 / 2013-08-28\r\n==================\r\n\r\n * update connect\r\n\r\n3.3.6 / 2013-08-27\r\n==================\r\n\r\n * Revert \"remove charset from json responses. Closes #1631\" (causes issues in some clients)\r\n * add: req.accepts take an argument list\r\n\r\n3.3.4 / 2013-07-08\r\n==================\r\n\r\n * update send and connect\r\n\r\n3.3.3 / 2013-07-04\r\n==================\r\n\r\n * update connect\r\n\r\n3.3.2 / 2013-07-03\r\n==================\r\n\r\n * update connect\r\n * update send\r\n * remove .version export\r\n\r\n3.3.1 / 2013-06-27\r\n==================\r\n\r\n * update connect\r\n\r\n3.3.0 / 2013-06-26\r\n==================\r\n\r\n * update connect\r\n * add support for multiple X-Forwarded-Proto values. Closes #1646\r\n * change: remove charset from json responses. Closes #1631\r\n * change: return actual booleans from req.accept* functions\r\n * fix jsonp callback array throw\r\n\r\n3.2.6 / 2013-06-02\r\n==================\r\n\r\n * update connect\r\n\r\n3.2.5 / 2013-05-21\r\n==================\r\n\r\n * update connect\r\n * update node-cookie\r\n * add: throw a meaningful error when there is no default engine\r\n * change generation of ETags with res.send() to GET requests only. Closes #1619\r\n\r\n3.2.4 / 2013-05-09\r\n==================\r\n\r\n  * fix `req.subdomains` when no Host is present\r\n  * fix `req.host` when no Host is present, return undefined\r\n\r\n3.2.3 / 2013-05-07\r\n==================\r\n\r\n  * update connect / qs\r\n\r\n3.2.2 / 2013-05-03\r\n==================\r\n\r\n  * update qs\r\n\r\n3.2.1 / 2013-04-29\r\n==================\r\n\r\n  * add app.VERB() paths array deprecation warning\r\n  * update connect\r\n  * update qs and remove all ~ semver crap\r\n  * fix: accept number as value of Signed Cookie\r\n\r\n3.2.0 / 2013-04-15\r\n==================\r\n\r\n  * add \"view\" constructor setting to override view behaviour\r\n  * add req.acceptsEncoding(name)\r\n  * add req.acceptedEncodings\r\n  * revert cookie signature change causing session race conditions\r\n  * fix sorting of Accept values of the same quality\r\n\r\n3.1.2 / 2013-04-12\r\n==================\r\n\r\n  * add support for custom Accept parameters\r\n  * update cookie-signature\r\n\r\n3.1.1 / 2013-04-01\r\n==================\r\n\r\n  * add X-Forwarded-Host support to `req.host`\r\n  * fix relative redirects\r\n  * update mkdirp\r\n  * update buffer-crc32\r\n  * remove legacy app.configure() method from app template.\r\n\r\n3.1.0 / 2013-01-25\r\n==================\r\n\r\n  * add support for leading \".\" in \"view engine\" setting\r\n  * add array support to `res.set()`\r\n  * add node 0.8.x to travis.yml\r\n  * add \"subdomain offset\" setting for tweaking `req.subdomains`\r\n  * add `res.location(url)` implementing `res.redirect()`-like setting of Location\r\n  * use app.get() for x-powered-by setting for inheritance\r\n  * fix colons in passwords for `req.auth`\r\n\r\n3.0.6 / 2013-01-04\r\n==================\r\n\r\n  * add http verb methods to Router\r\n  * update connect\r\n  * fix mangling of the `res.cookie()` options object\r\n  * fix jsonp whitespace escape. Closes #1132\r\n\r\n3.0.5 / 2012-12-19\r\n==================\r\n\r\n  * add throwing when a non-function is passed to a route\r\n  * fix: explicitly remove Transfer-Encoding header from 204 and 304 responses\r\n  * revert \"add 'etag' option\"\r\n\r\n3.0.4 / 2012-12-05\r\n==================\r\n\r\n  * add 'etag' option to disable `res.send()` Etags\r\n  * add escaping of urls in text/plain in `res.redirect()`\r\n    for old browsers interpreting as html\r\n  * change crc32 module for a more liberal license\r\n  * update connect\r\n\r\n3.0.3 / 2012-11-13\r\n==================\r\n\r\n  * update connect\r\n  * update cookie module\r\n  * fix cookie max-age\r\n\r\n3.0.2 / 2012-11-08\r\n==================\r\n\r\n  * add OPTIONS to cors example. Closes #1398\r\n  * fix route chaining regression. Closes #1397\r\n\r\n3.0.1 / 2012-11-01\r\n==================\r\n\r\n  * update connect\r\n\r\n3.0.0 / 2012-10-23\r\n==================\r\n\r\n  * add `make clean`\r\n  * add \"Basic\" check to req.auth\r\n  * add `req.auth` test coverage\r\n  * add cb && cb(payload) to `res.jsonp()`. Closes #1374\r\n  * add backwards compat for `res.redirect()` status. Closes #1336\r\n  * add support for `res.json()` to retain previously defined Content-Types. Closes #1349\r\n  * update connect\r\n  * change `res.redirect()` to utilize a pathname-relative Location again. Closes #1382\r\n  * remove non-primitive string support for `res.send()`\r\n  * fix view-locals example. Closes #1370\r\n  * fix route-separation example\r\n\r\n3.0.0rc5 / 2012-09-18\r\n==================\r\n\r\n  * update connect\r\n  * add redis search example\r\n  * add static-files example\r\n  * add \"x-powered-by\" setting (`app.disable('x-powered-by')`)\r\n  * add \"application/octet-stream\" redirect Accept test case. Closes #1317\r\n\r\n3.0.0rc4 / 2012-08-30\r\n==================\r\n\r\n  * add `res.jsonp()`. Closes #1307\r\n  * add \"verbose errors\" option to error-pages example\r\n  * add another route example to express(1) so people are not so confused\r\n  * add redis online user activity tracking example\r\n  * update connect dep\r\n  * fix etag quoting. Closes #1310\r\n  * fix error-pages 404 status\r\n  * fix jsonp callback char restrictions\r\n  * remove old OPTIONS default response\r\n\r\n3.0.0rc3 / 2012-08-13\r\n==================\r\n\r\n  * update connect dep\r\n  * fix signed cookies to work with `connect.cookieParser()` (\"s:\" prefix was missing) [tnydwrds]\r\n  * fix `res.render()` clobbering of \"locals\"\r\n\r\n3.0.0rc2 / 2012-08-03\r\n==================\r\n\r\n  * add CORS example\r\n  * update connect dep\r\n  * deprecate `.createServer()` & remove old stale examples\r\n  * fix: escape `res.redirect()` link\r\n  * fix vhost example\r\n\r\n3.0.0rc1 / 2012-07-24\r\n==================\r\n\r\n  * add more examples to view-locals\r\n  * add scheme-relative redirects (`res.redirect(\"//foo.com\")`) support\r\n  * update cookie dep\r\n  * update connect dep\r\n  * update send dep\r\n  * fix `express(1)` -h flag, use -H for hogan. Closes #1245\r\n  * fix `res.sendfile()` socket error handling regression\r\n\r\n3.0.0beta7 / 2012-07-16\r\n==================\r\n\r\n  * update connect dep for `send()` root normalization regression\r\n\r\n3.0.0beta6 / 2012-07-13\r\n==================\r\n\r\n  * add `err.view` property for view errors. Closes #1226\r\n  * add \"jsonp callback name\" setting\r\n  * add support for \"/foo/:bar*\" non-greedy matches\r\n  * change `res.sendfile()` to use `send()` module\r\n  * change `res.send` to use \"response-send\" module\r\n  * remove `app.locals.use` and `res.locals.use`, use regular middleware\r\n\r\n3.0.0beta5 / 2012-07-03\r\n==================\r\n\r\n  * add \"make check\" support\r\n  * add route-map example\r\n  * add `res.json(obj, status)` support back for BC\r\n  * add \"methods\" dep, remove internal methods module\r\n  * update connect dep\r\n  * update auth example to utilize cores pbkdf2\r\n  * updated tests to use \"supertest\"\r\n\r\n3.0.0beta4 / 2012-06-25\r\n==================\r\n\r\n  * Added `req.auth`\r\n  * Added `req.range(size)`\r\n  * Added `res.links(obj)`\r\n  * Added `res.send(body, status)` support back for backwards compat\r\n  * Added `.default()` support to `res.format()`\r\n  * Added 2xx / 304 check to `req.fresh`\r\n  * Revert \"Added + support to the router\"\r\n  * Fixed `res.send()` freshness check, respect res.statusCode\r\n\r\n3.0.0beta3 / 2012-06-15\r\n==================\r\n\r\n  * Added hogan `--hjs` to express(1) [nullfirm]\r\n  * Added another example to content-negotiation\r\n  * Added `fresh` dep\r\n  * Changed: `res.send()` always checks freshness\r\n  * Fixed: expose connects mime module. Closes #1165\r\n\r\n3.0.0beta2 / 2012-06-06\r\n==================\r\n\r\n  * Added `+` support to the router\r\n  * Added `req.host`\r\n  * Changed `req.param()` to check route first\r\n  * Update connect dep\r\n\r\n3.0.0beta1 / 2012-06-01\r\n==================\r\n\r\n  * Added `res.format()` callback to override default 406 behaviour\r\n  * Fixed `res.redirect()` 406. Closes #1154\r\n\r\n3.0.0alpha5 / 2012-05-30\r\n==================\r\n\r\n  * Added `req.ip`\r\n  * Added `{ signed: true }` option to `res.cookie()`\r\n  * Removed `res.signedCookie()`\r\n  * Changed: dont reverse `req.ips`\r\n  * Fixed \"trust proxy\" setting check for `req.ips`\r\n\r\n3.0.0alpha4 / 2012-05-09\r\n==================\r\n\r\n  * Added: allow `[]` in jsonp callback. Closes #1128\r\n  * Added `PORT` env var support in generated template. Closes #1118 [benatkin]\r\n  * Updated: connect 2.2.2\r\n\r\n3.0.0alpha3 / 2012-05-04\r\n==================\r\n\r\n  * Added public `app.routes`. Closes #887\r\n  * Added _view-locals_ example\r\n  * Added _mvc_ example\r\n  * Added `res.locals.use()`. Closes #1120\r\n  * Added conditional-GET support to `res.send()`\r\n  * Added: coerce `res.set()` values to strings\r\n  * Changed: moved `static()` in generated apps below router\r\n  * Changed: `res.send()` only set ETag when not previously set\r\n  * Changed connect 2.2.1 dep\r\n  * Changed: `make test` now runs unit / acceptance tests\r\n  * Fixed req/res proto inheritance\r\n\r\n3.0.0alpha2 / 2012-04-26\r\n==================\r\n\r\n  * Added `make benchmark` back\r\n  * Added `res.send()` support for `String` objects\r\n  * Added client-side data exposing example\r\n  * Added `res.header()` and `req.header()` aliases for BC\r\n  * Added `express.createServer()` for BC\r\n  * Perf: memoize parsed urls\r\n  * Perf: connect 2.2.0 dep\r\n  * Changed: make `expressInit()` middleware self-aware\r\n  * Fixed: use app.get() for all core settings\r\n  * Fixed redis session example\r\n  * Fixed session example. Closes #1105\r\n  * Fixed generated express dep. Closes #1078\r\n\r\n3.0.0alpha1 / 2012-04-15\r\n==================\r\n\r\n  * Added `app.locals.use(callback)`\r\n  * Added `app.locals` object\r\n  * Added `app.locals(obj)`\r\n  * Added `res.locals` object\r\n  * Added `res.locals(obj)`\r\n  * Added `res.format()` for content-negotiation\r\n  * Added `app.engine()`\r\n  * Added `res.cookie()` JSON cookie support\r\n  * Added \"trust proxy\" setting\r\n  * Added `req.subdomains`\r\n  * Added `req.protocol`\r\n  * Added `req.secure`\r\n  * Added `req.path`\r\n  * Added `req.ips`\r\n  * Added `req.fresh`\r\n  * Added `req.stale`\r\n  * Added comma-delimited / array support for `req.accepts()`\r\n  * Added debug instrumentation\r\n  * Added `res.set(obj)`\r\n  * Added `res.set(field, value)`\r\n  * Added `res.get(field)`\r\n  * Added `app.get(setting)`. Closes #842\r\n  * Added `req.acceptsLanguage()`\r\n  * Added `req.acceptsCharset()`\r\n  * Added `req.accepted`\r\n  * Added `req.acceptedLanguages`\r\n  * Added `req.acceptedCharsets`\r\n  * Added \"json replacer\" setting\r\n  * Added \"json spaces\" setting\r\n  * Added X-Forwarded-Proto support to `res.redirect()`. Closes #92\r\n  * Added `--less` support to express(1)\r\n  * Added `express.response` prototype\r\n  * Added `express.request` prototype\r\n  * Added `express.application` prototype\r\n  * Added `app.path()`\r\n  * Added `app.render()`\r\n  * Added `res.type()` to replace `res.contentType()`\r\n  * Changed: `res.redirect()` to add relative support\r\n  * Changed: enable \"jsonp callback\" by default\r\n  * Changed: renamed \"case sensitive routes\" to \"case sensitive routing\"\r\n  * Rewrite of all tests with mocha\r\n  * Removed \"root\" setting\r\n  * Removed `res.redirect('home')` support\r\n  * Removed `req.notify()`\r\n  * Removed `app.register()`\r\n  * Removed `app.redirect()`\r\n  * Removed `app.is()`\r\n  * Removed `app.helpers()`\r\n  * Removed `app.dynamicHelpers()`\r\n  * Fixed `res.sendfile()` with non-GET. Closes #723\r\n  * Fixed express(1) public dir for windows. Closes #866\r\n\r\n2.5.9/ 2012-04-02\r\n==================\r\n\r\n  * Added support for PURGE request method [pbuyle]\r\n  * Fixed `express(1)` generated app `app.address()` before `listening` [mmalecki]\r\n\r\n2.5.8 / 2012-02-08\r\n==================\r\n\r\n  * Update mkdirp dep. Closes #991\r\n\r\n2.5.7 / 2012-02-06\r\n==================\r\n\r\n  * Fixed `app.all` duplicate DELETE requests [mscdex]\r\n\r\n2.5.6 / 2012-01-13\r\n==================\r\n\r\n  * Updated hamljs dev dep. Closes #953\r\n\r\n2.5.5 / 2012-01-08\r\n==================\r\n\r\n  * Fixed: set `filename` on cached templates [matthewleon]\r\n\r\n2.5.4 / 2012-01-02\r\n==================\r\n\r\n  * Fixed `express(1)` eol on 0.4.x. Closes #947\r\n\r\n2.5.3 / 2011-12-30\r\n==================\r\n\r\n  * Fixed `req.is()` when a charset is present\r\n\r\n2.5.2 / 2011-12-10\r\n==================\r\n\r\n  * Fixed: express(1) LF -> CRLF for windows\r\n\r\n2.5.1 / 2011-11-17\r\n==================\r\n\r\n  * Changed: updated connect to 1.8.x\r\n  * Removed sass.js support from express(1)\r\n\r\n2.5.0 / 2011-10-24\r\n==================\r\n\r\n  * Added ./routes dir for generated app by default\r\n  * Added npm install reminder to express(1) app gen\r\n  * Added 0.5.x support\r\n  * Removed `make test-cov` since it wont work with node 0.5.x\r\n  * Fixed express(1) public dir for windows. Closes #866\r\n\r\n2.4.7 / 2011-10-05\r\n==================\r\n\r\n  * Added mkdirp to express(1). Closes #795\r\n  * Added simple _json-config_ example\r\n  * Added  shorthand for the parsed request's pathname via `req.path`\r\n  * Changed connect dep to 1.7.x to fix npm issue...\r\n  * Fixed `res.redirect()` __HEAD__ support. [reported by xerox]\r\n  * Fixed `req.flash()`, only escape args\r\n  * Fixed absolute path checking on windows. Closes #829 [reported by andrewpmckenzie]\r\n\r\n2.4.6 / 2011-08-22\r\n==================\r\n\r\n  * Fixed multiple param callback regression. Closes #824 [reported by TroyGoode]\r\n\r\n2.4.5 / 2011-08-19\r\n==================\r\n\r\n  * Added support for routes to handle errors. Closes #809\r\n  * Added `app.routes.all()`. Closes #803\r\n  * Added \"basepath\" setting to work in conjunction with reverse proxies etc.\r\n  * Refactored `Route` to use a single array of callbacks\r\n  * Added support for multiple callbacks for `app.param()`. Closes #801\r\nCloses #805\r\n  * Changed: removed .call(self) for route callbacks\r\n  * Dependency: `qs >= 0.3.1`\r\n  * Fixed `res.redirect()` on windows due to `join()` usage. Closes #808\r\n\r\n2.4.4 / 2011-08-05\r\n==================\r\n\r\n  * Fixed `res.header()` intention of a set, even when `undefined`\r\n  * Fixed `*`, value no longer required\r\n  * Fixed `res.send(204)` support. Closes #771\r\n\r\n2.4.3 / 2011-07-14\r\n==================\r\n\r\n  * Added docs for `status` option special-case. Closes #739\r\n  * Fixed `options.filename`, exposing the view path to template engines\r\n\r\n2.4.2. / 2011-07-06\r\n==================\r\n\r\n  * Revert \"removed jsonp stripping\" for XSS\r\n\r\n2.4.1 / 2011-07-06\r\n==================\r\n\r\n  * Added `res.json()` JSONP support. Closes #737\r\n  * Added _extending-templates_ example. Closes #730\r\n  * Added \"strict routing\" setting for trailing slashes\r\n  * Added support for multiple envs in `app.configure()` calls. Closes #735\r\n  * Changed: `res.send()` using `res.json()`\r\n  * Changed: when cookie `path === null` don't default it\r\n  * Changed; default cookie path to \"home\" setting. Closes #731\r\n  * Removed _pids/logs_ creation from express(1)\r\n\r\n2.4.0 / 2011-06-28\r\n==================\r\n\r\n  * Added chainable `res.status(code)`\r\n  * Added `res.json()`, an explicit version of `res.send(obj)`\r\n  * Added simple web-service example\r\n\r\n2.3.12 / 2011-06-22\r\n==================\r\n\r\n  * \\#express is now on freenode! come join!\r\n  * Added `req.get(field, param)`\r\n  * Added links to Japanese documentation, thanks @hideyukisaito!\r\n  * Added; the `express(1)` generated app outputs the env\r\n  * Added `content-negotiation` example\r\n  * Dependency: connect >= 1.5.1 < 2.0.0\r\n  * Fixed view layout bug. Closes #720\r\n  * Fixed; ignore body on 304. Closes #701\r\n\r\n2.3.11 / 2011-06-04\r\n==================\r\n\r\n  * Added `npm test`\r\n  * Removed generation of dummy test file from `express(1)`\r\n  * Fixed; `express(1)` adds express as a dep\r\n  * Fixed; prune on `prepublish`\r\n\r\n2.3.10 / 2011-05-27\r\n==================\r\n\r\n  * Added `req.route`, exposing the current route\r\n  * Added _package.json_ generation support to `express(1)`\r\n  * Fixed call to `app.param()` function for optional params. Closes #682\r\n\r\n2.3.9 / 2011-05-25\r\n==================\r\n\r\n  * Fixed bug-ish with `../' in `res.partial()` calls\r\n\r\n2.3.8 / 2011-05-24\r\n==================\r\n\r\n  * Fixed `app.options()`\r\n\r\n2.3.7 / 2011-05-23\r\n==================\r\n\r\n  * Added route `Collection`, ex: `app.get('/user/:id').remove();`\r\n  * Added support for `app.param(fn)` to define param logic\r\n  * Removed `app.param()` support for callback with return value\r\n  * Removed module.parent check from express(1) generated app. Closes #670\r\n  * Refactored router. Closes #639\r\n\r\n2.3.6 / 2011-05-20\r\n==================\r\n\r\n  * Changed; using devDependencies instead of git submodules\r\n  * Fixed redis session example\r\n  * Fixed markdown example\r\n  * Fixed view caching, should not be enabled in development\r\n\r\n2.3.5 / 2011-05-20\r\n==================\r\n\r\n  * Added export `.view` as alias for `.View`\r\n\r\n2.3.4 / 2011-05-08\r\n==================\r\n\r\n  * Added `./examples/say`\r\n  * Fixed `res.sendfile()` bug preventing the transfer of files with spaces\r\n\r\n2.3.3 / 2011-05-03\r\n==================\r\n\r\n  * Added \"case sensitive routes\" option.\r\n  * Changed; split methods supported per rfc [slaskis]\r\n  * Fixed route-specific middleware when using the same callback function several times\r\n\r\n2.3.2 / 2011-04-27\r\n==================\r\n\r\n  * Fixed view hints\r\n\r\n2.3.1 / 2011-04-26\r\n==================\r\n\r\n  * Added `app.match()` as `app.match.all()`\r\n  * Added `app.lookup()` as `app.lookup.all()`\r\n  * Added `app.remove()` for `app.remove.all()`\r\n  * Added `app.remove.VERB()`\r\n  * Fixed template caching collision issue. Closes #644\r\n  * Moved router over from connect and started refactor\r\n\r\n2.3.0 / 2011-04-25\r\n==================\r\n\r\n  * Added options support to `res.clearCookie()`\r\n  * Added `res.helpers()` as alias of `res.locals()`\r\n  * Added; json defaults to UTF-8 with `res.send()`. Closes #632. [Daniel   * Dependency `connect >= 1.4.0`\r\n  * Changed; auto set Content-Type in res.attachement [Aaron Heckmann]\r\n  * Renamed \"cache views\" to \"view cache\". Closes #628\r\n  * Fixed caching of views when using several apps. Closes #637\r\n  * Fixed gotcha invoking `app.param()` callbacks once per route middleware.\r\nCloses #638\r\n  * Fixed partial lookup precedence. Closes #631\r\nShaw]\r\n\r\n2.2.2 / 2011-04-12\r\n==================\r\n\r\n  * Added second callback support for `res.download()` connection errors\r\n  * Fixed `filename` option passing to template engine\r\n\r\n2.2.1 / 2011-04-04\r\n==================\r\n\r\n  * Added `layout(path)` helper to change the layout within a view. Closes #610\r\n  * Fixed `partial()` collection object support.\r\n    Previously only anything with `.length` would work.\r\n    When `.length` is present one must still be aware of holes,\r\n    however now `{ collection: {foo: 'bar'}}` is valid, exposes\r\n    `keyInCollection` and `keysInCollection`.\r\n\r\n  * Performance improved with better view caching\r\n  * Removed `request` and `response` locals\r\n  * Changed; errorHandler page title is now `Express` instead of `Connect`\r\n\r\n2.2.0 / 2011-03-30\r\n==================\r\n\r\n  * Added `app.lookup.VERB()`, ex `app.lookup.put('/user/:id')`. Closes #606\r\n  * Added `app.match.VERB()`, ex `app.match.put('/user/12')`. Closes #606\r\n  * Added `app.VERB(path)` as alias of `app.lookup.VERB()`.\r\n  * Dependency `connect >= 1.2.0`\r\n\r\n2.1.1 / 2011-03-29\r\n==================\r\n\r\n  * Added; expose `err.view` object when failing to locate a view\r\n  * Fixed `res.partial()` call `next(err)` when no callback is given [reported by aheckmann]\r\n  * Fixed; `res.send(undefined)` responds with 204 [aheckmann]\r\n\r\n2.1.0 / 2011-03-24\r\n==================\r\n\r\n  * Added `<root>/_?<name>` partial lookup support. Closes #447\r\n  * Added `request`, `response`, and `app` local variables\r\n  * Added `settings` local variable, containing the app's settings\r\n  * Added `req.flash()` exception if `req.session` is not available\r\n  * Added `res.send(bool)` support (json response)\r\n  * Fixed stylus example for latest version\r\n  * Fixed; wrap try/catch around `res.render()`\r\n\r\n2.0.0 / 2011-03-17\r\n==================\r\n\r\n  * Fixed up index view path alternative.\r\n  * Changed; `res.locals()` without object returns the locals\r\n\r\n2.0.0rc3 / 2011-03-17\r\n==================\r\n\r\n  * Added `res.locals(obj)` to compliment `res.local(key, val)`\r\n  * Added `res.partial()` callback support\r\n  * Fixed recursive error reporting issue in `res.render()`\r\n\r\n2.0.0rc2 / 2011-03-17\r\n==================\r\n\r\n  * Changed; `partial()` \"locals\" are now optional\r\n  * Fixed `SlowBuffer` support. Closes #584 [reported by tyrda01]\r\n  * Fixed .filename view engine option [reported by drudge]\r\n  * Fixed blog example\r\n  * Fixed `{req,res}.app` reference when mounting [Ben Weaver]\r\n\r\n2.0.0rc / 2011-03-14\r\n==================\r\n\r\n  * Fixed; expose `HTTPSServer` constructor\r\n  * Fixed express(1) default test charset. Closes #579 [reported by secoif]\r\n  * Fixed; default charset to utf-8 instead of utf8 for lame IE [reported by NickP]\r\n\r\n2.0.0beta3 / 2011-03-09\r\n==================\r\n\r\n  * Added support for `res.contentType()` literal\r\n    The original `res.contentType('.json')`,\r\n    `res.contentType('application/json')`, and `res.contentType('json')`\r\n    will work now.\r\n  * Added `res.render()` status option support back\r\n  * Added charset option for `res.render()`\r\n  * Added `.charset` support (via connect 1.0.4)\r\n  * Added view resolution hints when in development and a lookup fails\r\n  * Added layout lookup support relative to the page view.\r\n    For example while rendering `./views/user/index.jade` if you create\r\n    `./views/user/layout.jade` it will be used in favour of the root layout.\r\n  * Fixed `res.redirect()`. RFC states absolute url [reported by unlink]\r\n  * Fixed; default `res.send()` string charset to utf8\r\n  * Removed `Partial` constructor (not currently used)\r\n\r\n2.0.0beta2 / 2011-03-07\r\n==================\r\n\r\n  * Added res.render() `.locals` support back to aid in migration process\r\n  * Fixed flash example\r\n\r\n2.0.0beta / 2011-03-03\r\n==================\r\n\r\n  * Added HTTPS support\r\n  * Added `res.cookie()` maxAge support\r\n  * Added `req.header()` _Referrer_ / _Referer_ special-case, either works\r\n  * Added mount support for `res.redirect()`, now respects the mount-point\r\n  * Added `union()` util, taking place of `merge(clone())` combo\r\n  * Added stylus support to express(1) generated app\r\n  * Added secret to session middleware used in examples and generated app\r\n  * Added `res.local(name, val)` for progressive view locals\r\n  * Added default param support to `req.param(name, default)`\r\n  * Added `app.disabled()` and `app.enabled()`\r\n  * Added `app.register()` support for omitting leading \".\", either works\r\n  * Added `res.partial()`, using the same interface as `partial()` within a view. Closes #539\r\n  * Added `app.param()` to map route params to async/sync logic\r\n  * Added; aliased `app.helpers()` as `app.locals()`. Closes #481\r\n  * Added extname with no leading \".\" support to `res.contentType()`\r\n  * Added `cache views` setting, defaulting to enabled in \"production\" env\r\n  * Added index file partial resolution, eg: partial('user') may try _views/user/index.jade_.\r\n  * Added `req.accepts()` support for extensions\r\n  * Changed; `res.download()` and `res.sendfile()` now utilize Connect's\r\n    static file server `connect.static.send()`.\r\n  * Changed; replaced `connect.utils.mime()` with npm _mime_ module\r\n  * Changed; allow `req.query` to be pre-defined (via middleware or other parent\r\n  * Changed view partial resolution, now relative to parent view\r\n  * Changed view engine signature. no longer `engine.render(str, options, callback)`, now `engine.compile(str, options) -> Function`, the returned function accepts `fn(locals)`.\r\n  * Fixed `req.param()` bug returning Array.prototype methods. Closes #552\r\n  * Fixed; using `Stream#pipe()` instead of `sys.pump()` in `res.sendfile()`\r\n  * Fixed; using _qs_ module instead of _querystring_\r\n  * Fixed; strip unsafe chars from jsonp callbacks\r\n  * Removed \"stream threshold\" setting\r\n\r\n1.0.8 / 2011-03-01\r\n==================\r\n\r\n  * Allow `req.query` to be pre-defined (via middleware or other parent app)\r\n  * \"connect\": \">= 0.5.0 < 1.0.0\". Closes #547\r\n  * Removed the long deprecated __EXPRESS_ENV__ support\r\n\r\n1.0.7 / 2011-02-07\r\n==================\r\n\r\n  * Fixed `render()` setting inheritance.\r\n    Mounted apps would not inherit \"view engine\"\r\n\r\n1.0.6 / 2011-02-07\r\n==================\r\n\r\n  * Fixed `view engine` setting bug when period is in dirname\r\n\r\n1.0.5 / 2011-02-05\r\n==================\r\n\r\n  * Added secret to generated app `session()` call\r\n\r\n1.0.4 / 2011-02-05\r\n==================\r\n\r\n  * Added `qs` dependency to _package.json_\r\n  * Fixed namespaced `require()`s for latest connect support\r\n\r\n1.0.3 / 2011-01-13\r\n==================\r\n\r\n  * Remove unsafe characters from JSONP callback names [Ryan Grove]\r\n\r\n1.0.2 / 2011-01-10\r\n==================\r\n\r\n  * Removed nested require, using `connect.router`\r\n\r\n1.0.1 / 2010-12-29\r\n==================\r\n\r\n  * Fixed for middleware stacked via `createServer()`\r\n    previously the `foo` middleware passed to `createServer(foo)`\r\n    would not have access to Express methods such as `res.send()`\r\n    or props like `req.query` etc.\r\n\r\n1.0.0 / 2010-11-16\r\n==================\r\n\r\n  * Added; deduce partial object names from the last segment.\r\n    For example by default `partial('forum/post', postObject)` will\r\n    give you the _post_ object, providing a meaningful default.\r\n  * Added http status code string representation to `res.redirect()` body\r\n  * Added; `res.redirect()` supporting _text/plain_ and _text/html_ via __Accept__.\r\n  * Added `req.is()` to aid in content negotiation\r\n  * Added partial local inheritance [suggested by masylum]. Closes #102\r\n    providing access to parent template locals.\r\n  * Added _-s, --session[s]_ flag to express(1) to add session related middleware\r\n  * Added _--template_ flag to express(1) to specify the\r\n    template engine to use.\r\n  * Added _--css_ flag to express(1) to specify the\r\n    stylesheet engine to use (or just plain css by default).\r\n  * Added `app.all()` support [thanks aheckmann]\r\n  * Added partial direct object support.\r\n    You may now `partial('user', user)` providing the \"user\" local,\r\n    vs previously `partial('user', { object: user })`.\r\n  * Added _route-separation_ example since many people question ways\r\n    to do this with CommonJS modules. Also view the _blog_ example for\r\n    an alternative.\r\n  * Performance; caching view path derived partial object names\r\n  * Fixed partial local inheritance precedence. [reported by Nick Poulden] Closes #454\r\n  * Fixed jsonp support; _text/javascript_ as per mailinglist discussion\r\n\r\n1.0.0rc4 / 2010-10-14\r\n==================\r\n\r\n  * Added _NODE_ENV_ support, _EXPRESS_ENV_ is deprecated and will be removed in 1.0.0\r\n  * Added route-middleware support (very helpful, see the [docs](http://expressjs.com/guide.html#Route-Middleware))\r\n  * Added _jsonp callback_ setting to enable/disable jsonp autowrapping [Dav Glass]\r\n  * Added callback query check on response.send to autowrap JSON objects for simple webservice implementations [Dav Glass]\r\n  * Added `partial()` support for array-like collections. Closes #434\r\n  * Added support for swappable querystring parsers\r\n  * Added session usage docs. Closes #443\r\n  * Added dynamic helper caching. Closes #439 [suggested by maritz]\r\n  * Added authentication example\r\n  * Added basic Range support to `res.sendfile()` (and `res.download()` etc)\r\n  * Changed; `express(1)` generated app using 2 spaces instead of 4\r\n  * Default env to \"development\" again [aheckmann]\r\n  * Removed _context_ option is no more, use \"scope\"\r\n  * Fixed; exposing _./support_ libs to examples so they can run without installs\r\n  * Fixed mvc example\r\n\r\n1.0.0rc3 / 2010-09-20\r\n==================\r\n\r\n  * Added confirmation for `express(1)` app generation. Closes #391\r\n  * Added extending of flash formatters via `app.flashFormatters`\r\n  * Added flash formatter support. Closes #411\r\n  * Added streaming support to `res.sendfile()` using `sys.pump()` when >= \"stream threshold\"\r\n  * Added _stream threshold_ setting for `res.sendfile()`\r\n  * Added `res.send()` __HEAD__ support\r\n  * Added `res.clearCookie()`\r\n  * Added `res.cookie()`\r\n  * Added `res.render()` headers option\r\n  * Added `res.redirect()` response bodies\r\n  * Added `res.render()` status option support. Closes #425 [thanks aheckmann]\r\n  * Fixed `res.sendfile()` responding with 403 on malicious path\r\n  * Fixed `res.download()` bug; when an error occurs remove _Content-Disposition_\r\n  * Fixed; mounted apps settings now inherit from parent app [aheckmann]\r\n  * Fixed; stripping Content-Length / Content-Type when 204\r\n  * Fixed `res.send()` 204. Closes #419\r\n  * Fixed multiple _Set-Cookie_ headers via `res.header()`. Closes #402\r\n  * Fixed bug messing with error handlers when `listenFD()` is called instead of `listen()`. [thanks guillermo]\r\n\r\n\r\n1.0.0rc2 / 2010-08-17\r\n==================\r\n\r\n  * Added `app.register()` for template engine mapping. Closes #390\r\n  * Added `res.render()` callback support as second argument (no options)\r\n  * Added callback support to `res.download()`\r\n  * Added callback support for `res.sendfile()`\r\n  * Added support for middleware access via `express.middlewareName()` vs `connect.middlewareName()`\r\n  * Added \"partials\" setting to docs\r\n  * Added default expresso tests to `express(1)` generated app. Closes #384\r\n  * Fixed `res.sendfile()` error handling, defer via `next()`\r\n  * Fixed `res.render()` callback when a layout is used [thanks guillermo]\r\n  * Fixed; `make install` creating ~/.node_libraries when not present\r\n  * Fixed issue preventing error handlers from being defined anywhere. Closes #387\r\n\r\n1.0.0rc / 2010-07-28\r\n==================\r\n\r\n  * Added mounted hook. Closes #369\r\n  * Added connect dependency to _package.json_\r\n\r\n  * Removed \"reload views\" setting and support code\r\n    development env never caches, production always caches.\r\n\r\n  * Removed _param_ in route callbacks, signature is now\r\n    simply (req, res, next), previously (req, res, params, next).\r\n    Use _req.params_ for path captures, _req.query_ for GET params.\r\n\r\n  * Fixed \"home\" setting\r\n  * Fixed middleware/router precedence issue. Closes #366\r\n  * Fixed; _configure()_ callbacks called immediately. Closes #368\r\n\r\n1.0.0beta2 / 2010-07-23\r\n==================\r\n\r\n  * Added more examples\r\n  * Added; exporting `Server` constructor\r\n  * Added `Server#helpers()` for view locals\r\n  * Added `Server#dynamicHelpers()` for dynamic view locals. Closes #349\r\n  * Added support for absolute view paths\r\n  * Added; _home_ setting defaults to `Server#route` for mounted apps. Closes #363\r\n  * Added Guillermo Rauch to the contributor list\r\n  * Added support for \"as\" for non-collection partials. Closes #341\r\n  * Fixed _install.sh_, ensuring _~/.node_libraries_ exists. Closes #362 [thanks jf]\r\n  * Fixed `res.render()` exceptions, now passed to `next()` when no callback is given [thanks guillermo]\r\n  * Fixed instanceof `Array` checks, now `Array.isArray()`\r\n  * Fixed express(1) expansion of public dirs. Closes #348\r\n  * Fixed middleware precedence. Closes #345\r\n  * Fixed view watcher, now async [thanks aheckmann]\r\n\r\n1.0.0beta / 2010-07-15\r\n==================\r\n\r\n  * Re-write\r\n    - much faster\r\n    - much lighter\r\n    - Check [ExpressJS.com](http://expressjs.com) for migration guide and updated docs\r\n\r\n0.14.0 / 2010-06-15\r\n==================\r\n\r\n  * Utilize relative requires\r\n  * Added Static bufferSize option [aheckmann]\r\n  * Fixed caching of view and partial subdirectories [aheckmann]\r\n  * Fixed mime.type() comments now that \".ext\" is not supported\r\n  * Updated haml submodule\r\n  * Updated class submodule\r\n  * Removed bin/express\r\n\r\n0.13.0 / 2010-06-01\r\n==================\r\n\r\n  * Added node v0.1.97 compatibility\r\n  * Added support for deleting cookies via Request#cookie('key', null)\r\n  * Updated haml submodule\r\n  * Fixed not-found page, now using using charset utf-8\r\n  * Fixed show-exceptions page, now using using charset utf-8\r\n  * Fixed view support due to fs.readFile Buffers\r\n  * Changed; mime.type() no longer accepts \".type\" due to node extname() changes\r\n\r\n0.12.0 / 2010-05-22\r\n==================\r\n\r\n  * Added node v0.1.96 compatibility\r\n  * Added view `helpers` export which act as additional local variables\r\n  * Updated haml submodule\r\n  * Changed ETag; removed inode, modified time only\r\n  * Fixed LF to CRLF for setting multiple cookies\r\n  * Fixed cookie compilation; values are now urlencoded\r\n  * Fixed cookies parsing; accepts quoted values and url escaped cookies\r\n\r\n0.11.0 / 2010-05-06\r\n==================\r\n\r\n  * Added support for layouts using different engines\r\n    - this.render('page.html.haml', { layout: 'super-cool-layout.html.ejs' })\r\n    - this.render('page.html.haml', { layout: 'foo' }) // assumes 'foo.html.haml'\r\n    - this.render('page.html.haml', { layout: false }) // no layout\r\n  * Updated ext submodule\r\n  * Updated haml submodule\r\n  * Fixed EJS partial support by passing along the context. Issue #307\r\n\r\n0.10.1 / 2010-05-03\r\n==================\r\n\r\n  * Fixed binary uploads.\r\n\r\n0.10.0 / 2010-04-30\r\n==================\r\n\r\n  * Added charset support via Request#charset (automatically assigned to 'UTF-8' when respond()'s\r\n    encoding is set to 'utf8' or 'utf-8'.\r\n  * Added \"encoding\" option to Request#render(). Closes #299\r\n  * Added \"dump exceptions\" setting, which is enabled by default.\r\n  * Added simple ejs template engine support\r\n  * Added error response support for text/plain, application/json. Closes #297\r\n  * Added callback function param to Request#error()\r\n  * Added Request#sendHead()\r\n  * Added Request#stream()\r\n  * Added support for Request#respond(304, null) for empty response bodies\r\n  * Added ETag support to Request#sendfile()\r\n  * Added options to Request#sendfile(), passed to fs.createReadStream()\r\n  * Added filename arg to Request#download()\r\n  * Performance enhanced due to pre-reversing plugins so that plugins.reverse() is not called on each request\r\n  * Performance enhanced by preventing several calls to toLowerCase() in Router#match()\r\n  * Changed; Request#sendfile() now streams\r\n  * Changed; Renamed Request#halt() to Request#respond(). Closes #289\r\n  * Changed; Using sys.inspect() instead of JSON.encode() for error output\r\n  * Changed; run() returns the http.Server instance. Closes #298\r\n  * Changed; Defaulting Server#host to null (INADDR_ANY)\r\n  * Changed; Logger \"common\" format scale of 0.4f\r\n  * Removed Logger \"request\" format\r\n  * Fixed; Catching ENOENT in view caching, preventing error when \"views/partials\" is not found\r\n  * Fixed several issues with http client\r\n  * Fixed Logger Content-Length output\r\n  * Fixed bug preventing Opera from retaining the generated session id. Closes #292\r\n\r\n0.9.0 / 2010-04-14\r\n==================\r\n\r\n  * Added DSL level error() route support\r\n  * Added DSL level notFound() route support\r\n  * Added Request#error()\r\n  * Added Request#notFound()\r\n  * Added Request#render() callback function. Closes #258\r\n  * Added \"max upload size\" setting\r\n  * Added \"magic\" variables to collection partials (\\_\\_index\\_\\_, \\_\\_length\\_\\_, \\_\\_isFirst\\_\\_, \\_\\_isLast\\_\\_). Closes #254\r\n  * Added [haml.js](http://github.com/visionmedia/haml.js) submodule; removed haml-js\r\n  * Added callback function support to Request#halt() as 3rd/4th arg\r\n  * Added preprocessing of route param wildcards using param(). Closes #251\r\n  * Added view partial support (with collections etc)\r\n  * Fixed bug preventing falsey params (such as ?page=0). Closes #286\r\n  * Fixed setting of multiple cookies. Closes #199\r\n  * Changed; view naming convention is now NAME.TYPE.ENGINE (for example page.html.haml)\r\n  * Changed; session cookie is now httpOnly\r\n  * Changed; Request is no longer global\r\n  * Changed; Event is no longer global\r\n  * Changed; \"sys\" module is no longer global\r\n  * Changed; moved Request#download to Static plugin where it belongs\r\n  * Changed; Request instance created before body parsing. Closes #262\r\n  * Changed; Pre-caching views in memory when \"cache view contents\" is enabled. Closes #253\r\n  * Changed; Pre-caching view partials in memory when \"cache view partials\" is enabled\r\n  * Updated support to node --version 0.1.90\r\n  * Updated dependencies\r\n  * Removed set(\"session cookie\") in favour of use(Session, { cookie: { ... }})\r\n  * Removed utils.mixin(); use Object#mergeDeep()\r\n\r\n0.8.0 / 2010-03-19\r\n==================\r\n\r\n  * Added coffeescript example app. Closes #242\r\n  * Changed; cache api now async friendly. Closes #240\r\n  * Removed deprecated 'express/static' support. Use 'express/plugins/static'\r\n\r\n0.7.6 / 2010-03-19\r\n==================\r\n\r\n  * Added Request#isXHR. Closes #229\r\n  * Added `make install` (for the executable)\r\n  * Added `express` executable for setting up simple app templates\r\n  * Added \"GET /public/*\" to Static plugin, defaulting to <root>/public\r\n  * Added Static plugin\r\n  * Fixed; Request#render() only calls cache.get() once\r\n  * Fixed; Namespacing View caches with \"view:\"\r\n  * Fixed; Namespacing Static caches with \"static:\"\r\n  * Fixed; Both example apps now use the Static plugin\r\n  * Fixed set(\"views\"). Closes #239\r\n  * Fixed missing space for combined log format\r\n  * Deprecated Request#sendfile() and 'express/static'\r\n  * Removed Server#running\r\n\r\n0.7.5 / 2010-03-16\r\n==================\r\n\r\n  * Added Request#flash() support without args, now returns all flashes\r\n  * Updated ext submodule\r\n\r\n0.7.4 / 2010-03-16\r\n==================\r\n\r\n  * Fixed session reaper\r\n  * Changed; class.js replacing js-oo Class implementation (quite a bit faster, no browser cruft)\r\n\r\n0.7.3 / 2010-03-16\r\n==================\r\n\r\n  * Added package.json\r\n  * Fixed requiring of haml / sass due to kiwi removal\r\n\r\n0.7.2 / 2010-03-16\r\n==================\r\n\r\n  * Fixed GIT submodules (HAH!)\r\n\r\n0.7.1 / 2010-03-16\r\n==================\r\n\r\n  * Changed; Express now using submodules again until a PM is adopted\r\n  * Changed; chat example using millisecond conversions from ext\r\n\r\n0.7.0 / 2010-03-15\r\n==================\r\n\r\n  * Added Request#pass() support (finds the next matching route, or the given path)\r\n  * Added Logger plugin (default \"common\" format replaces CommonLogger)\r\n  * Removed Profiler plugin\r\n  * Removed CommonLogger plugin\r\n\r\n0.6.0 / 2010-03-11\r\n==================\r\n\r\n  * Added seed.yml for kiwi package management support\r\n  * Added HTTP client query string support when method is GET. Closes #205\r\n\r\n  * Added support for arbitrary view engines.\r\n    For example \"foo.engine.html\" will now require('engine'),\r\n    the exports from this module are cached after the first require().\r\n\r\n  * Added async plugin support\r\n\r\n  * Removed usage of RESTful route funcs as http client\r\n    get() etc, use http.get() and friends\r\n\r\n  * Removed custom exceptions\r\n\r\n0.5.0 / 2010-03-10\r\n==================\r\n\r\n  * Added ext dependency (library of js extensions)\r\n  * Removed extname() / basename() utils. Use path module\r\n  * Removed toArray() util. Use arguments.values\r\n  * Removed escapeRegexp() util. Use RegExp.escape()\r\n  * Removed process.mixin() dependency. Use utils.mixin()\r\n  * Removed Collection\r\n  * Removed ElementCollection\r\n  * Shameless self promotion of ebook \"Advanced JavaScript\" (http://dev-mag.com)  ;)\r\n\r\n0.4.0 / 2010-02-11\r\n==================\r\n\r\n  * Added flash() example to sample upload app\r\n  * Added high level restful http client module (express/http)\r\n  * Changed; RESTful route functions double as HTTP clients. Closes #69\r\n  * Changed; throwing error when routes are added at runtime\r\n  * Changed; defaulting render() context to the current Request. Closes #197\r\n  * Updated haml submodule\r\n\r\n0.3.0 / 2010-02-11\r\n==================\r\n\r\n  * Updated haml / sass submodules. Closes #200\r\n  * Added flash message support. Closes #64\r\n  * Added accepts() now allows multiple args. fixes #117\r\n  * Added support for plugins to halt. Closes #189\r\n  * Added alternate layout support. Closes #119\r\n  * Removed Route#run(). Closes #188\r\n  * Fixed broken specs due to use(Cookie) missing\r\n\r\n0.2.1 / 2010-02-05\r\n==================\r\n\r\n  * Added \"plot\" format option for Profiler (for gnuplot processing)\r\n  * Added request number to Profiler plugin\r\n  * Fixed binary encoding for multipart file uploads, was previously defaulting to UTF8\r\n  * Fixed issue with routes not firing when not files are present. Closes #184\r\n  * Fixed process.Promise -> events.Promise\r\n\r\n0.2.0 / 2010-02-03\r\n==================\r\n\r\n  * Added parseParam() support for name[] etc. (allows for file inputs with \"multiple\" attr) Closes #180\r\n  * Added Both Cache and Session option \"reapInterval\" may be \"reapEvery\". Closes #174\r\n  * Added expiration support to cache api with reaper. Closes #133\r\n  * Added cache Store.Memory#reap()\r\n  * Added Cache; cache api now uses first class Cache instances\r\n  * Added abstract session Store. Closes #172\r\n  * Changed; cache Memory.Store#get() utilizing Collection\r\n  * Renamed MemoryStore -> Store.Memory\r\n  * Fixed use() of the same plugin several time will always use latest options. Closes #176\r\n\r\n0.1.0 / 2010-02-03\r\n==================\r\n\r\n  * Changed; Hooks (before / after) pass request as arg as well as evaluated in their context\r\n  * Updated node support to 0.1.27 Closes #169\r\n  * Updated dirname(__filename) -> __dirname\r\n  * Updated libxmljs support to v0.2.0\r\n  * Added session support with memory store / reaping\r\n  * Added quick uid() helper\r\n  * Added multi-part upload support\r\n  * Added Sass.js support / submodule\r\n  * Added production env caching view contents and static files\r\n  * Added static file caching. Closes #136\r\n  * Added cache plugin with memory stores\r\n  * Added support to StaticFile so that it works with non-textual files.\r\n  * Removed dirname() helper\r\n  * Removed several globals (now their modules must be required)\r\n\r\n0.0.2 / 2010-01-10\r\n==================\r\n\r\n  * Added view benchmarks; currently haml vs ejs\r\n  * Added Request#attachment() specs. Closes #116\r\n  * Added use of node's parseQuery() util. Closes #123\r\n  * Added `make init` for submodules\r\n  * Updated Haml\r\n  * Updated sample chat app to show messages on load\r\n  * Updated libxmljs parseString -> parseHtmlString\r\n  * Fixed `make init` to work with older versions of git\r\n  * Fixed specs can now run independent specs for those who can't build deps. Closes #127\r\n  * Fixed issues introduced by the node url module changes. Closes 126.\r\n  * Fixed two assertions failing due to Collection#keys() returning strings\r\n  * Fixed faulty Collection#toArray() spec due to keys() returning strings\r\n  * Fixed `make test` now builds libxmljs.node before testing\r\n\r\n0.0.1 / 2010-01-03\r\n==================\r\n\r\n  * Initial release\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/express/History.md b/backend/node_modules/express/History.md
--- a/backend/node_modules/express/History.md	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/express/History.md	(date 1710190086824)
@@ -1,3 +1,12 @@
+4.18.3 / 2024-02-26
+==========
+
+  * Fix routing requests without method
+  * deps: body-parser@1.20.2
+    - Fix strict json error message on Node.js 19+
+    - deps: content-type@~1.0.5
+    - deps: raw-body@2.5.2
+
 4.18.2 / 2022-10-08
 ===================
 
@@ -2111,7 +2120,7 @@
  * deps: connect@2.21.0
    - deprecate `connect(middleware)` -- use `app.use(middleware)` instead
    - deprecate `connect.createServer()` -- use `connect()` instead
-   - fix `res.setHeader()` patch to work with with get -> append -> set pattern
+   - fix `res.setHeader()` patch to work with get -> append -> set pattern
    - deps: compression@~1.0.8
    - deps: errorhandler@~1.1.1
    - deps: express-session@~1.5.0
@@ -3322,8 +3331,8 @@
   * Added node v0.1.97 compatibility
   * Added support for deleting cookies via Request#cookie('key', null)
   * Updated haml submodule
-  * Fixed not-found page, now using using charset utf-8
-  * Fixed show-exceptions page, now using using charset utf-8
+  * Fixed not-found page, now using charset utf-8
+  * Fixed show-exceptions page, now using charset utf-8
   * Fixed view support due to fs.readFile Buffers
   * Changed; mime.type() no longer accepts ".type" due to node extname() changes
 
@@ -3358,7 +3367,7 @@
 ==================
 
   * Added charset support via Request#charset (automatically assigned to 'UTF-8' when respond()'s
-    encoding is set to 'utf8' or 'utf-8'.
+    encoding is set to 'utf8' or 'utf-8').
   * Added "encoding" option to Request#render(). Closes #299
   * Added "dump exceptions" setting, which is enabled by default.
   * Added simple ejs template engine support
@@ -3397,7 +3406,7 @@
   * Added [haml.js](http://github.com/visionmedia/haml.js) submodule; removed haml-js
   * Added callback function support to Request#halt() as 3rd/4th arg
   * Added preprocessing of route param wildcards using param(). Closes #251
-  * Added view partial support (with collections etc)
+  * Added view partial support (with collections etc.)
   * Fixed bug preventing falsey params (such as ?page=0). Closes #286
   * Fixed setting of multiple cookies. Closes #199
   * Changed; view naming convention is now NAME.TYPE.ENGINE (for example page.html.haml)
Index: backend/node_modules/express/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"express\",\r\n  \"description\": \"Fast, unopinionated, minimalist web framework\",\r\n  \"version\": \"4.18.2\",\r\n  \"author\": \"TJ Holowaychuk <tj@vision-media.ca>\",\r\n  \"contributors\": [\r\n    \"Aaron Heckmann <aaron.heckmann+github@gmail.com>\",\r\n    \"Ciaran Jessup <ciaranj@gmail.com>\",\r\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\",\r\n    \"Guillermo Rauch <rauchg@gmail.com>\",\r\n    \"Jonathan Ong <me@jongleberry.com>\",\r\n    \"Roman Shtylman <shtylman+expressjs@gmail.com>\",\r\n    \"Young Jae Sim <hanul@hanul.me>\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"repository\": \"expressjs/express\",\r\n  \"homepage\": \"http://expressjs.com/\",\r\n  \"keywords\": [\r\n    \"express\",\r\n    \"framework\",\r\n    \"sinatra\",\r\n    \"web\",\r\n    \"http\",\r\n    \"rest\",\r\n    \"restful\",\r\n    \"router\",\r\n    \"app\",\r\n    \"api\"\r\n  ],\r\n  \"dependencies\": {\r\n    \"accepts\": \"~1.3.8\",\r\n    \"array-flatten\": \"1.1.1\",\r\n    \"body-parser\": \"1.20.1\",\r\n    \"content-disposition\": \"0.5.4\",\r\n    \"content-type\": \"~1.0.4\",\r\n    \"cookie\": \"0.5.0\",\r\n    \"cookie-signature\": \"1.0.6\",\r\n    \"debug\": \"2.6.9\",\r\n    \"depd\": \"2.0.0\",\r\n    \"encodeurl\": \"~1.0.2\",\r\n    \"escape-html\": \"~1.0.3\",\r\n    \"etag\": \"~1.8.1\",\r\n    \"finalhandler\": \"1.2.0\",\r\n    \"fresh\": \"0.5.2\",\r\n    \"http-errors\": \"2.0.0\",\r\n    \"merge-descriptors\": \"1.0.1\",\r\n    \"methods\": \"~1.1.2\",\r\n    \"on-finished\": \"2.4.1\",\r\n    \"parseurl\": \"~1.3.3\",\r\n    \"path-to-regexp\": \"0.1.7\",\r\n    \"proxy-addr\": \"~2.0.7\",\r\n    \"qs\": \"6.11.0\",\r\n    \"range-parser\": \"~1.2.1\",\r\n    \"safe-buffer\": \"5.2.1\",\r\n    \"send\": \"0.18.0\",\r\n    \"serve-static\": \"1.15.0\",\r\n    \"setprototypeof\": \"1.2.0\",\r\n    \"statuses\": \"2.0.1\",\r\n    \"type-is\": \"~1.6.18\",\r\n    \"utils-merge\": \"1.0.1\",\r\n    \"vary\": \"~1.1.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"after\": \"0.8.2\",\r\n    \"connect-redis\": \"3.4.2\",\r\n    \"cookie-parser\": \"1.4.6\",\r\n    \"cookie-session\": \"2.0.0\",\r\n    \"ejs\": \"3.1.8\",\r\n    \"eslint\": \"8.24.0\",\r\n    \"express-session\": \"1.17.2\",\r\n    \"hbs\": \"4.2.0\",\r\n    \"marked\": \"0.7.0\",\r\n    \"method-override\": \"3.0.0\",\r\n    \"mocha\": \"10.0.0\",\r\n    \"morgan\": \"1.10.0\",\r\n    \"multiparty\": \"4.2.3\",\r\n    \"nyc\": \"15.1.0\",\r\n    \"pbkdf2-password\": \"1.2.1\",\r\n    \"supertest\": \"6.3.0\",\r\n    \"vhost\": \"~3.0.2\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">= 0.10.0\"\r\n  },\r\n  \"files\": [\r\n    \"LICENSE\",\r\n    \"History.md\",\r\n    \"Readme.md\",\r\n    \"index.js\",\r\n    \"lib/\"\r\n  ],\r\n  \"scripts\": {\r\n    \"lint\": \"eslint .\",\r\n    \"test\": \"mocha --require test/support/env --reporter spec --bail --check-leaks test/ test/acceptance/\",\r\n    \"test-ci\": \"nyc --reporter=lcovonly --reporter=text npm test\",\r\n    \"test-cov\": \"nyc --reporter=html --reporter=text npm test\",\r\n    \"test-tap\": \"mocha --require test/support/env --reporter tap --check-leaks test/ test/acceptance/\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/express/package.json b/backend/node_modules/express/package.json
--- a/backend/node_modules/express/package.json	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/express/package.json	(date 1710190086797)
@@ -1,7 +1,7 @@
 {
   "name": "express",
   "description": "Fast, unopinionated, minimalist web framework",
-  "version": "4.18.2",
+  "version": "4.18.3",
   "author": "TJ Holowaychuk <tj@vision-media.ca>",
   "contributors": [
     "Aaron Heckmann <aaron.heckmann+github@gmail.com>",
@@ -30,7 +30,7 @@
   "dependencies": {
     "accepts": "~1.3.8",
     "array-flatten": "1.1.1",
-    "body-parser": "1.20.1",
+    "body-parser": "1.20.2",
     "content-disposition": "0.5.4",
     "content-type": "~1.0.4",
     "cookie": "0.5.0",
@@ -65,15 +65,14 @@
     "connect-redis": "3.4.2",
     "cookie-parser": "1.4.6",
     "cookie-session": "2.0.0",
-    "ejs": "3.1.8",
-    "eslint": "8.24.0",
+    "ejs": "3.1.9",
+    "eslint": "8.47.0",
     "express-session": "1.17.2",
     "hbs": "4.2.0",
     "marked": "0.7.0",
     "method-override": "3.0.0",
-    "mocha": "10.0.0",
+    "mocha": "10.2.0",
     "morgan": "1.10.0",
-    "multiparty": "4.2.3",
     "nyc": "15.1.0",
     "pbkdf2-password": "1.2.1",
     "supertest": "6.3.0",
Index: backend/node_modules/express/Readme.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[![Express Logo](https://i.cloudup.com/zfY6lL7eFa-3000x3000.png)](http://expressjs.com/)\r\n\r\n  Fast, unopinionated, minimalist web framework for [Node.js](http://nodejs.org).\r\n\r\n  [![NPM Version][npm-version-image]][npm-url]\r\n  [![NPM Install Size][npm-install-size-image]][npm-install-size-url]\r\n  [![NPM Downloads][npm-downloads-image]][npm-downloads-url]\r\n\r\n```js\r\nconst express = require('express')\r\nconst app = express()\r\n\r\napp.get('/', function (req, res) {\r\n  res.send('Hello World')\r\n})\r\n\r\napp.listen(3000)\r\n```\r\n\r\n## Installation\r\n\r\nThis is a [Node.js](https://nodejs.org/en/) module available through the\r\n[npm registry](https://www.npmjs.com/).\r\n\r\nBefore installing, [download and install Node.js](https://nodejs.org/en/download/).\r\nNode.js 0.10 or higher is required.\r\n\r\nIf this is a brand new project, make sure to create a `package.json` first with\r\nthe [`npm init` command](https://docs.npmjs.com/creating-a-package-json-file).\r\n\r\nInstallation is done using the\r\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\r\n\r\n```console\r\n$ npm install express\r\n```\r\n\r\nFollow [our installing guide](http://expressjs.com/en/starter/installing.html)\r\nfor more information.\r\n\r\n## Features\r\n\r\n  * Robust routing\r\n  * Focus on high performance\r\n  * Super-high test coverage\r\n  * HTTP helpers (redirection, caching, etc)\r\n  * View system supporting 14+ template engines\r\n  * Content negotiation\r\n  * Executable for generating applications quickly\r\n\r\n## Docs & Community\r\n\r\n  * [Website and Documentation](http://expressjs.com/) - [[website repo](https://github.com/expressjs/expressjs.com)]\r\n  * [#express](https://web.libera.chat/#express) on [Libera Chat](https://libera.chat) IRC\r\n  * [GitHub Organization](https://github.com/expressjs) for Official Middleware & Modules\r\n  * Visit the [Wiki](https://github.com/expressjs/express/wiki)\r\n  * [Google Group](https://groups.google.com/group/express-js) for discussion\r\n  * [Gitter](https://gitter.im/expressjs/express) for support and discussion\r\n\r\n**PROTIP** Be sure to read [Migrating from 3.x to 4.x](https://github.com/expressjs/express/wiki/Migrating-from-3.x-to-4.x) as well as [New features in 4.x](https://github.com/expressjs/express/wiki/New-features-in-4.x).\r\n\r\n## Quick Start\r\n\r\n  The quickest way to get started with express is to utilize the executable [`express(1)`](https://github.com/expressjs/generator) to generate an application as shown below:\r\n\r\n  Install the executable. The executable's major version will match Express's:\r\n\r\n```console\r\n$ npm install -g express-generator@4\r\n```\r\n\r\n  Create the app:\r\n\r\n```console\r\n$ express /tmp/foo && cd /tmp/foo\r\n```\r\n\r\n  Install dependencies:\r\n\r\n```console\r\n$ npm install\r\n```\r\n\r\n  Start the server:\r\n\r\n```console\r\n$ npm start\r\n```\r\n\r\n  View the website at: http://localhost:3000\r\n\r\n## Philosophy\r\n\r\n  The Express philosophy is to provide small, robust tooling for HTTP servers, making\r\n  it a great solution for single page applications, websites, hybrids, or public\r\n  HTTP APIs.\r\n\r\n  Express does not force you to use any specific ORM or template engine. With support for over\r\n  14 template engines via [Consolidate.js](https://github.com/tj/consolidate.js),\r\n  you can quickly craft your perfect framework.\r\n\r\n## Examples\r\n\r\n  To view the examples, clone the Express repo and install the dependencies:\r\n\r\n```console\r\n$ git clone git://github.com/expressjs/express.git --depth 1\r\n$ cd express\r\n$ npm install\r\n```\r\n\r\n  Then run whichever example you want:\r\n\r\n```console\r\n$ node examples/content-negotiation\r\n```\r\n\r\n## Contributing\r\n\r\n  [![Linux Build][github-actions-ci-image]][github-actions-ci-url]\r\n  [![Windows Build][appveyor-image]][appveyor-url]\r\n  [![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\nThe Express.js project welcomes all constructive contributions. Contributions take many forms,\r\nfrom code for bug fixes and enhancements, to additions and fixes to documentation, additional\r\ntests, triaging incoming pull requests and issues, and more!\r\n\r\nSee the [Contributing Guide](Contributing.md) for more technical details on contributing.\r\n\r\n### Security Issues\r\n\r\nIf you discover a security vulnerability in Express, please see [Security Policies and Procedures](Security.md).\r\n\r\n### Running Tests\r\n\r\nTo run the test suite, first install the dependencies, then run `npm test`:\r\n\r\n```console\r\n$ npm install\r\n$ npm test\r\n```\r\n\r\n## People\r\n\r\nThe original author of Express is [TJ Holowaychuk](https://github.com/tj)\r\n\r\nThe current lead maintainer is [Douglas Christopher Wilson](https://github.com/dougwilson)\r\n\r\n[List of all contributors](https://github.com/expressjs/express/graphs/contributors)\r\n\r\n## License\r\n\r\n  [MIT](LICENSE)\r\n\r\n[appveyor-image]: https://badgen.net/appveyor/ci/dougwilson/express/master?label=windows\r\n[appveyor-url]: https://ci.appveyor.com/project/dougwilson/express\r\n[coveralls-image]: https://badgen.net/coveralls/c/github/expressjs/express/master\r\n[coveralls-url]: https://coveralls.io/r/expressjs/express?branch=master\r\n[github-actions-ci-image]: https://badgen.net/github/checks/expressjs/express/master?label=linux\r\n[github-actions-ci-url]: https://github.com/expressjs/express/actions/workflows/ci.yml\r\n[npm-downloads-image]: https://badgen.net/npm/dm/express\r\n[npm-downloads-url]: https://npmcharts.com/compare/express?minimal=true\r\n[npm-install-size-image]: https://badgen.net/packagephobia/install/express\r\n[npm-install-size-url]: https://packagephobia.com/result?p=express\r\n[npm-url]: https://npmjs.org/package/express\r\n[npm-version-image]: https://badgen.net/npm/v/express\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/express/Readme.md b/backend/node_modules/express/Readme.md
--- a/backend/node_modules/express/Readme.md	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/express/Readme.md	(date 1710190086830)
@@ -104,7 +104,7 @@
   To view the examples, clone the Express repo and install the dependencies:
 
 ```console
-$ git clone git://github.com/expressjs/express.git --depth 1
+$ git clone https://github.com/expressjs/express.git --depth 1
 $ cd express
 $ npm install
 ```
Index: backend/node_modules/express/lib/router/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar Route = require('./route');\r\nvar Layer = require('./layer');\r\nvar methods = require('methods');\r\nvar mixin = require('utils-merge');\r\nvar debug = require('debug')('express:router');\r\nvar deprecate = require('depd')('express');\r\nvar flatten = require('array-flatten');\r\nvar parseUrl = require('parseurl');\r\nvar setPrototypeOf = require('setprototypeof')\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar objectRegExp = /^\\[object (\\S+)\\]$/;\r\nvar slice = Array.prototype.slice;\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Initialize a new `Router` with the given `options`.\r\n *\r\n * @param {Object} [options]\r\n * @return {Router} which is an callable function\r\n * @public\r\n */\r\n\r\nvar proto = module.exports = function(options) {\r\n  var opts = options || {};\r\n\r\n  function router(req, res, next) {\r\n    router.handle(req, res, next);\r\n  }\r\n\r\n  // mixin Router class functions\r\n  setPrototypeOf(router, proto)\r\n\r\n  router.params = {};\r\n  router._params = [];\r\n  router.caseSensitive = opts.caseSensitive;\r\n  router.mergeParams = opts.mergeParams;\r\n  router.strict = opts.strict;\r\n  router.stack = [];\r\n\r\n  return router;\r\n};\r\n\r\n/**\r\n * Map the given param placeholder `name`(s) to the given callback.\r\n *\r\n * Parameter mapping is used to provide pre-conditions to routes\r\n * which use normalized placeholders. For example a _:user_id_ parameter\r\n * could automatically load a user's information from the database without\r\n * any additional code,\r\n *\r\n * The callback uses the same signature as middleware, the only difference\r\n * being that the value of the placeholder is passed, in this case the _id_\r\n * of the user. Once the `next()` function is invoked, just like middleware\r\n * it will continue on to execute the route, or subsequent parameter functions.\r\n *\r\n * Just like in middleware, you must either respond to the request or call next\r\n * to avoid stalling the request.\r\n *\r\n *  app.param('user_id', function(req, res, next, id){\r\n *    User.find(id, function(err, user){\r\n *      if (err) {\r\n *        return next(err);\r\n *      } else if (!user) {\r\n *        return next(new Error('failed to load user'));\r\n *      }\r\n *      req.user = user;\r\n *      next();\r\n *    });\r\n *  });\r\n *\r\n * @param {String} name\r\n * @param {Function} fn\r\n * @return {app} for chaining\r\n * @public\r\n */\r\n\r\nproto.param = function param(name, fn) {\r\n  // param logic\r\n  if (typeof name === 'function') {\r\n    deprecate('router.param(fn): Refactor to use path params');\r\n    this._params.push(name);\r\n    return;\r\n  }\r\n\r\n  // apply param functions\r\n  var params = this._params;\r\n  var len = params.length;\r\n  var ret;\r\n\r\n  if (name[0] === ':') {\r\n    deprecate('router.param(' + JSON.stringify(name) + ', fn): Use router.param(' + JSON.stringify(name.slice(1)) + ', fn) instead')\r\n    name = name.slice(1)\r\n  }\r\n\r\n  for (var i = 0; i < len; ++i) {\r\n    if (ret = params[i](name, fn)) {\r\n      fn = ret;\r\n    }\r\n  }\r\n\r\n  // ensure we end up with a\r\n  // middleware function\r\n  if ('function' !== typeof fn) {\r\n    throw new Error('invalid param() call for ' + name + ', got ' + fn);\r\n  }\r\n\r\n  (this.params[name] = this.params[name] || []).push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Dispatch a req, res into the router.\r\n * @private\r\n */\r\n\r\nproto.handle = function handle(req, res, out) {\r\n  var self = this;\r\n\r\n  debug('dispatching %s %s', req.method, req.url);\r\n\r\n  var idx = 0;\r\n  var protohost = getProtohost(req.url) || ''\r\n  var removed = '';\r\n  var slashAdded = false;\r\n  var sync = 0\r\n  var paramcalled = {};\r\n\r\n  // store options for OPTIONS request\r\n  // only used if OPTIONS request\r\n  var options = [];\r\n\r\n  // middleware and routes\r\n  var stack = self.stack;\r\n\r\n  // manage inter-router variables\r\n  var parentParams = req.params;\r\n  var parentUrl = req.baseUrl || '';\r\n  var done = restore(out, req, 'baseUrl', 'next', 'params');\r\n\r\n  // setup next layer\r\n  req.next = next;\r\n\r\n  // for options requests, respond with a default if nothing else responds\r\n  if (req.method === 'OPTIONS') {\r\n    done = wrap(done, function(old, err) {\r\n      if (err || options.length === 0) return old(err);\r\n      sendOptionsResponse(res, options, old);\r\n    });\r\n  }\r\n\r\n  // setup basic req values\r\n  req.baseUrl = parentUrl;\r\n  req.originalUrl = req.originalUrl || req.url;\r\n\r\n  next();\r\n\r\n  function next(err) {\r\n    var layerError = err === 'route'\r\n      ? null\r\n      : err;\r\n\r\n    // remove added slash\r\n    if (slashAdded) {\r\n      req.url = req.url.slice(1)\r\n      slashAdded = false;\r\n    }\r\n\r\n    // restore altered req.url\r\n    if (removed.length !== 0) {\r\n      req.baseUrl = parentUrl;\r\n      req.url = protohost + removed + req.url.slice(protohost.length)\r\n      removed = '';\r\n    }\r\n\r\n    // signal to exit router\r\n    if (layerError === 'router') {\r\n      setImmediate(done, null)\r\n      return\r\n    }\r\n\r\n    // no more matching layers\r\n    if (idx >= stack.length) {\r\n      setImmediate(done, layerError);\r\n      return;\r\n    }\r\n\r\n    // max sync stack\r\n    if (++sync > 100) {\r\n      return setImmediate(next, err)\r\n    }\r\n\r\n    // get pathname of request\r\n    var path = getPathname(req);\r\n\r\n    if (path == null) {\r\n      return done(layerError);\r\n    }\r\n\r\n    // find next matching layer\r\n    var layer;\r\n    var match;\r\n    var route;\r\n\r\n    while (match !== true && idx < stack.length) {\r\n      layer = stack[idx++];\r\n      match = matchLayer(layer, path);\r\n      route = layer.route;\r\n\r\n      if (typeof match !== 'boolean') {\r\n        // hold on to layerError\r\n        layerError = layerError || match;\r\n      }\r\n\r\n      if (match !== true) {\r\n        continue;\r\n      }\r\n\r\n      if (!route) {\r\n        // process non-route handlers normally\r\n        continue;\r\n      }\r\n\r\n      if (layerError) {\r\n        // routes do not match with a pending error\r\n        match = false;\r\n        continue;\r\n      }\r\n\r\n      var method = req.method;\r\n      var has_method = route._handles_method(method);\r\n\r\n      // build up automatic options response\r\n      if (!has_method && method === 'OPTIONS') {\r\n        appendMethods(options, route._options());\r\n      }\r\n\r\n      // don't even bother matching route\r\n      if (!has_method && method !== 'HEAD') {\r\n        match = false;\r\n      }\r\n    }\r\n\r\n    // no match\r\n    if (match !== true) {\r\n      return done(layerError);\r\n    }\r\n\r\n    // store route for dispatch on change\r\n    if (route) {\r\n      req.route = route;\r\n    }\r\n\r\n    // Capture one-time layer values\r\n    req.params = self.mergeParams\r\n      ? mergeParams(layer.params, parentParams)\r\n      : layer.params;\r\n    var layerPath = layer.path;\r\n\r\n    // this should be done for the layer\r\n    self.process_params(layer, paramcalled, req, res, function (err) {\r\n      if (err) {\r\n        next(layerError || err)\r\n      } else if (route) {\r\n        layer.handle_request(req, res, next)\r\n      } else {\r\n        trim_prefix(layer, layerError, layerPath, path)\r\n      }\r\n\r\n      sync = 0\r\n    });\r\n  }\r\n\r\n  function trim_prefix(layer, layerError, layerPath, path) {\r\n    if (layerPath.length !== 0) {\r\n      // Validate path is a prefix match\r\n      if (layerPath !== path.slice(0, layerPath.length)) {\r\n        next(layerError)\r\n        return\r\n      }\r\n\r\n      // Validate path breaks on a path separator\r\n      var c = path[layerPath.length]\r\n      if (c && c !== '/' && c !== '.') return next(layerError)\r\n\r\n      // Trim off the part of the url that matches the route\r\n      // middleware (.use stuff) needs to have the path stripped\r\n      debug('trim prefix (%s) from url %s', layerPath, req.url);\r\n      removed = layerPath;\r\n      req.url = protohost + req.url.slice(protohost.length + removed.length)\r\n\r\n      // Ensure leading slash\r\n      if (!protohost && req.url[0] !== '/') {\r\n        req.url = '/' + req.url;\r\n        slashAdded = true;\r\n      }\r\n\r\n      // Setup base URL (no trailing slash)\r\n      req.baseUrl = parentUrl + (removed[removed.length - 1] === '/'\r\n        ? removed.substring(0, removed.length - 1)\r\n        : removed);\r\n    }\r\n\r\n    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);\r\n\r\n    if (layerError) {\r\n      layer.handle_error(layerError, req, res, next);\r\n    } else {\r\n      layer.handle_request(req, res, next);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Process any parameters for the layer.\r\n * @private\r\n */\r\n\r\nproto.process_params = function process_params(layer, called, req, res, done) {\r\n  var params = this.params;\r\n\r\n  // captured parameters from the layer, keys and values\r\n  var keys = layer.keys;\r\n\r\n  // fast track\r\n  if (!keys || keys.length === 0) {\r\n    return done();\r\n  }\r\n\r\n  var i = 0;\r\n  var name;\r\n  var paramIndex = 0;\r\n  var key;\r\n  var paramVal;\r\n  var paramCallbacks;\r\n  var paramCalled;\r\n\r\n  // process params in order\r\n  // param callbacks can be async\r\n  function param(err) {\r\n    if (err) {\r\n      return done(err);\r\n    }\r\n\r\n    if (i >= keys.length ) {\r\n      return done();\r\n    }\r\n\r\n    paramIndex = 0;\r\n    key = keys[i++];\r\n    name = key.name;\r\n    paramVal = req.params[name];\r\n    paramCallbacks = params[name];\r\n    paramCalled = called[name];\r\n\r\n    if (paramVal === undefined || !paramCallbacks) {\r\n      return param();\r\n    }\r\n\r\n    // param previously called with same value or error occurred\r\n    if (paramCalled && (paramCalled.match === paramVal\r\n      || (paramCalled.error && paramCalled.error !== 'route'))) {\r\n      // restore value\r\n      req.params[name] = paramCalled.value;\r\n\r\n      // next param\r\n      return param(paramCalled.error);\r\n    }\r\n\r\n    called[name] = paramCalled = {\r\n      error: null,\r\n      match: paramVal,\r\n      value: paramVal\r\n    };\r\n\r\n    paramCallback();\r\n  }\r\n\r\n  // single param callbacks\r\n  function paramCallback(err) {\r\n    var fn = paramCallbacks[paramIndex++];\r\n\r\n    // store updated value\r\n    paramCalled.value = req.params[key.name];\r\n\r\n    if (err) {\r\n      // store error\r\n      paramCalled.error = err;\r\n      param(err);\r\n      return;\r\n    }\r\n\r\n    if (!fn) return param();\r\n\r\n    try {\r\n      fn(req, res, paramCallback, paramVal, key.name);\r\n    } catch (e) {\r\n      paramCallback(e);\r\n    }\r\n  }\r\n\r\n  param();\r\n};\r\n\r\n/**\r\n * Use the given middleware function, with optional path, defaulting to \"/\".\r\n *\r\n * Use (like `.all`) will run for any http METHOD, but it will not add\r\n * handlers for those methods so OPTIONS requests will not consider `.use`\r\n * functions even if they could respond.\r\n *\r\n * The other difference is that _route_ path is stripped and not visible\r\n * to the handler function. The main effect of this feature is that mounted\r\n * handlers can operate without any code changes regardless of the \"prefix\"\r\n * pathname.\r\n *\r\n * @public\r\n */\r\n\r\nproto.use = function use(fn) {\r\n  var offset = 0;\r\n  var path = '/';\r\n\r\n  // default path to '/'\r\n  // disambiguate router.use([fn])\r\n  if (typeof fn !== 'function') {\r\n    var arg = fn;\r\n\r\n    while (Array.isArray(arg) && arg.length !== 0) {\r\n      arg = arg[0];\r\n    }\r\n\r\n    // first arg is the path\r\n    if (typeof arg !== 'function') {\r\n      offset = 1;\r\n      path = fn;\r\n    }\r\n  }\r\n\r\n  var callbacks = flatten(slice.call(arguments, offset));\r\n\r\n  if (callbacks.length === 0) {\r\n    throw new TypeError('Router.use() requires a middleware function')\r\n  }\r\n\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    var fn = callbacks[i];\r\n\r\n    if (typeof fn !== 'function') {\r\n      throw new TypeError('Router.use() requires a middleware function but got a ' + gettype(fn))\r\n    }\r\n\r\n    // add the middleware\r\n    debug('use %o %s', path, fn.name || '<anonymous>')\r\n\r\n    var layer = new Layer(path, {\r\n      sensitive: this.caseSensitive,\r\n      strict: false,\r\n      end: false\r\n    }, fn);\r\n\r\n    layer.route = undefined;\r\n\r\n    this.stack.push(layer);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Create a new Route for the given path.\r\n *\r\n * Each route contains a separate middleware stack and VERB handlers.\r\n *\r\n * See the Route api documentation for details on adding handlers\r\n * and middleware to routes.\r\n *\r\n * @param {String} path\r\n * @return {Route}\r\n * @public\r\n */\r\n\r\nproto.route = function route(path) {\r\n  var route = new Route(path);\r\n\r\n  var layer = new Layer(path, {\r\n    sensitive: this.caseSensitive,\r\n    strict: this.strict,\r\n    end: true\r\n  }, route.dispatch.bind(route));\r\n\r\n  layer.route = route;\r\n\r\n  this.stack.push(layer);\r\n  return route;\r\n};\r\n\r\n// create Router#VERB functions\r\nmethods.concat('all').forEach(function(method){\r\n  proto[method] = function(path){\r\n    var route = this.route(path)\r\n    route[method].apply(route, slice.call(arguments, 1));\r\n    return this;\r\n  };\r\n});\r\n\r\n// append methods to a list of methods\r\nfunction appendMethods(list, addition) {\r\n  for (var i = 0; i < addition.length; i++) {\r\n    var method = addition[i];\r\n    if (list.indexOf(method) === -1) {\r\n      list.push(method);\r\n    }\r\n  }\r\n}\r\n\r\n// get pathname of request\r\nfunction getPathname(req) {\r\n  try {\r\n    return parseUrl(req).pathname;\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n}\r\n\r\n// Get get protocol + host for a URL\r\nfunction getProtohost(url) {\r\n  if (typeof url !== 'string' || url.length === 0 || url[0] === '/') {\r\n    return undefined\r\n  }\r\n\r\n  var searchIndex = url.indexOf('?')\r\n  var pathLength = searchIndex !== -1\r\n    ? searchIndex\r\n    : url.length\r\n  var fqdnIndex = url.slice(0, pathLength).indexOf('://')\r\n\r\n  return fqdnIndex !== -1\r\n    ? url.substring(0, url.indexOf('/', 3 + fqdnIndex))\r\n    : undefined\r\n}\r\n\r\n// get type for error message\r\nfunction gettype(obj) {\r\n  var type = typeof obj;\r\n\r\n  if (type !== 'object') {\r\n    return type;\r\n  }\r\n\r\n  // inspect [[Class]] for objects\r\n  return toString.call(obj)\r\n    .replace(objectRegExp, '$1');\r\n}\r\n\r\n/**\r\n * Match path to a layer.\r\n *\r\n * @param {Layer} layer\r\n * @param {string} path\r\n * @private\r\n */\r\n\r\nfunction matchLayer(layer, path) {\r\n  try {\r\n    return layer.match(path);\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n}\r\n\r\n// merge params with parent params\r\nfunction mergeParams(params, parent) {\r\n  if (typeof parent !== 'object' || !parent) {\r\n    return params;\r\n  }\r\n\r\n  // make copy of parent for base\r\n  var obj = mixin({}, parent);\r\n\r\n  // simple non-numeric merging\r\n  if (!(0 in params) || !(0 in parent)) {\r\n    return mixin(obj, params);\r\n  }\r\n\r\n  var i = 0;\r\n  var o = 0;\r\n\r\n  // determine numeric gaps\r\n  while (i in params) {\r\n    i++;\r\n  }\r\n\r\n  while (o in parent) {\r\n    o++;\r\n  }\r\n\r\n  // offset numeric indices in params before merge\r\n  for (i--; i >= 0; i--) {\r\n    params[i + o] = params[i];\r\n\r\n    // create holes for the merge when necessary\r\n    if (i < o) {\r\n      delete params[i];\r\n    }\r\n  }\r\n\r\n  return mixin(obj, params);\r\n}\r\n\r\n// restore obj props after function\r\nfunction restore(fn, obj) {\r\n  var props = new Array(arguments.length - 2);\r\n  var vals = new Array(arguments.length - 2);\r\n\r\n  for (var i = 0; i < props.length; i++) {\r\n    props[i] = arguments[i + 2];\r\n    vals[i] = obj[props[i]];\r\n  }\r\n\r\n  return function () {\r\n    // restore vals\r\n    for (var i = 0; i < props.length; i++) {\r\n      obj[props[i]] = vals[i];\r\n    }\r\n\r\n    return fn.apply(this, arguments);\r\n  };\r\n}\r\n\r\n// send an OPTIONS response\r\nfunction sendOptionsResponse(res, options, next) {\r\n  try {\r\n    var body = options.join(',');\r\n    res.set('Allow', body);\r\n    res.send(body);\r\n  } catch (err) {\r\n    next(err);\r\n  }\r\n}\r\n\r\n// wrap a function\r\nfunction wrap(old, fn) {\r\n  return function proxy() {\r\n    var args = new Array(arguments.length + 1);\r\n\r\n    args[0] = old;\r\n    for (var i = 0, len = arguments.length; i < len; i++) {\r\n      args[i + 1] = arguments[i];\r\n    }\r\n\r\n    fn.apply(this, args);\r\n  };\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/express/lib/router/index.js b/backend/node_modules/express/lib/router/index.js
--- a/backend/node_modules/express/lib/router/index.js	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/express/lib/router/index.js	(date 1710190086742)
@@ -36,7 +36,7 @@
  * Initialize a new `Router` with the given `options`.
  *
  * @param {Object} [options]
- * @return {Router} which is an callable function
+ * @return {Router} which is a callable function
  * @public
  */
 
Index: frontend/node_modules/.cache/.eslintcache
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[{\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\index.js\":\"1\",\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\App.js\":\"2\",\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\reportWebVitals.js\":\"3\",\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\components\\\\MyAccount.js\":\"4\",\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\components\\\\Main.js\":\"5\",\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\components\\\\Navigate.js\":\"6\",\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\components\\\\Footer.js\":\"7\",\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\components\\\\Service.js\":\"8\",\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\components\\\\Stock.js\":\"9\"},{\"size\":552,\"mtime\":1709787905585,\"results\":\"10\",\"hashOfConfig\":\"11\"},{\"size\":523,\"mtime\":1709787905578,\"results\":\"12\",\"hashOfConfig\":\"11\"},{\"size\":375,\"mtime\":1709787905586,\"results\":\"13\",\"hashOfConfig\":\"11\"},{\"size\":1046,\"mtime\":1709848071318,\"results\":\"14\",\"hashOfConfig\":\"11\"},{\"size\":500,\"mtime\":1709787905580,\"results\":\"15\",\"hashOfConfig\":\"11\"},{\"size\":432,\"mtime\":1709787905582,\"results\":\"16\",\"hashOfConfig\":\"11\"},{\"size\":421,\"mtime\":1709787905580,\"results\":\"17\",\"hashOfConfig\":\"11\"},{\"size\":3761,\"mtime\":1709787905583,\"results\":\"18\",\"hashOfConfig\":\"11\"},{\"size\":1853,\"mtime\":1709787905584,\"results\":\"19\",\"hashOfConfig\":\"11\"},{\"filePath\":\"20\",\"messages\":\"21\",\"suppressedMessages\":\"22\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},\"1jgqqu1\",{\"filePath\":\"23\",\"messages\":\"24\",\"suppressedMessages\":\"25\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"26\",\"messages\":\"27\",\"suppressedMessages\":\"28\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"29\",\"messages\":\"30\",\"suppressedMessages\":\"31\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"32\",\"messages\":\"33\",\"suppressedMessages\":\"34\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"35\",\"messages\":\"36\",\"suppressedMessages\":\"37\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"38\",\"messages\":\"39\",\"suppressedMessages\":\"40\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},{\"filePath\":\"41\",\"messages\":\"42\",\"suppressedMessages\":\"43\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":1,\"fixableErrorCount\":0,\"fixableWarningCount\":0,\"source\":null},{\"filePath\":\"44\",\"messages\":\"45\",\"suppressedMessages\":\"46\",\"errorCount\":0,\"fatalErrorCount\":0,\"warningCount\":0,\"fixableErrorCount\":0,\"fixableWarningCount\":0},\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\index.js\",[],[],\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\App.js\",[],[],\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\reportWebVitals.js\",[],[],\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\components\\\\MyAccount.js\",[],[],\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\components\\\\Main.js\",[],[],\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\components\\\\Navigate.js\",[],[],\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\components\\\\Footer.js\",[],[],\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\components\\\\Service.js\",[\"47\"],[],\"C:\\\\Users\\\\cbsli\\\\WebstormProjects\\\\460Stonks\\\\frontend\\\\src\\\\components\\\\Stock.js\",[],[],{\"ruleId\":\"48\",\"severity\":1,\"message\":\"49\",\"line\":8,\"column\":11,\"nodeType\":\"50\",\"messageId\":\"51\",\"endLine\":8,\"endColumn\":28},\"no-unused-vars\",\"'handleInputChange' is assigned a value but never used.\",\"Identifier\",\"unusedVar\"]
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/node_modules/.cache/.eslintcache b/frontend/node_modules/.cache/.eslintcache
--- a/frontend/node_modules/.cache/.eslintcache	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/frontend/node_modules/.cache/.eslintcache	(date 1710199046122)
@@ -1,1 +1,1 @@
-[{"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\index.js":"1","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\App.js":"2","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\MyAccount.js":"4","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Main.js":"5","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Navigate.js":"6","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Service.js":"8","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Stock.js":"9"},{"size":552,"mtime":1709787905585,"results":"10","hashOfConfig":"11"},{"size":523,"mtime":1709787905578,"results":"12","hashOfConfig":"11"},{"size":375,"mtime":1709787905586,"results":"13","hashOfConfig":"11"},{"size":1046,"mtime":1709848071318,"results":"14","hashOfConfig":"11"},{"size":500,"mtime":1709787905580,"results":"15","hashOfConfig":"11"},{"size":432,"mtime":1709787905582,"results":"16","hashOfConfig":"11"},{"size":421,"mtime":1709787905580,"results":"17","hashOfConfig":"11"},{"size":3761,"mtime":1709787905583,"results":"18","hashOfConfig":"11"},{"size":1853,"mtime":1709787905584,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jgqqu1",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\index.js",[],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\App.js",[],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\MyAccount.js",[],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Main.js",[],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Navigate.js",[],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Footer.js",[],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Service.js",["47"],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Stock.js",[],[],{"ruleId":"48","severity":1,"message":"49","line":8,"column":11,"nodeType":"50","messageId":"51","endLine":8,"endColumn":28},"no-unused-vars","'handleInputChange' is assigned a value but never used.","Identifier","unusedVar"]
\ No newline at end of file
+[{"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\index.js":"1","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\App.js":"2","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\MyAccount.js":"4","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Main.js":"5","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Navigate.js":"6","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Footer.js":"7","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Service.js":"8","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Stock.js":"9","C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\MyStocks.js":"10"},{"size":552,"mtime":1709787905585,"results":"11","hashOfConfig":"12"},{"size":523,"mtime":1709787905578,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1709787905586,"results":"14","hashOfConfig":"12"},{"size":1660,"mtime":1710193878840,"results":"15","hashOfConfig":"12"},{"size":574,"mtime":1710197589831,"results":"16","hashOfConfig":"12"},{"size":432,"mtime":1709787905582,"results":"17","hashOfConfig":"12"},{"size":421,"mtime":1709787905580,"results":"18","hashOfConfig":"12"},{"size":5986,"mtime":1710199045969,"results":"19","hashOfConfig":"12"},{"size":1853,"mtime":1709787905584,"results":"20","hashOfConfig":"12"},{"size":2440,"mtime":1710197914879,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jgqqu1",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\index.js",[],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\App.js",[],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\MyAccount.js",["52","53","54"],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Main.js",[],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Navigate.js",[],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Footer.js",[],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Service.js",["55","56","57","58"],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\Stock.js",[],[],"C:\\Users\\cbsli\\WebstormProjects\\460Stonks\\frontend\\src\\components\\MyStocks.js",[],[],{"ruleId":"59","severity":1,"message":"60","line":3,"column":27,"nodeType":"61","messageId":"62","endLine":3,"endColumn":36},{"ruleId":"59","severity":1,"message":"63","line":10,"column":19,"nodeType":"61","messageId":"62","endLine":10,"endColumn":27},{"ruleId":"59","severity":1,"message":"64","line":19,"column":18,"nodeType":"61","messageId":"62","endLine":19,"endColumn":24},{"ruleId":"59","severity":1,"message":"65","line":8,"column":11,"nodeType":"61","messageId":"62","endLine":8,"endColumn":28},{"ruleId":"59","severity":1,"message":"66","line":14,"column":12,"nodeType":"61","messageId":"62","endLine":14,"endColumn":23},{"ruleId":"59","severity":1,"message":"67","line":82,"column":23,"nodeType":"61","messageId":"62","endLine":82,"endColumn":34},{"ruleId":"59","severity":1,"message":"68","line":84,"column":23,"nodeType":"61","messageId":"62","endLine":84,"endColumn":35},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'setAcc' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'validSymbol' is assigned a value but never used.","'stockSymbol' is assigned a value but never used.","'currentPrice' is assigned a value but never used."]
\ No newline at end of file
Index: backend/node_modules/express/lib/router/route.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2013 Roman Shtylman\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar debug = require('debug')('express:router:route');\r\nvar flatten = require('array-flatten');\r\nvar Layer = require('./layer');\r\nvar methods = require('methods');\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar slice = Array.prototype.slice;\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = Route;\r\n\r\n/**\r\n * Initialize `Route` with the given `path`,\r\n *\r\n * @param {String} path\r\n * @public\r\n */\r\n\r\nfunction Route(path) {\r\n  this.path = path;\r\n  this.stack = [];\r\n\r\n  debug('new %o', path)\r\n\r\n  // route handlers for various http methods\r\n  this.methods = {};\r\n}\r\n\r\n/**\r\n * Determine if the route handles a given method.\r\n * @private\r\n */\r\n\r\nRoute.prototype._handles_method = function _handles_method(method) {\r\n  if (this.methods._all) {\r\n    return true;\r\n  }\r\n\r\n  var name = method.toLowerCase();\r\n\r\n  if (name === 'head' && !this.methods['head']) {\r\n    name = 'get';\r\n  }\r\n\r\n  return Boolean(this.methods[name]);\r\n};\r\n\r\n/**\r\n * @return {Array} supported HTTP methods\r\n * @private\r\n */\r\n\r\nRoute.prototype._options = function _options() {\r\n  var methods = Object.keys(this.methods);\r\n\r\n  // append automatic head\r\n  if (this.methods.get && !this.methods.head) {\r\n    methods.push('head');\r\n  }\r\n\r\n  for (var i = 0; i < methods.length; i++) {\r\n    // make upper case\r\n    methods[i] = methods[i].toUpperCase();\r\n  }\r\n\r\n  return methods;\r\n};\r\n\r\n/**\r\n * dispatch req, res into this route\r\n * @private\r\n */\r\n\r\nRoute.prototype.dispatch = function dispatch(req, res, done) {\r\n  var idx = 0;\r\n  var stack = this.stack;\r\n  var sync = 0\r\n\r\n  if (stack.length === 0) {\r\n    return done();\r\n  }\r\n\r\n  var method = req.method.toLowerCase();\r\n  if (method === 'head' && !this.methods['head']) {\r\n    method = 'get';\r\n  }\r\n\r\n  req.route = this;\r\n\r\n  next();\r\n\r\n  function next(err) {\r\n    // signal to exit route\r\n    if (err && err === 'route') {\r\n      return done();\r\n    }\r\n\r\n    // signal to exit router\r\n    if (err && err === 'router') {\r\n      return done(err)\r\n    }\r\n\r\n    // max sync stack\r\n    if (++sync > 100) {\r\n      return setImmediate(next, err)\r\n    }\r\n\r\n    var layer = stack[idx++]\r\n\r\n    // end of layers\r\n    if (!layer) {\r\n      return done(err)\r\n    }\r\n\r\n    if (layer.method && layer.method !== method) {\r\n      next(err)\r\n    } else if (err) {\r\n      layer.handle_error(err, req, res, next);\r\n    } else {\r\n      layer.handle_request(req, res, next);\r\n    }\r\n\r\n    sync = 0\r\n  }\r\n};\r\n\r\n/**\r\n * Add a handler for all HTTP verbs to this route.\r\n *\r\n * Behaves just like middleware and can respond or call `next`\r\n * to continue processing.\r\n *\r\n * You can use multiple `.all` call to add multiple handlers.\r\n *\r\n *   function check_something(req, res, next){\r\n *     next();\r\n *   };\r\n *\r\n *   function validate_user(req, res, next){\r\n *     next();\r\n *   };\r\n *\r\n *   route\r\n *   .all(validate_user)\r\n *   .all(check_something)\r\n *   .get(function(req, res, next){\r\n *     res.send('hello world');\r\n *   });\r\n *\r\n * @param {function} handler\r\n * @return {Route} for chaining\r\n * @api public\r\n */\r\n\r\nRoute.prototype.all = function all() {\r\n  var handles = flatten(slice.call(arguments));\r\n\r\n  for (var i = 0; i < handles.length; i++) {\r\n    var handle = handles[i];\r\n\r\n    if (typeof handle !== 'function') {\r\n      var type = toString.call(handle);\r\n      var msg = 'Route.all() requires a callback function but got a ' + type\r\n      throw new TypeError(msg);\r\n    }\r\n\r\n    var layer = Layer('/', {}, handle);\r\n    layer.method = undefined;\r\n\r\n    this.methods._all = true;\r\n    this.stack.push(layer);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nmethods.forEach(function(method){\r\n  Route.prototype[method] = function(){\r\n    var handles = flatten(slice.call(arguments));\r\n\r\n    for (var i = 0; i < handles.length; i++) {\r\n      var handle = handles[i];\r\n\r\n      if (typeof handle !== 'function') {\r\n        var type = toString.call(handle);\r\n        var msg = 'Route.' + method + '() requires a callback function but got a ' + type\r\n        throw new Error(msg);\r\n      }\r\n\r\n      debug('%s %o', method, this.path)\r\n\r\n      var layer = Layer('/', {}, handle);\r\n      layer.method = method;\r\n\r\n      this.methods[method] = true;\r\n      this.stack.push(layer);\r\n    }\r\n\r\n    return this;\r\n  };\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/express/lib/router/route.js b/backend/node_modules/express/lib/router/route.js
--- a/backend/node_modules/express/lib/router/route.js	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/express/lib/router/route.js	(date 1710190086785)
@@ -60,7 +60,10 @@
     return true;
   }
 
-  var name = method.toLowerCase();
+  // normalize name
+  var name = typeof method === 'string'
+    ? method.toLowerCase()
+    : method
 
   if (name === 'head' && !this.methods['head']) {
     name = 'get';
@@ -103,8 +106,10 @@
   if (stack.length === 0) {
     return done();
   }
+  var method = typeof req.method === 'string'
+    ? req.method.toLowerCase()
+    : req.method
 
-  var method = req.method.toLowerCase();
   if (method === 'head' && !this.methods['head']) {
     method = 'get';
   }
Index: backend/node_modules/body-parser/lib/types/json.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * body-parser\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar bytes = require('bytes')\r\nvar contentType = require('content-type')\r\nvar createError = require('http-errors')\r\nvar debug = require('debug')('body-parser:json')\r\nvar read = require('../read')\r\nvar typeis = require('type-is')\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = json\r\n\r\n/**\r\n * RegExp to match the first non-space in a string.\r\n *\r\n * Allowed whitespace is defined in RFC 7159:\r\n *\r\n *    ws = *(\r\n *            %x20 /              ; Space\r\n *            %x09 /              ; Horizontal tab\r\n *            %x0A /              ; Line feed or New line\r\n *            %x0D )              ; Carriage return\r\n */\r\n\r\nvar FIRST_CHAR_REGEXP = /^[\\x20\\x09\\x0a\\x0d]*([^\\x20\\x09\\x0a\\x0d])/ // eslint-disable-line no-control-regex\r\n\r\n/**\r\n * Create a middleware to parse JSON bodies.\r\n *\r\n * @param {object} [options]\r\n * @return {function}\r\n * @public\r\n */\r\n\r\nfunction json (options) {\r\n  var opts = options || {}\r\n\r\n  var limit = typeof opts.limit !== 'number'\r\n    ? bytes.parse(opts.limit || '100kb')\r\n    : opts.limit\r\n  var inflate = opts.inflate !== false\r\n  var reviver = opts.reviver\r\n  var strict = opts.strict !== false\r\n  var type = opts.type || 'application/json'\r\n  var verify = opts.verify || false\r\n\r\n  if (verify !== false && typeof verify !== 'function') {\r\n    throw new TypeError('option verify must be function')\r\n  }\r\n\r\n  // create the appropriate type checking function\r\n  var shouldParse = typeof type !== 'function'\r\n    ? typeChecker(type)\r\n    : type\r\n\r\n  function parse (body) {\r\n    if (body.length === 0) {\r\n      // special-case empty json body, as it's a common client-side mistake\r\n      // TODO: maybe make this configurable or part of \"strict\" option\r\n      return {}\r\n    }\r\n\r\n    if (strict) {\r\n      var first = firstchar(body)\r\n\r\n      if (first !== '{' && first !== '[') {\r\n        debug('strict violation')\r\n        throw createStrictSyntaxError(body, first)\r\n      }\r\n    }\r\n\r\n    try {\r\n      debug('parse json')\r\n      return JSON.parse(body, reviver)\r\n    } catch (e) {\r\n      throw normalizeJsonSyntaxError(e, {\r\n        message: e.message,\r\n        stack: e.stack\r\n      })\r\n    }\r\n  }\r\n\r\n  return function jsonParser (req, res, next) {\r\n    if (req._body) {\r\n      debug('body already parsed')\r\n      next()\r\n      return\r\n    }\r\n\r\n    req.body = req.body || {}\r\n\r\n    // skip requests without bodies\r\n    if (!typeis.hasBody(req)) {\r\n      debug('skip empty body')\r\n      next()\r\n      return\r\n    }\r\n\r\n    debug('content-type %j', req.headers['content-type'])\r\n\r\n    // determine if request should be parsed\r\n    if (!shouldParse(req)) {\r\n      debug('skip parsing')\r\n      next()\r\n      return\r\n    }\r\n\r\n    // assert charset per RFC 7159 sec 8.1\r\n    var charset = getCharset(req) || 'utf-8'\r\n    if (charset.slice(0, 4) !== 'utf-') {\r\n      debug('invalid charset')\r\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\r\n        charset: charset,\r\n        type: 'charset.unsupported'\r\n      }))\r\n      return\r\n    }\r\n\r\n    // read\r\n    read(req, res, next, parse, debug, {\r\n      encoding: charset,\r\n      inflate: inflate,\r\n      limit: limit,\r\n      verify: verify\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Create strict violation syntax error matching native error.\r\n *\r\n * @param {string} str\r\n * @param {string} char\r\n * @return {Error}\r\n * @private\r\n */\r\n\r\nfunction createStrictSyntaxError (str, char) {\r\n  var index = str.indexOf(char)\r\n  var partial = index !== -1\r\n    ? str.substring(0, index) + '#'\r\n    : ''\r\n\r\n  try {\r\n    JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')\r\n  } catch (e) {\r\n    return normalizeJsonSyntaxError(e, {\r\n      message: e.message.replace('#', char),\r\n      stack: e.stack\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Get the first non-whitespace character in a string.\r\n *\r\n * @param {string} str\r\n * @return {function}\r\n * @private\r\n */\r\n\r\nfunction firstchar (str) {\r\n  var match = FIRST_CHAR_REGEXP.exec(str)\r\n\r\n  return match\r\n    ? match[1]\r\n    : undefined\r\n}\r\n\r\n/**\r\n * Get the charset of a request.\r\n *\r\n * @param {object} req\r\n * @api private\r\n */\r\n\r\nfunction getCharset (req) {\r\n  try {\r\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\r\n  } catch (e) {\r\n    return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Normalize a SyntaxError for JSON.parse.\r\n *\r\n * @param {SyntaxError} error\r\n * @param {object} obj\r\n * @return {SyntaxError}\r\n */\r\n\r\nfunction normalizeJsonSyntaxError (error, obj) {\r\n  var keys = Object.getOwnPropertyNames(error)\r\n\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i]\r\n    if (key !== 'stack' && key !== 'message') {\r\n      delete error[key]\r\n    }\r\n  }\r\n\r\n  // replace stack before message for Node.js 0.10 and below\r\n  error.stack = obj.stack.replace(error.message, obj.message)\r\n  error.message = obj.message\r\n\r\n  return error\r\n}\r\n\r\n/**\r\n * Get the simple type checker.\r\n *\r\n * @param {string} type\r\n * @return {function}\r\n */\r\n\r\nfunction typeChecker (type) {\r\n  return function checkType (req) {\r\n    return Boolean(typeis(req, type))\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/backend/node_modules/body-parser/lib/types/json.js b/backend/node_modules/body-parser/lib/types/json.js
--- a/backend/node_modules/body-parser/lib/types/json.js	(revision e0d971b1e6f45d401e2dda465d824878bca879b4)
+++ b/backend/node_modules/body-parser/lib/types/json.js	(date 1710190086704)
@@ -39,6 +39,9 @@
 
 var FIRST_CHAR_REGEXP = /^[\x20\x09\x0a\x0d]*([^\x20\x09\x0a\x0d])/ // eslint-disable-line no-control-regex
 
+var JSON_SYNTAX_CHAR = '#'
+var JSON_SYNTAX_REGEXP = /#+/g
+
 /**
  * Create a middleware to parse JSON bodies.
  *
@@ -152,15 +155,23 @@
 
 function createStrictSyntaxError (str, char) {
   var index = str.indexOf(char)
-  var partial = index !== -1
-    ? str.substring(0, index) + '#'
-    : ''
+  var partial = ''
+
+  if (index !== -1) {
+    partial = str.substring(0, index) + JSON_SYNTAX_CHAR
+
+    for (var i = index + 1; i < str.length; i++) {
+      partial += JSON_SYNTAX_CHAR
+    }
+  }
 
   try {
     JSON.parse(partial); /* istanbul ignore next */ throw new SyntaxError('strict violation')
   } catch (e) {
     return normalizeJsonSyntaxError(e, {
-      message: e.message.replace('#', char),
+      message: e.message.replace(JSON_SYNTAX_REGEXP, function (placeholder) {
+        return str.substring(index, index + placeholder.length)
+      }),
       stack: e.stack
     })
   }
